ARM GAS  /tmp/cch5Qmdz.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Eagle_TRT.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.next,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	next:
  25              	.LVL0:
  26              	.LFB144:
  27              		.file 1 "Src/Eagle_TRT.c"
   1:Src/Eagle_TRT.c **** #include "Eagle_TRT.h"
   2:Src/Eagle_TRT.c **** #include "stm32f7xx_hal_conf.h"
   3:Src/Eagle_TRT.c **** 
   4:Src/Eagle_TRT.c **** /*
   5:Src/Eagle_TRT.c ****  *Driver for all the stm in the Eagle_TRT veichle
   6:Src/Eagle_TRT.c ****  *incude this driver in the main file
   7:Src/Eagle_TRT.c ****  *you can't use all the functions unless you set up the CubeMx project correctly
   8:Src/Eagle_TRT.c **** */
   9:Src/Eagle_TRT.c **** 
  10:Src/Eagle_TRT.c **** //----------------ENCODER----------------//
  11:Src/Eagle_TRT.c **** /*
  12:Src/Eagle_TRT.c ****  *To use encoder functions you have to initialize two timers, one for the clock and one to generate
  13:Src/Eagle_TRT.c ****  *To get the rotational speed of the encoder, you can setup the interrupt timer and call 'encoder_t
  14:Src/Eagle_TRT.c ****  *you have to declare a variable and pass it as argument to the encoder_tim_interrupt() function.
  15:Src/Eagle_TRT.c ****  *The porpouse of that variable is to switch from the three phases needed to calculate the rotation
  16:Src/Eagle_TRT.c ****  *The first and the second phases are to request two angles from the encoder, then third is to calc
  17:Src/Eagle_TRT.c ****  *For the configuration of the first timer go to the description of the read_encoder() function.
  18:Src/Eagle_TRT.c ****  *For the configuration of the second timer you have to configure it to generate an interrupt.
  19:Src/Eagle_TRT.c ****  *That interrupt must be long enough to calculate a speed but not too long because you have to get 
  20:Src/Eagle_TRT.c ****  *
  21:Src/Eagle_TRT.c ****  *working settings:
  22:Src/Eagle_TRT.c ****  *interrupt timer -> prescaler 36, counter period 1000
  23:Src/Eagle_TRT.c ****  *timer2 -> prescaler = 18, counter period = 65500
  24:Src/Eagle_TRT.c ****  *pin PC8 = data in
  25:Src/Eagle_TRT.c ****  *pin PC9 = clock pin
  26:Src/Eagle_TRT.c ****  *angles_array[15]
  27:Src/Eagle_TRT.c **** */
  28:Src/Eagle_TRT.c **** 
  29:Src/Eagle_TRT.c **** //----------------IMU----------------//
  30:Src/Eagle_TRT.c **** /*
  31:Src/Eagle_TRT.c ****  *Setup SPI port to communicate with the sensor
ARM GAS  /tmp/cch5Qmdz.s 			page 2


  32:Src/Eagle_TRT.c ****  *Call gyro_init() and magn_accel_init() to setup the sensor
  33:Src/Eagle_TRT.c ****  *If you want to calibrate the sensor call gyro_calib() and accel_calib().
  34:Src/Eagle_TRT.c ****  *You can read the x, y, z data from the Gyroscope by calling gyro_read()
  35:Src/Eagle_TRT.c ****  *You can read the x, y, z data from the Gyroscope by calling accel_read()
  36:Src/Eagle_TRT.c **** */
  37:Src/Eagle_TRT.c **** 
  38:Src/Eagle_TRT.c **** #ifdef HAL_SPI_MODULE_ENABLED
  39:Src/Eagle_TRT.c **** #include "stm32f4xx_hal_spi.h"
  40:Src/Eagle_TRT.c **** 
  41:Src/Eagle_TRT.c **** extern TIM_HandleTypeDef htim2;
  42:Src/Eagle_TRT.c **** extern UART_HandleTypeDef huart2;
  43:Src/Eagle_TRT.c **** 
  44:Src/Eagle_TRT.c **** ///IMU VARIABLES///
  45:Src/Eagle_TRT.c **** uint8_t ZERO = 0x00;
  46:Src/Eagle_TRT.c **** uint8_t WHO_AM_I_G = 0x8F;
  47:Src/Eagle_TRT.c **** uint8_t WHO_AM_I_G_VAL;
  48:Src/Eagle_TRT.c **** uint8_t WHO_AM_I_XM = 0x8F;
  49:Src/Eagle_TRT.c **** uint8_t WHO_AM_I_XM_VAL;
  50:Src/Eagle_TRT.c **** 
  51:Src/Eagle_TRT.c **** uint8_t CTRL_REG1_G_ADD = 0x20;
  52:Src/Eagle_TRT.c **** uint8_t CTRL_REG1_G_VAL = 0x0F;
  53:Src/Eagle_TRT.c **** uint8_t CTRL_REG4_G_ADD = 0x23;
  54:Src/Eagle_TRT.c **** uint8_t CTRL_REG4_G_VAL = 0x10;
  55:Src/Eagle_TRT.c **** 
  56:Src/Eagle_TRT.c **** uint8_t CTRL_REG1_XM_ADD = 0x20;
  57:Src/Eagle_TRT.c **** uint8_t CTRL_REG1_XM_VAL = 0xA7;
  58:Src/Eagle_TRT.c **** uint8_t CTRL_REG2_XM_ADD = 0x21;
  59:Src/Eagle_TRT.c **** uint8_t CTRL_REG2_XM_VAL = 0x08;
  60:Src/Eagle_TRT.c **** uint8_t CTRL_REG5_XM_ADD = 0x24;
  61:Src/Eagle_TRT.c **** uint8_t CTRL_REG5_XM_VAL = 0x70;
  62:Src/Eagle_TRT.c **** uint8_t CTRL_REG6_XM_ADD = 0x25;
  63:Src/Eagle_TRT.c **** uint8_t CTRL_REG6_XM_VAL = 0x20;
  64:Src/Eagle_TRT.c **** uint8_t CTRL_REG7_XM_ADD = 0x26;
  65:Src/Eagle_TRT.c **** uint8_t CTRL_REG7_XM_VAL = 0x00;
  66:Src/Eagle_TRT.c **** 
  67:Src/Eagle_TRT.c **** // GYROSCOPE SCALE SETTING
  68:Src/Eagle_TRT.c **** uint8_t CTRL_REG4_G = 0x23;
  69:Src/Eagle_TRT.c **** 
  70:Src/Eagle_TRT.c **** uint8_t SCL_G_245 = 0x00;
  71:Src/Eagle_TRT.c **** uint8_t SCL_G_500 = 0x10;
  72:Src/Eagle_TRT.c **** uint8_t SCL_G_1000 = 0x20;
  73:Src/Eagle_TRT.c **** uint8_t SCL_G_2000 = 0x30;
  74:Src/Eagle_TRT.c **** 
  75:Src/Eagle_TRT.c **** // ACCELERORMETER SCALE SETTING
  76:Src/Eagle_TRT.c **** uint8_t CTRL_REG2_XM = 0x21;
  77:Src/Eagle_TRT.c **** 
  78:Src/Eagle_TRT.c **** uint8_t SCL_A_2 = 0x00;
  79:Src/Eagle_TRT.c **** uint8_t SCL_A_4 = 0x08;
  80:Src/Eagle_TRT.c **** uint8_t SCL_A_6 = 0x10;
  81:Src/Eagle_TRT.c **** uint8_t SCL_A_8 = 0x18;
  82:Src/Eagle_TRT.c **** uint8_t SCL_A_16 = 0x20;
  83:Src/Eagle_TRT.c **** 
  84:Src/Eagle_TRT.c **** // MAGNETORMETER SCALE SETTING
  85:Src/Eagle_TRT.c **** uint8_t CTRL_REG6_XM = 0x25;
  86:Src/Eagle_TRT.c **** 
  87:Src/Eagle_TRT.c **** uint8_t SCL_M_2 = 0x00;
  88:Src/Eagle_TRT.c **** uint8_t SCL_M_4 = 0x20;
ARM GAS  /tmp/cch5Qmdz.s 			page 3


  89:Src/Eagle_TRT.c **** uint8_t SCL_M_8 = 0x40;
  90:Src/Eagle_TRT.c **** uint8_t SCL_M_12 = 0x60;
  91:Src/Eagle_TRT.c **** 
  92:Src/Eagle_TRT.c **** // OUTPUT REG
  93:Src/Eagle_TRT.c **** uint8_t OUT_X_L_G_ADD = 0xA8;
  94:Src/Eagle_TRT.c **** uint8_t OUT_X_H_G_ADD = 0xA9;
  95:Src/Eagle_TRT.c **** uint8_t OUT_Y_L_G_ADD = 0xAA;
  96:Src/Eagle_TRT.c **** uint8_t OUT_Y_H_G_ADD = 0xAB;
  97:Src/Eagle_TRT.c **** uint8_t OUT_Z_L_G_ADD = 0xAC;
  98:Src/Eagle_TRT.c **** uint8_t OUT_Z_H_G_ADD = 0xAD;
  99:Src/Eagle_TRT.c **** 
 100:Src/Eagle_TRT.c **** uint8_t OUT_X_L_A_ADD = 0xA8;
 101:Src/Eagle_TRT.c **** uint8_t OUT_X_H_A_ADD = 0xA9;
 102:Src/Eagle_TRT.c **** uint8_t OUT_Y_L_A_ADD = 0xAA;
 103:Src/Eagle_TRT.c **** uint8_t OUT_Y_H_A_ADD = 0xAB;
 104:Src/Eagle_TRT.c **** uint8_t OUT_Z_L_A_ADD = 0xAC;
 105:Src/Eagle_TRT.c **** uint8_t OUT_Z_H_A_ADD = 0xAD;
 106:Src/Eagle_TRT.c **** 
 107:Src/Eagle_TRT.c **** imu_stc accel;
 108:Src/Eagle_TRT.c **** imu_stc gyro;
 109:Src/Eagle_TRT.c **** can_stc can;
 110:Src/Eagle_TRT.c **** 
 111:Src/Eagle_TRT.c **** void send_config(imu_stc *imu, GPIO_TypeDef *pinx, uint16_t pinn, uint8_t *addr, uint8_t *val)
 112:Src/Eagle_TRT.c **** {
 113:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(pinx, pinn, GPIO_PIN_RESET); ///CS_InUse to 0
 114:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0;					   //set counter to 0
 115:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 116:Src/Eagle_TRT.c **** 	{
 117:Src/Eagle_TRT.c **** 	}										  //delay (must be >5ns)
 118:Src/Eagle_TRT.c **** 	HAL_SPI_Transmit(imu->hspi, addr, 1, 10); ///Writing the address
 119:Src/Eagle_TRT.c **** 	HAL_SPI_Transmit(imu->hspi, val, 1, 10);  ///Writing 0b00001111 to enable PowerMode and x,y,z axis
 120:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0;				  //set counter to 0
 121:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 122:Src/Eagle_TRT.c **** 	{
 123:Src/Eagle_TRT.c **** 	}											 //delay (must be >5ns)
 124:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(pinx, pinn, GPIO_PIN_SET); ///CS_InUse to 1
 125:Src/Eagle_TRT.c **** }
 126:Src/Eagle_TRT.c **** 
 127:Src/Eagle_TRT.c **** //accelerometer, gyroscope and magnetometer initialization
 128:Src/Eagle_TRT.c **** //call this function before requesting data from the sensor
 129:Src/Eagle_TRT.c **** //hspi = pointer to the spi port defined
 130:Src/Eagle_TRT.c **** void LSMD9S0_accel_gyro_init(imu_stc *accel, imu_stc *gyro)
 131:Src/Eagle_TRT.c **** {
 132:Src/Eagle_TRT.c **** 
 133:Src/Eagle_TRT.c **** 	// Wake Up Gyro, enabling x, y, z axis
 134:Src/Eagle_TRT.c **** 	send_config(gyro, gyro->GPIOx_InUse, gyro->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG1_G_ADD, (uint8_t *
 135:Src/Eagle_TRT.c **** 
 136:Src/Eagle_TRT.c **** 	HAL_Delay(1);
 137:Src/Eagle_TRT.c **** 
 138:Src/Eagle_TRT.c **** 	// Wake Up Accel, enabling x, y, z axis
 139:Src/Eagle_TRT.c **** 	send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG1_XM_ADD, (uint8
 140:Src/Eagle_TRT.c **** 	HAL_Delay(1);
 141:Src/Eagle_TRT.c **** 
 142:Src/Eagle_TRT.c **** 	send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG5_XM_ADD, (uint8
 143:Src/Eagle_TRT.c **** 	HAL_Delay(1);
 144:Src/Eagle_TRT.c **** 	send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG6_XM_ADD, (uint8
 145:Src/Eagle_TRT.c **** 	HAL_Delay(1);
ARM GAS  /tmp/cch5Qmdz.s 			page 4


 146:Src/Eagle_TRT.c **** 	send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG7_XM_ADD, (uint8
 147:Src/Eagle_TRT.c **** 	HAL_Delay(1);
 148:Src/Eagle_TRT.c **** 
 149:Src/Eagle_TRT.c **** 	// Set Gyro scale range
 150:Src/Eagle_TRT.c **** 	switch (gyro->scale)
 151:Src/Eagle_TRT.c **** 	{
 152:Src/Eagle_TRT.c **** 	case 245:
 153:Src/Eagle_TRT.c **** 		send_config(gyro, gyro->GPIOx_InUse, gyro->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG4_G, (uint8_t *)&S
 154:Src/Eagle_TRT.c **** 		break;
 155:Src/Eagle_TRT.c **** 	case 500:
 156:Src/Eagle_TRT.c **** 		send_config(gyro, gyro->GPIOx_InUse, gyro->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG4_G, (uint8_t *)&S
 157:Src/Eagle_TRT.c **** 		break;
 158:Src/Eagle_TRT.c **** 	case 1000:
 159:Src/Eagle_TRT.c **** 		send_config(gyro, gyro->GPIOx_InUse, gyro->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG4_G, (uint8_t *)&S
 160:Src/Eagle_TRT.c **** 		break;
 161:Src/Eagle_TRT.c **** 	case 2000:
 162:Src/Eagle_TRT.c **** 		send_config(gyro, gyro->GPIOx_InUse, gyro->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG4_G, (uint8_t *)&S
 163:Src/Eagle_TRT.c **** 		break;
 164:Src/Eagle_TRT.c **** 	default:
 165:Src/Eagle_TRT.c **** 		send_config(gyro, gyro->GPIOx_InUse, gyro->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG4_G, (uint8_t *)&S
 166:Src/Eagle_TRT.c **** 		gyro->scale = 500;
 167:Src/Eagle_TRT.c **** 		break;
 168:Src/Eagle_TRT.c **** 	}
 169:Src/Eagle_TRT.c **** 	HAL_Delay(1);
 170:Src/Eagle_TRT.c **** 
 171:Src/Eagle_TRT.c **** 	// Set Accel scale range
 172:Src/Eagle_TRT.c **** 	switch (accel->scale)
 173:Src/Eagle_TRT.c **** 	{
 174:Src/Eagle_TRT.c **** 	case 2:
 175:Src/Eagle_TRT.c **** 		send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG2_XM, (uint8_t 
 176:Src/Eagle_TRT.c **** 		break;
 177:Src/Eagle_TRT.c **** 	case 4:
 178:Src/Eagle_TRT.c **** 		send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG2_XM, (uint8_t 
 179:Src/Eagle_TRT.c **** 		break;
 180:Src/Eagle_TRT.c **** 	case 6:
 181:Src/Eagle_TRT.c **** 		send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG2_XM, (uint8_t 
 182:Src/Eagle_TRT.c **** 		break;
 183:Src/Eagle_TRT.c **** 	case 8:
 184:Src/Eagle_TRT.c **** 		send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG2_XM, (uint8_t 
 185:Src/Eagle_TRT.c **** 		break;
 186:Src/Eagle_TRT.c **** 	case 16:
 187:Src/Eagle_TRT.c **** 		send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG2_XM, (uint8_t 
 188:Src/Eagle_TRT.c **** 		break;
 189:Src/Eagle_TRT.c **** 	default:
 190:Src/Eagle_TRT.c **** 		send_config(accel, accel->GPIOx_InUse, accel->GPIO_Pin_InUse, (uint8_t *)&CTRL_REG2_XM, (uint8_t 
 191:Src/Eagle_TRT.c **** 		accel->scale = 4;
 192:Src/Eagle_TRT.c **** 		break;
 193:Src/Eagle_TRT.c **** 	}
 194:Src/Eagle_TRT.c **** 
 195:Src/Eagle_TRT.c **** 	HAL_Delay(1);
 196:Src/Eagle_TRT.c **** 	/*
 197:Src/Eagle_TRT.c **** 	HAL_UART_Transmit(&huart2, (uint8_t *)"<IMU> Initialization -> Done\r\n", strlen("<IMU> Initializa
 198:Src/Eagle_TRT.c **** }
 199:Src/Eagle_TRT.c **** 
 200:Src/Eagle_TRT.c **** float LSMD9S0_read(imu_stc *imu)
 201:Src/Eagle_TRT.c **** {
 202:Src/Eagle_TRT.c **** 
ARM GAS  /tmp/cch5Qmdz.s 			page 5


 203:Src/Eagle_TRT.c **** 	uint8_t OUT_L_VAL;
 204:Src/Eagle_TRT.c **** 	uint8_t OUT_H_VAL;
 205:Src/Eagle_TRT.c **** 
 206:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(imu->GPIOx_InUse, imu->GPIO_Pin_InUse, GPIO_PIN_RESET); ///CS_InUse to 0
 207:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0;												  //set counter to 0
 208:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 209:Src/Eagle_TRT.c **** 	{
 210:Src/Eagle_TRT.c **** 	} //delay (must be >5ns)
 211:Src/Eagle_TRT.c **** 
 212:Src/Eagle_TRT.c **** 	HAL_SPI_Transmit(imu->hspi, &(imu->REG_L), 1, 10);		  ///Writing LOW address
 213:Src/Eagle_TRT.c **** 	HAL_SPI_Receive(imu->hspi, (uint8_t *)&OUT_L_VAL, 1, 10); ///Saving LOW data
 214:Src/Eagle_TRT.c **** 
 215:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0; //set counter to 0
 216:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 217:Src/Eagle_TRT.c **** 	{
 218:Src/Eagle_TRT.c **** 	}																		//delay (must be >5ns)
 219:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(imu->GPIOx_InUse, imu->GPIO_Pin_InUse, GPIO_PIN_SET); ///CS_InUse to 1
 220:Src/Eagle_TRT.c **** 
 221:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0; //set counter to 0
 222:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 80)
 223:Src/Eagle_TRT.c **** 	{
 224:Src/Eagle_TRT.c **** 	}																		  //delay (must be >5ns)
 225:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(imu->GPIOx_InUse, imu->GPIO_Pin_InUse, GPIO_PIN_RESET); ///CS_InUse to 0
 226:Src/Eagle_TRT.c **** 
 227:Src/Eagle_TRT.c **** 	HAL_SPI_Transmit(imu->hspi, &(imu->REG_H), 1, 10);		  ///Writing HIGH address
 228:Src/Eagle_TRT.c **** 	HAL_SPI_Receive(imu->hspi, (uint8_t *)&OUT_H_VAL, 1, 10); ///Saving HIGH data
 229:Src/Eagle_TRT.c **** 
 230:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0; //set counter to 0
 231:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 232:Src/Eagle_TRT.c **** 	{
 233:Src/Eagle_TRT.c **** 	} //delay (must be >5ns)
 234:Src/Eagle_TRT.c **** 
 235:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(imu->GPIOx_InUse, imu->GPIO_Pin_InUse, GPIO_PIN_SET); ///CS_InUse to 1
 236:Src/Eagle_TRT.c **** 
 237:Src/Eagle_TRT.c **** 	///CALCULATING ROTATION
 238:Src/Eagle_TRT.c **** 	uint32_t value = (OUT_H_VAL << 8) | OUT_L_VAL; ///Calculating axis value shifting and using a logi
 239:Src/Eagle_TRT.c **** 	float axis = value;
 240:Src/Eagle_TRT.c **** 
 241:Src/Eagle_TRT.c **** 	return axis;
 242:Src/Eagle_TRT.c **** }
 243:Src/Eagle_TRT.c **** 
 244:Src/Eagle_TRT.c **** int LSMD9S0_check(imu_stc *imu)
 245:Src/Eagle_TRT.c **** {
 246:Src/Eagle_TRT.c **** 
 247:Src/Eagle_TRT.c **** 	int check = 0;
 248:Src/Eagle_TRT.c **** 
 249:Src/Eagle_TRT.c **** 	///AXEL/MAGN ARE WORKING
 250:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET); ///CS_XM to 0
 251:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0;							  //set counter to 0
 252:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 253:Src/Eagle_TRT.c **** 	{
 254:Src/Eagle_TRT.c **** 	}															 //delay (must be >5ns)
 255:Src/Eagle_TRT.c **** 	HAL_SPI_Transmit(imu->hspi, (uint8_t *)&WHO_AM_I_XM, 1, 10); ///Writing on register ----> (uint8_t
 256:Src/Eagle_TRT.c **** 	HAL_SPI_Receive(imu->hspi, (uint8_t *)&WHO_AM_I_XM_VAL, 1, 10);
 257:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0; //set counter to 0
 258:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 259:Src/Eagle_TRT.c **** 	{
ARM GAS  /tmp/cch5Qmdz.s 			page 6


 260:Src/Eagle_TRT.c **** 	}													//delay (must be >5ns)
 261:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET); ///CS_XM to 1
 262:Src/Eagle_TRT.c **** 
 263:Src/Eagle_TRT.c **** 	///GYRO IS WORKING
 264:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET); ///CS_G to 0
 265:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0;							  //set counter to 0
 266:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 267:Src/Eagle_TRT.c **** 	{
 268:Src/Eagle_TRT.c **** 	}															//delay (must be >5ns)
 269:Src/Eagle_TRT.c **** 	HAL_SPI_Transmit(imu->hspi, (uint8_t *)&WHO_AM_I_G, 1, 10); ///Writing on register ----> (uint8_t*
 270:Src/Eagle_TRT.c **** 	//HAL_SPI_TransmitReceive(imu->hspi, (uint8_t*)&ZERO, (uint8_t*)&WHO_AM_I_G_VAL, 1, 10); ///Readin
 271:Src/Eagle_TRT.c **** 	HAL_SPI_Receive(imu->hspi, (uint8_t *)&WHO_AM_I_G_VAL, 1, 10);
 272:Src/Eagle_TRT.c **** 	htim2.Instance->CNT = 0; //set counter to 0
 273:Src/Eagle_TRT.c **** 	while (htim2.Instance->CNT <= 20)
 274:Src/Eagle_TRT.c **** 	{
 275:Src/Eagle_TRT.c **** 	}													//delay (must be >5ns)
 276:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET); ///CS_G to 1
 277:Src/Eagle_TRT.c **** 
 278:Src/Eagle_TRT.c **** 	char txt[100];
 279:Src/Eagle_TRT.c **** 	/*
 280:Src/Eagle_TRT.c **** 	sprintf(txt, "Gyro, Accel check: %d\t%d\r\n", WHO_AM_I_G_VAL, WHO_AM_I_XM_VAL);
 281:Src/Eagle_TRT.c **** 	HAL_UART_Transmit(&huart2, txt, strlen(txt), 10);*/
 282:Src/Eagle_TRT.c **** 
 283:Src/Eagle_TRT.c **** 	///AXEL/GYRO STATUS
 284:Src/Eagle_TRT.c **** 	if ((WHO_AM_I_G_VAL == 212) & (WHO_AM_I_XM_VAL == 73))
 285:Src/Eagle_TRT.c **** 	{
 286:Src/Eagle_TRT.c **** 		check = 1;
 287:Src/Eagle_TRT.c **** 	}
 288:Src/Eagle_TRT.c **** 	else
 289:Src/Eagle_TRT.c **** 	{
 290:Src/Eagle_TRT.c **** 		check = 0;
 291:Src/Eagle_TRT.c **** 	}
 292:Src/Eagle_TRT.c **** 
 293:Src/Eagle_TRT.c **** 	return check;
 294:Src/Eagle_TRT.c **** }
 295:Src/Eagle_TRT.c **** 
 296:Src/Eagle_TRT.c **** // Request inital axis values, average them, set as initial offsets
 297:Src/Eagle_TRT.c **** void LSM9DS0_calibration(imu_stc *imu)
 298:Src/Eagle_TRT.c **** {
 299:Src/Eagle_TRT.c **** 	double x = 0, y = 0, z = 0;
 300:Src/Eagle_TRT.c **** 	int iterations = 200;
 301:Src/Eagle_TRT.c **** 	for (int i = 0; i < iterations; i++)
 302:Src/Eagle_TRT.c **** 	{
 303:Src/Eagle_TRT.c **** 		LSMD9S0_accel_read(imu);
 304:Src/Eagle_TRT.c **** 		//imu_elaborate_data(imu);
 305:Src/Eagle_TRT.c **** 		x += imu->x;
 306:Src/Eagle_TRT.c **** 		y += imu->y;
 307:Src/Eagle_TRT.c **** 		z += imu->z;
 308:Src/Eagle_TRT.c **** 		HAL_Delay(1);
 309:Src/Eagle_TRT.c **** 	}
 310:Src/Eagle_TRT.c **** 
 311:Src/Eagle_TRT.c **** 	imu->x_offset = x / iterations;
 312:Src/Eagle_TRT.c **** 	imu->y_offset = y / iterations;
 313:Src/Eagle_TRT.c **** 	imu->z_offset = z / iterations;
 314:Src/Eagle_TRT.c **** 
 315:Src/Eagle_TRT.c **** 	imu->calibration_done = 1;
 316:Src/Eagle_TRT.c **** }
ARM GAS  /tmp/cch5Qmdz.s 			page 7


 317:Src/Eagle_TRT.c **** 
 318:Src/Eagle_TRT.c **** //Reading G_axis values
 319:Src/Eagle_TRT.c **** //hspi = pointer to the spi port defined
 320:Src/Eagle_TRT.c **** //x = pointer gyroscope x variable
 321:Src/Eagle_TRT.c **** //y = pointer gyroscope y variable
 322:Src/Eagle_TRT.c **** //z = pointer gyroscope z variable
 323:Src/Eagle_TRT.c **** //x_offset = offset x value
 324:Src/Eagle_TRT.c **** //y_offset = offset y value
 325:Src/Eagle_TRT.c **** //z_offset = offset z value
 326:Src/Eagle_TRT.c **** void LSMD9S0_gyro_read(imu_stc *gyro)
 327:Src/Eagle_TRT.c **** {
 328:Src/Eagle_TRT.c **** 
 329:Src/Eagle_TRT.c **** 	gyro->REG_H = OUT_X_H_G_ADD;
 330:Src/Eagle_TRT.c **** 	gyro->REG_L = OUT_X_L_G_ADD;
 331:Src/Eagle_TRT.c **** 	gyro->x = LSMD9S0_read(gyro);
 332:Src/Eagle_TRT.c **** 
 333:Src/Eagle_TRT.c **** 	gyro->REG_H = OUT_Y_H_G_ADD;
 334:Src/Eagle_TRT.c **** 	gyro->REG_L = OUT_Y_L_G_ADD;
 335:Src/Eagle_TRT.c **** 	gyro->y = LSMD9S0_read(gyro);
 336:Src/Eagle_TRT.c **** 
 337:Src/Eagle_TRT.c **** 	gyro->REG_H = OUT_Z_H_G_ADD;
 338:Src/Eagle_TRT.c **** 	gyro->REG_L = OUT_Z_L_G_ADD;
 339:Src/Eagle_TRT.c **** 	gyro->z = LSMD9S0_read(gyro);
 340:Src/Eagle_TRT.c **** 
 341:Src/Eagle_TRT.c **** 	if (gyro->x > 32768)
 342:Src/Eagle_TRT.c **** 	{
 343:Src/Eagle_TRT.c **** 		gyro->x -= 65536;
 344:Src/Eagle_TRT.c **** 	}
 345:Src/Eagle_TRT.c **** 	if (gyro->y > 32768)
 346:Src/Eagle_TRT.c **** 	{
 347:Src/Eagle_TRT.c **** 		gyro->y -= 65536;
 348:Src/Eagle_TRT.c **** 	}
 349:Src/Eagle_TRT.c **** 	if (gyro->z > 32768)
 350:Src/Eagle_TRT.c **** 	{
 351:Src/Eagle_TRT.c **** 		gyro->z -= 65536;
 352:Src/Eagle_TRT.c **** 	}
 353:Src/Eagle_TRT.c **** 
 354:Src/Eagle_TRT.c **** 	gyro->x = gyro->x * ((float)gyro->scale / 32768);
 355:Src/Eagle_TRT.c **** 	gyro->y = gyro->y * ((float)gyro->scale / 32768);
 356:Src/Eagle_TRT.c **** 	gyro->z = gyro->z * ((float)gyro->scale / 32768);
 357:Src/Eagle_TRT.c **** 
 358:Src/Eagle_TRT.c **** 	gyro->x -= gyro->x_offset;
 359:Src/Eagle_TRT.c **** 	gyro->y -= gyro->y_offset;
 360:Src/Eagle_TRT.c **** 	gyro->z -= gyro->z_offset;
 361:Src/Eagle_TRT.c **** 
 362:Src/Eagle_TRT.c **** 	///AXEL/GYRO STATUS
 363:Src/Eagle_TRT.c **** 	if ((WHO_AM_I_G_VAL == 212) & (WHO_AM_I_XM_VAL == 73))
 364:Src/Eagle_TRT.c **** 	{
 365:Src/Eagle_TRT.c **** 		gyro->error_flag = 0;
 366:Src/Eagle_TRT.c **** 	}
 367:Src/Eagle_TRT.c **** 	else
 368:Src/Eagle_TRT.c **** 	{
 369:Src/Eagle_TRT.c **** 		gyro->error_flag = 1;
 370:Src/Eagle_TRT.c **** 	}
 371:Src/Eagle_TRT.c **** }
 372:Src/Eagle_TRT.c **** 
 373:Src/Eagle_TRT.c **** // Elaborating data
ARM GAS  /tmp/cch5Qmdz.s 			page 8


 374:Src/Eagle_TRT.c **** // Use the setted scale to calculate data in the correct ranges
 375:Src/Eagle_TRT.c **** // Aveage an array to remove noise
 376:Src/Eagle_TRT.c **** // Remove inital offset
 377:Src/Eagle_TRT.c **** void imu_elaborate_data(imu_stc *imu)
 378:Src/Eagle_TRT.c **** {
 379:Src/Eagle_TRT.c **** 	if (imu->x > 32768)
 380:Src/Eagle_TRT.c **** 	{
 381:Src/Eagle_TRT.c **** 		imu->x -= 65536;
 382:Src/Eagle_TRT.c **** 	}
 383:Src/Eagle_TRT.c **** 	if (imu->y > 32768)
 384:Src/Eagle_TRT.c **** 	{
 385:Src/Eagle_TRT.c **** 		imu->y -= 65536;
 386:Src/Eagle_TRT.c **** 	}
 387:Src/Eagle_TRT.c **** 	if (imu->z > 32768)
 388:Src/Eagle_TRT.c **** 	{
 389:Src/Eagle_TRT.c **** 		imu->z -= 65536;
 390:Src/Eagle_TRT.c **** 	}
 391:Src/Eagle_TRT.c **** 
 392:Src/Eagle_TRT.c **** 	imu->x = imu->x * ((float)imu->scale / 32768);
 393:Src/Eagle_TRT.c **** 	imu->y = imu->y * ((float)imu->scale / 32768);
 394:Src/Eagle_TRT.c **** 	imu->z = imu->z * ((float)imu->scale / 32768);
 395:Src/Eagle_TRT.c **** 
 396:Src/Eagle_TRT.c **** 	shift_array(imu->x_array, 10, imu->x);
 397:Src/Eagle_TRT.c **** 	shift_array(imu->y_array, 10, imu->y);
 398:Src/Eagle_TRT.c **** 	shift_array(imu->z_array, 10, imu->z);
 399:Src/Eagle_TRT.c **** 
 400:Src/Eagle_TRT.c **** 	imu->x = dynamic_average(imu->x_array, 10);
 401:Src/Eagle_TRT.c **** 	imu->y = dynamic_average(imu->y_array, 10);
 402:Src/Eagle_TRT.c **** 	imu->z = dynamic_average(imu->z_array, 10);
 403:Src/Eagle_TRT.c **** 
 404:Src/Eagle_TRT.c **** 	imu->x -= imu->x_offset;
 405:Src/Eagle_TRT.c **** 	imu->y -= imu->y_offset;
 406:Src/Eagle_TRT.c **** 	imu->z -= imu->z_offset;
 407:Src/Eagle_TRT.c **** }
 408:Src/Eagle_TRT.c **** 
 409:Src/Eagle_TRT.c **** ///Reading A_axis values
 410:Src/Eagle_TRT.c **** //hspi = pointer to the spi port defined
 411:Src/Eagle_TRT.c **** //x = pointer gyroscope x variable
 412:Src/Eagle_TRT.c **** //y = pointer gyroscope y variable
 413:Src/Eagle_TRT.c **** //z = pointer gyroscope z variable
 414:Src/Eagle_TRT.c **** //x_offset = offset x value
 415:Src/Eagle_TRT.c **** //y_offset = offset y value
 416:Src/Eagle_TRT.c **** //z_offset = offset z value
 417:Src/Eagle_TRT.c **** void LSMD9S0_accel_read(imu_stc *accel)
 418:Src/Eagle_TRT.c **** {
 419:Src/Eagle_TRT.c **** 
 420:Src/Eagle_TRT.c **** 	accel->REG_H = OUT_X_H_A_ADD;
 421:Src/Eagle_TRT.c **** 	accel->REG_L = OUT_X_L_A_ADD;
 422:Src/Eagle_TRT.c **** 	accel->x = LSMD9S0_read(accel);
 423:Src/Eagle_TRT.c **** 
 424:Src/Eagle_TRT.c **** 	accel->REG_H = OUT_Y_H_A_ADD;
 425:Src/Eagle_TRT.c **** 	accel->REG_L = OUT_Y_L_A_ADD;
 426:Src/Eagle_TRT.c **** 	accel->y = LSMD9S0_read(accel);
 427:Src/Eagle_TRT.c **** 
 428:Src/Eagle_TRT.c **** 	accel->REG_H = OUT_Z_H_A_ADD;
 429:Src/Eagle_TRT.c **** 	accel->REG_L = OUT_Z_L_A_ADD;
 430:Src/Eagle_TRT.c **** 	accel->z = LSMD9S0_read(accel);
ARM GAS  /tmp/cch5Qmdz.s 			page 9


 431:Src/Eagle_TRT.c **** 
 432:Src/Eagle_TRT.c **** 	if (accel->x > 32768)
 433:Src/Eagle_TRT.c **** 	{
 434:Src/Eagle_TRT.c **** 		accel->x -= 65536;
 435:Src/Eagle_TRT.c **** 	}
 436:Src/Eagle_TRT.c **** 	if (accel->y > 32768)
 437:Src/Eagle_TRT.c **** 	{
 438:Src/Eagle_TRT.c **** 		accel->y -= 65536;
 439:Src/Eagle_TRT.c **** 	}
 440:Src/Eagle_TRT.c **** 	if (accel->z > 32768)
 441:Src/Eagle_TRT.c **** 	{
 442:Src/Eagle_TRT.c **** 		accel->z -= 65536;
 443:Src/Eagle_TRT.c **** 	}
 444:Src/Eagle_TRT.c **** 
 445:Src/Eagle_TRT.c **** 	accel->x = accel->x * ((float)accel->scale / 32768);
 446:Src/Eagle_TRT.c **** 	accel->y = accel->y * ((float)accel->scale / 32768);
 447:Src/Eagle_TRT.c **** 	accel->z = accel->z * ((float)accel->scale / 32768);
 448:Src/Eagle_TRT.c **** 
 449:Src/Eagle_TRT.c **** 	accel->x -= accel->x_offset;
 450:Src/Eagle_TRT.c **** 	accel->y -= accel->y_offset;
 451:Src/Eagle_TRT.c **** 	accel->z -= accel->z_offset;
 452:Src/Eagle_TRT.c **** }
 453:Src/Eagle_TRT.c **** 
 454:Src/Eagle_TRT.c **** #endif
 455:Src/Eagle_TRT.c **** 
 456:Src/Eagle_TRT.c **** #ifdef HAL_CAN_MODULE_ENABLED
 457:Src/Eagle_TRT.c **** #include "stm32f4xx_hal_can.h"
 458:Src/Eagle_TRT.c **** //function that sends an array via CAN
 459:Src/Eagle_TRT.c **** //hcan = pointer to can port
 460:Src/Eagle_TRT.c **** //id = id of the message to be sent
 461:Src/Eagle_TRT.c **** //dataTx = pointer to array that contains the data to be sent
 462:Src/Eagle_TRT.c **** //size = size of the array
 463:Src/Eagle_TRT.c **** can_stc can;
 464:Src/Eagle_TRT.c **** int CAN_Send(can_stc *can)
 465:Src/Eagle_TRT.c **** {
 466:Src/Eagle_TRT.c **** 
 467:Src/Eagle_TRT.c **** 	uint32_t mailbox;
 468:Src/Eagle_TRT.c **** 	uint8_t flag = 0;
 469:Src/Eagle_TRT.c **** 
 470:Src/Eagle_TRT.c **** 	CAN_TxHeaderTypeDef TxHeader;
 471:Src/Eagle_TRT.c **** 	TxHeader.StdId = can->id;
 472:Src/Eagle_TRT.c **** 	TxHeader.IDE = CAN_ID_STD;
 473:Src/Eagle_TRT.c **** 	TxHeader.RTR = CAN_RTR_DATA;
 474:Src/Eagle_TRT.c **** 	TxHeader.DLC = can->size;
 475:Src/Eagle_TRT.c **** 	TxHeader.TransmitGlobalTime = DISABLE;
 476:Src/Eagle_TRT.c **** 
 477:Src/Eagle_TRT.c **** 	if (HAL_CAN_GetTxMailboxesFreeLevel(can->hcan) != 0 && HAL_CAN_IsTxMessagePending(can->hcan, CAN_T
 478:Src/Eagle_TRT.c **** 	{
 479:Src/Eagle_TRT.c **** 		HAL_CAN_AddTxMessage(can->hcan, &TxHeader, can->dataTx, &mailbox);
 480:Src/Eagle_TRT.c **** 		flag = 1;
 481:Src/Eagle_TRT.c **** 	}
 482:Src/Eagle_TRT.c **** 
 483:Src/Eagle_TRT.c **** 	return flag;
 484:Src/Eagle_TRT.c **** }
 485:Src/Eagle_TRT.c **** 
 486:Src/Eagle_TRT.c **** //receive a buffer from the CAN communication
 487:Src/Eagle_TRT.c **** //you can call this function in the callback of the CAN interrupt
ARM GAS  /tmp/cch5Qmdz.s 			page 10


 488:Src/Eagle_TRT.c **** //hcan = pointer to can port
 489:Src/Eagle_TRT.c **** //DataRx = pointer to the buffer you are receiveng
 490:Src/Eagle_TRT.c **** //size = size of the buffer you are using
 491:Src/Eagle_TRT.c **** int CAN_Receive(can_stc *can)
 492:Src/Eagle_TRT.c **** {
 493:Src/Eagle_TRT.c **** 
 494:Src/Eagle_TRT.c **** 	CAN_RxHeaderTypeDef RxHeader;
 495:Src/Eagle_TRT.c **** 
 496:Src/Eagle_TRT.c **** 	if (HAL_CAN_GetRxFifoFillLevel(can->hcan, CAN_RX_FIFO0) != 0)
 497:Src/Eagle_TRT.c **** 	{
 498:Src/Eagle_TRT.c **** 		HAL_CAN_GetRxMessage(can->hcan, CAN_RX_FIFO0, &RxHeader, can->dataRx);
 499:Src/Eagle_TRT.c **** 	}
 500:Src/Eagle_TRT.c **** 
 501:Src/Eagle_TRT.c **** 	int id = RxHeader.StdId;
 502:Src/Eagle_TRT.c **** 
 503:Src/Eagle_TRT.c **** 	return id;
 504:Src/Eagle_TRT.c **** }
 505:Src/Eagle_TRT.c **** #endif
 506:Src/Eagle_TRT.c **** 
 507:Src/Eagle_TRT.c **** #ifdef HAL_UART_MODULE_ENABLED
 508:Src/Eagle_TRT.c **** #include "stm32f7xx_hal_uart.h"
 509:Src/Eagle_TRT.c **** #include "malloc.h"
 510:Src/Eagle_TRT.c **** ///---- queue ---- ///
 511:Src/Eagle_TRT.c **** static int next(int ret, int dim)
 512:Src/Eagle_TRT.c **** {
  28              		.loc 1 512 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 513:Src/Eagle_TRT.c **** 
 514:Src/Eagle_TRT.c **** 	return (ret + 1) % dim;
  33              		.loc 1 514 2 view .LVU1
  34              		.loc 1 514 14 is_stmt 0 view .LVU2
  35 0000 0130     		adds	r0, r0, #1
  36              	.LVL1:
  37              		.loc 1 514 19 view .LVU3
  38 0002 90FBF1F3 		sdiv	r3, r0, r1
 515:Src/Eagle_TRT.c **** }
  39              		.loc 1 515 1 view .LVU4
  40 0006 01FB1300 		mls	r0, r1, r3, r0
  41              	.LVL2:
  42              		.loc 1 515 1 view .LVU5
  43 000a 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE144:
  47              		.section	.text.emptyp,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv5-d16
  54              	emptyp:
  55              	.LVL3:
  56              	.LFB146:
 516:Src/Eagle_TRT.c **** 
 517:Src/Eagle_TRT.c **** // Implementazione dinamica
ARM GAS  /tmp/cch5Qmdz.s 			page 11


 518:Src/Eagle_TRT.c **** void init(queue *q)
 519:Src/Eagle_TRT.c **** {
 520:Src/Eagle_TRT.c **** 
 521:Src/Eagle_TRT.c **** 	q->tail = q->head = 0;
 522:Src/Eagle_TRT.c **** 	q->dim = 40;
 523:Src/Eagle_TRT.c **** }
 524:Src/Eagle_TRT.c **** 
 525:Src/Eagle_TRT.c **** static int emptyp(const queue *q)
 526:Src/Eagle_TRT.c **** {
  57              		.loc 1 526 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
 527:Src/Eagle_TRT.c **** 
 528:Src/Eagle_TRT.c **** 	return (q->tail == q->head);
  62              		.loc 1 528 2 view .LVU7
  63              		.loc 1 528 11 is_stmt 0 view .LVU8
  64 0000 4268     		ldr	r2, [r0, #4]
  65              		.loc 1 528 22 view .LVU9
  66 0002 0068     		ldr	r0, [r0]
  67              	.LVL4:
 529:Src/Eagle_TRT.c **** }
  68              		.loc 1 529 1 view .LVU10
  69 0004 8242     		cmp	r2, r0
  70 0006 14BF     		ite	ne
  71 0008 0020     		movne	r0, #0
  72 000a 0120     		moveq	r0, #1
  73 000c 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE146:
  77              		.section	.text.fullp,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv5-d16
  84              	fullp:
  85              	.LVL5:
  86              	.LFB147:
 530:Src/Eagle_TRT.c **** 
 531:Src/Eagle_TRT.c **** static int fullp(const queue *q)
 532:Src/Eagle_TRT.c **** {
  87              		.loc 1 532 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 532 1 is_stmt 0 view .LVU12
  92 0000 10B5     		push	{r4, lr}
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 4, -8
  96              		.cfi_offset 14, -4
  97 0002 0446     		mov	r4, r0
 533:Src/Eagle_TRT.c **** 
 534:Src/Eagle_TRT.c **** 	return (next(q->tail, q->dim) == q->head);
  98              		.loc 1 534 2 is_stmt 1 view .LVU13
ARM GAS  /tmp/cch5Qmdz.s 			page 12


  99              		.loc 1 534 10 is_stmt 0 view .LVU14
 100 0004 8168     		ldr	r1, [r0, #8]
 101 0006 4068     		ldr	r0, [r0, #4]
 102              	.LVL6:
 103              		.loc 1 534 10 view .LVU15
 104 0008 FFF7FEFF 		bl	next
 105              	.LVL7:
 106              		.loc 1 534 36 view .LVU16
 107 000c 2368     		ldr	r3, [r4]
 535:Src/Eagle_TRT.c **** }
 108              		.loc 1 535 1 view .LVU17
 109 000e 9842     		cmp	r0, r3
 110 0010 14BF     		ite	ne
 111 0012 0020     		movne	r0, #0
 112 0014 0120     		moveq	r0, #1
 113 0016 10BD     		pop	{r4, pc}
 114              		.loc 1 535 1 view .LVU18
 115              		.cfi_endproc
 116              	.LFE147:
 118              		.section	.text.init,"ax",%progbits
 119              		.align	1
 120              		.global	init
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv5-d16
 126              	init:
 127              	.LVL8:
 128              	.LFB145:
 519:Src/Eagle_TRT.c **** 
 129              		.loc 1 519 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 521:Src/Eagle_TRT.c **** 	q->dim = 40;
 134              		.loc 1 521 2 view .LVU20
 521:Src/Eagle_TRT.c **** 	q->dim = 40;
 135              		.loc 1 521 20 is_stmt 0 view .LVU21
 136 0000 0023     		movs	r3, #0
 137 0002 0360     		str	r3, [r0]
 521:Src/Eagle_TRT.c **** 	q->dim = 40;
 138              		.loc 1 521 10 view .LVU22
 139 0004 4360     		str	r3, [r0, #4]
 522:Src/Eagle_TRT.c **** }
 140              		.loc 1 522 2 is_stmt 1 view .LVU23
 522:Src/Eagle_TRT.c **** }
 141              		.loc 1 522 9 is_stmt 0 view .LVU24
 142 0006 2823     		movs	r3, #40
 143 0008 8360     		str	r3, [r0, #8]
 523:Src/Eagle_TRT.c **** 
 144              		.loc 1 523 1 view .LVU25
 145 000a 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE145:
 149              		.section	.text.push,"ax",%progbits
 150              		.align	1
ARM GAS  /tmp/cch5Qmdz.s 			page 13


 151              		.global	push
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv5-d16
 157              	push:
 158              	.LVL9:
 159              	.LFB148:
 536:Src/Eagle_TRT.c **** 
 537:Src/Eagle_TRT.c **** int push(char *str, queue *q)
 538:Src/Eagle_TRT.c **** {
 160              		.loc 1 538 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		.loc 1 538 1 is_stmt 0 view .LVU27
 165 0000 70B5     		push	{r4, r5, r6, lr}
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
 172 0002 0546     		mov	r5, r0
 173 0004 0C46     		mov	r4, r1
 539:Src/Eagle_TRT.c **** 	int res;
 174              		.loc 1 539 2 is_stmt 1 view .LVU28
 540:Src/Eagle_TRT.c **** 	if (fullp(q))
 175              		.loc 1 540 2 view .LVU29
 176              		.loc 1 540 6 is_stmt 0 view .LVU30
 177 0006 0846     		mov	r0, r1
 178              	.LVL10:
 179              		.loc 1 540 6 view .LVU31
 180 0008 FFF7FEFF 		bl	fullp
 181              	.LVL11:
 182              		.loc 1 540 5 view .LVU32
 183 000c 08B1     		cbz	r0, .L11
 541:Src/Eagle_TRT.c **** 	{
 542:Src/Eagle_TRT.c **** 		res = FAIL;
 184              		.loc 1 542 7 view .LVU33
 185 000e 0020     		movs	r0, #0
 186              	.LVL12:
 543:Src/Eagle_TRT.c **** 	}
 544:Src/Eagle_TRT.c **** 	else
 545:Src/Eagle_TRT.c **** 	{
 546:Src/Eagle_TRT.c **** 		int length = strlen(str);
 547:Src/Eagle_TRT.c **** 		q->elem[q->tail] = (char *)malloc(sizeof(char) * length);
 548:Src/Eagle_TRT.c **** 		strcpy(q->elem[q->tail], str);
 549:Src/Eagle_TRT.c **** 		//q->tail = next(q->tail,q->dim);
 550:Src/Eagle_TRT.c **** 		if (q->tail == 39)
 551:Src/Eagle_TRT.c **** 		{
 552:Src/Eagle_TRT.c **** 			q->tail = 0;
 553:Src/Eagle_TRT.c **** 		}
 554:Src/Eagle_TRT.c **** 		else
 555:Src/Eagle_TRT.c **** 		{
 556:Src/Eagle_TRT.c **** 			q->tail++;
 557:Src/Eagle_TRT.c **** 		}
ARM GAS  /tmp/cch5Qmdz.s 			page 14


 558:Src/Eagle_TRT.c **** 		res = OK;
 559:Src/Eagle_TRT.c **** 	}
 560:Src/Eagle_TRT.c **** 
 561:Src/Eagle_TRT.c **** 	return res;
 187              		.loc 1 561 2 is_stmt 1 view .LVU34
 188              	.L6:
 562:Src/Eagle_TRT.c **** }
 189              		.loc 1 562 1 is_stmt 0 view .LVU35
 190 0010 70BD     		pop	{r4, r5, r6, pc}
 191              	.LVL13:
 192              	.L11:
 193              	.LBB2:
 546:Src/Eagle_TRT.c **** 		q->elem[q->tail] = (char *)malloc(sizeof(char) * length);
 194              		.loc 1 546 3 is_stmt 1 view .LVU36
 546:Src/Eagle_TRT.c **** 		q->elem[q->tail] = (char *)malloc(sizeof(char) * length);
 195              		.loc 1 546 16 is_stmt 0 view .LVU37
 196 0012 2846     		mov	r0, r5
 197 0014 FFF7FEFF 		bl	strlen
 198              	.LVL14:
 547:Src/Eagle_TRT.c **** 		strcpy(q->elem[q->tail], str);
 199              		.loc 1 547 3 is_stmt 1 view .LVU38
 547:Src/Eagle_TRT.c **** 		strcpy(q->elem[q->tail], str);
 200              		.loc 1 547 12 is_stmt 0 view .LVU39
 201 0018 6668     		ldr	r6, [r4, #4]
 547:Src/Eagle_TRT.c **** 		strcpy(q->elem[q->tail], str);
 202              		.loc 1 547 30 view .LVU40
 203 001a FFF7FEFF 		bl	malloc
 204              	.LVL15:
 547:Src/Eagle_TRT.c **** 		strcpy(q->elem[q->tail], str);
 205              		.loc 1 547 20 view .LVU41
 206 001e 0236     		adds	r6, r6, #2
 207 0020 04EB8606 		add	r6, r4, r6, lsl #2
 208 0024 7060     		str	r0, [r6, #4]
 548:Src/Eagle_TRT.c **** 		//q->tail = next(q->tail,q->dim);
 209              		.loc 1 548 3 is_stmt 1 view .LVU42
 210 0026 2946     		mov	r1, r5
 211 0028 FFF7FEFF 		bl	strcpy
 212              	.LVL16:
 550:Src/Eagle_TRT.c **** 		{
 213              		.loc 1 550 3 view .LVU43
 550:Src/Eagle_TRT.c **** 		{
 214              		.loc 1 550 8 is_stmt 0 view .LVU44
 215 002c 6368     		ldr	r3, [r4, #4]
 550:Src/Eagle_TRT.c **** 		{
 216              		.loc 1 550 6 view .LVU45
 217 002e 272B     		cmp	r3, #39
 218 0030 03D0     		beq	.L12
 556:Src/Eagle_TRT.c **** 		}
 219              		.loc 1 556 4 is_stmt 1 view .LVU46
 556:Src/Eagle_TRT.c **** 		}
 220              		.loc 1 556 11 is_stmt 0 view .LVU47
 221 0032 0133     		adds	r3, r3, #1
 222 0034 6360     		str	r3, [r4, #4]
 558:Src/Eagle_TRT.c **** 	}
 223              		.loc 1 558 7 view .LVU48
 224 0036 0120     		movs	r0, #1
 225 0038 EAE7     		b	.L6
ARM GAS  /tmp/cch5Qmdz.s 			page 15


 226              	.L12:
 552:Src/Eagle_TRT.c **** 		}
 227              		.loc 1 552 4 is_stmt 1 view .LVU49
 552:Src/Eagle_TRT.c **** 		}
 228              		.loc 1 552 12 is_stmt 0 view .LVU50
 229 003a 0023     		movs	r3, #0
 230 003c 6360     		str	r3, [r4, #4]
 558:Src/Eagle_TRT.c **** 	}
 231              		.loc 1 558 7 view .LVU51
 232 003e 0120     		movs	r0, #1
 233 0040 E6E7     		b	.L6
 234              	.LBE2:
 235              		.cfi_endproc
 236              	.LFE148:
 238              		.section	.text.pop,"ax",%progbits
 239              		.align	1
 240              		.global	pop
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv5-d16
 246              	pop:
 247              	.LVL17:
 248              	.LFB149:
 563:Src/Eagle_TRT.c **** 
 564:Src/Eagle_TRT.c **** int pop(char *str, queue *q)
 565:Src/Eagle_TRT.c **** {
 249              		.loc 1 565 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		.loc 1 565 1 is_stmt 0 view .LVU53
 254 0000 38B5     		push	{r3, r4, r5, lr}
 255              	.LCFI2:
 256              		.cfi_def_cfa_offset 16
 257              		.cfi_offset 3, -16
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 5, -8
 260              		.cfi_offset 14, -4
 261 0002 0546     		mov	r5, r0
 262 0004 0C46     		mov	r4, r1
 566:Src/Eagle_TRT.c **** 	int res;
 263              		.loc 1 566 2 is_stmt 1 view .LVU54
 567:Src/Eagle_TRT.c **** 	if (emptyp(q))
 264              		.loc 1 567 2 view .LVU55
 265              		.loc 1 567 6 is_stmt 0 view .LVU56
 266 0006 0846     		mov	r0, r1
 267              	.LVL18:
 268              		.loc 1 567 6 view .LVU57
 269 0008 FFF7FEFF 		bl	emptyp
 270              	.LVL19:
 271              		.loc 1 567 5 view .LVU58
 272 000c 08B1     		cbz	r0, .L18
 568:Src/Eagle_TRT.c **** 	{
 569:Src/Eagle_TRT.c **** 		res = FAIL;
 273              		.loc 1 569 7 view .LVU59
 274 000e 0020     		movs	r0, #0
ARM GAS  /tmp/cch5Qmdz.s 			page 16


 275              	.LVL20:
 570:Src/Eagle_TRT.c **** 	}
 571:Src/Eagle_TRT.c **** 	else
 572:Src/Eagle_TRT.c **** 	{
 573:Src/Eagle_TRT.c **** 		strcpy(str, q->elem[q->head]);
 574:Src/Eagle_TRT.c **** 		free(q->elem[q->head]);
 575:Src/Eagle_TRT.c **** 		//q->head = next(q->head,q->dim);
 576:Src/Eagle_TRT.c **** 		if (q->head == 39)
 577:Src/Eagle_TRT.c **** 		{
 578:Src/Eagle_TRT.c **** 			q->head = 0;
 579:Src/Eagle_TRT.c **** 		}
 580:Src/Eagle_TRT.c **** 		else
 581:Src/Eagle_TRT.c **** 		{
 582:Src/Eagle_TRT.c **** 			q->head++;
 583:Src/Eagle_TRT.c **** 		}
 584:Src/Eagle_TRT.c **** 		res = OK;
 585:Src/Eagle_TRT.c **** 	}
 586:Src/Eagle_TRT.c **** 
 587:Src/Eagle_TRT.c **** 	return res;
 276              		.loc 1 587 2 is_stmt 1 view .LVU60
 277              	.L13:
 588:Src/Eagle_TRT.c **** }
 278              		.loc 1 588 1 is_stmt 0 view .LVU61
 279 0010 38BD     		pop	{r3, r4, r5, pc}
 280              	.LVL21:
 281              	.L18:
 573:Src/Eagle_TRT.c **** 		free(q->elem[q->head]);
 282              		.loc 1 573 3 is_stmt 1 view .LVU62
 573:Src/Eagle_TRT.c **** 		free(q->elem[q->head]);
 283              		.loc 1 573 24 is_stmt 0 view .LVU63
 284 0012 2368     		ldr	r3, [r4]
 573:Src/Eagle_TRT.c **** 		free(q->elem[q->head]);
 285              		.loc 1 573 22 view .LVU64
 286 0014 0233     		adds	r3, r3, #2
 287 0016 04EB8303 		add	r3, r4, r3, lsl #2
 573:Src/Eagle_TRT.c **** 		free(q->elem[q->head]);
 288              		.loc 1 573 3 view .LVU65
 289 001a 5968     		ldr	r1, [r3, #4]
 290 001c 2846     		mov	r0, r5
 291 001e FFF7FEFF 		bl	strcpy
 292              	.LVL22:
 574:Src/Eagle_TRT.c **** 		//q->head = next(q->head,q->dim);
 293              		.loc 1 574 3 is_stmt 1 view .LVU66
 574:Src/Eagle_TRT.c **** 		//q->head = next(q->head,q->dim);
 294              		.loc 1 574 17 is_stmt 0 view .LVU67
 295 0022 2368     		ldr	r3, [r4]
 574:Src/Eagle_TRT.c **** 		//q->head = next(q->head,q->dim);
 296              		.loc 1 574 15 view .LVU68
 297 0024 0233     		adds	r3, r3, #2
 298 0026 04EB8303 		add	r3, r4, r3, lsl #2
 574:Src/Eagle_TRT.c **** 		//q->head = next(q->head,q->dim);
 299              		.loc 1 574 3 view .LVU69
 300 002a 5868     		ldr	r0, [r3, #4]
 301 002c FFF7FEFF 		bl	free
 302              	.LVL23:
 576:Src/Eagle_TRT.c **** 		{
 303              		.loc 1 576 3 is_stmt 1 view .LVU70
ARM GAS  /tmp/cch5Qmdz.s 			page 17


 576:Src/Eagle_TRT.c **** 		{
 304              		.loc 1 576 8 is_stmt 0 view .LVU71
 305 0030 2368     		ldr	r3, [r4]
 576:Src/Eagle_TRT.c **** 		{
 306              		.loc 1 576 6 view .LVU72
 307 0032 272B     		cmp	r3, #39
 308 0034 03D0     		beq	.L19
 582:Src/Eagle_TRT.c **** 		}
 309              		.loc 1 582 4 is_stmt 1 view .LVU73
 582:Src/Eagle_TRT.c **** 		}
 310              		.loc 1 582 11 is_stmt 0 view .LVU74
 311 0036 0133     		adds	r3, r3, #1
 312 0038 2360     		str	r3, [r4]
 584:Src/Eagle_TRT.c **** 	}
 313              		.loc 1 584 7 view .LVU75
 314 003a 0120     		movs	r0, #1
 315 003c E8E7     		b	.L13
 316              	.L19:
 578:Src/Eagle_TRT.c **** 		}
 317              		.loc 1 578 4 is_stmt 1 view .LVU76
 578:Src/Eagle_TRT.c **** 		}
 318              		.loc 1 578 12 is_stmt 0 view .LVU77
 319 003e 0023     		movs	r3, #0
 320 0040 2360     		str	r3, [r4]
 584:Src/Eagle_TRT.c **** 	}
 321              		.loc 1 584 7 view .LVU78
 322 0042 0120     		movs	r0, #1
 323 0044 E4E7     		b	.L13
 324              		.cfi_endproc
 325              	.LFE149:
 327              		.section	.text.print,"ax",%progbits
 328              		.align	1
 329              		.global	print
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv5-d16
 335              	print:
 336              	.LVL24:
 337              	.LFB150:
 589:Src/Eagle_TRT.c **** /// ---- end queue ----///
 590:Src/Eagle_TRT.c **** queue print_q = {.head = 0, .tail = 0, .dim = 0};
 591:Src/Eagle_TRT.c **** 
 592:Src/Eagle_TRT.c **** int print(UART_HandleTypeDef *huart, char *text_print_function)
 593:Src/Eagle_TRT.c **** {
 338              		.loc 1 593 1 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		.loc 1 593 1 is_stmt 0 view .LVU80
 343 0000 38B5     		push	{r3, r4, r5, lr}
 344              	.LCFI3:
 345              		.cfi_def_cfa_offset 16
 346              		.cfi_offset 3, -16
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 5, -8
 349              		.cfi_offset 14, -4
ARM GAS  /tmp/cch5Qmdz.s 			page 18


 350 0002 0546     		mov	r5, r0
 351 0004 0C46     		mov	r4, r1
 594:Src/Eagle_TRT.c **** 
 595:Src/Eagle_TRT.c **** 	int ret = 0;
 352              		.loc 1 595 2 is_stmt 1 view .LVU81
 353              	.LVL25:
 596:Src/Eagle_TRT.c **** 
 597:Src/Eagle_TRT.c **** 	if (HAL_UART_Transmit_IT(huart, (uint8_t *)text_print_function, strlen(text_print_function)) == HA
 354              		.loc 1 597 2 view .LVU82
 355              		.loc 1 597 66 is_stmt 0 view .LVU83
 356 0006 0846     		mov	r0, r1
 357              	.LVL26:
 358              		.loc 1 597 66 view .LVU84
 359 0008 FFF7FEFF 		bl	strlen
 360              	.LVL27:
 361              		.loc 1 597 6 view .LVU85
 362 000c 82B2     		uxth	r2, r0
 363 000e 2146     		mov	r1, r4
 364 0010 2846     		mov	r0, r5
 365 0012 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 366              	.LVL28:
 367              		.loc 1 597 5 view .LVU86
 368 0016 08B9     		cbnz	r0, .L25
 598:Src/Eagle_TRT.c **** 	{
 599:Src/Eagle_TRT.c **** 		ret = 1;
 369              		.loc 1 599 7 view .LVU87
 370 0018 0120     		movs	r0, #1
 371              	.LVL29:
 372              	.L20:
 600:Src/Eagle_TRT.c **** 	}
 601:Src/Eagle_TRT.c **** 	else
 602:Src/Eagle_TRT.c **** 	{
 603:Src/Eagle_TRT.c **** 		if (push(text_print_function, &print_q) == FAIL)
 604:Src/Eagle_TRT.c **** 		{
 605:Src/Eagle_TRT.c **** 			ret = 0;
 606:Src/Eagle_TRT.c **** 		}
 607:Src/Eagle_TRT.c **** 		else
 608:Src/Eagle_TRT.c **** 		{
 609:Src/Eagle_TRT.c **** 			ret = 1;
 610:Src/Eagle_TRT.c **** 		}
 611:Src/Eagle_TRT.c **** 	}
 612:Src/Eagle_TRT.c **** 
 613:Src/Eagle_TRT.c **** 	return ret;
 614:Src/Eagle_TRT.c **** }
 373              		.loc 1 614 1 view .LVU88
 374 001a 38BD     		pop	{r3, r4, r5, pc}
 375              	.LVL30:
 376              	.L25:
 603:Src/Eagle_TRT.c **** 		{
 377              		.loc 1 603 3 is_stmt 1 view .LVU89
 603:Src/Eagle_TRT.c **** 		{
 378              		.loc 1 603 7 is_stmt 0 view .LVU90
 379 001c 0349     		ldr	r1, .L26
 380 001e 2046     		mov	r0, r4
 381 0020 FFF7FEFF 		bl	push
 382              	.LVL31:
 603:Src/Eagle_TRT.c **** 		{
ARM GAS  /tmp/cch5Qmdz.s 			page 19


 383              		.loc 1 603 6 view .LVU91
 384 0024 0028     		cmp	r0, #0
 385 0026 F8D0     		beq	.L20
 609:Src/Eagle_TRT.c **** 		}
 386              		.loc 1 609 8 view .LVU92
 387 0028 0120     		movs	r0, #1
 388              	.LVL32:
 613:Src/Eagle_TRT.c **** }
 389              		.loc 1 613 2 is_stmt 1 view .LVU93
 613:Src/Eagle_TRT.c **** }
 390              		.loc 1 613 9 is_stmt 0 view .LVU94
 391 002a F6E7     		b	.L20
 392              	.L27:
 393              		.align	2
 394              	.L26:
 395 002c 00000000 		.word	.LANCHOR0
 396              		.cfi_endproc
 397              	.LFE150:
 399              		.section	.text.print_it,"ax",%progbits
 400              		.align	1
 401              		.global	print_it
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv5-d16
 407              	print_it:
 408              	.LVL33:
 409              	.LFB151:
 615:Src/Eagle_TRT.c **** 
 616:Src/Eagle_TRT.c **** void print_it(UART_HandleTypeDef *huart)
 617:Src/Eagle_TRT.c **** { //put in the uart interrupt
 410              		.loc 1 617 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 56
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		.loc 1 617 1 is_stmt 0 view .LVU96
 415 0000 10B5     		push	{r4, lr}
 416              	.LCFI4:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 14, -4
 420 0002 8EB0     		sub	sp, sp, #56
 421              	.LCFI5:
 422              		.cfi_def_cfa_offset 64
 423 0004 0446     		mov	r4, r0
 618:Src/Eagle_TRT.c **** 
 619:Src/Eagle_TRT.c **** 	char text_print_function[50];
 424              		.loc 1 619 2 is_stmt 1 view .LVU97
 620:Src/Eagle_TRT.c **** 
 621:Src/Eagle_TRT.c **** 	if (pop(text_print_function, &print_q) == OK)
 425              		.loc 1 621 2 view .LVU98
 426              		.loc 1 621 6 is_stmt 0 view .LVU99
 427 0006 0849     		ldr	r1, .L32
 428 0008 01A8     		add	r0, sp, #4
 429              	.LVL34:
 430              		.loc 1 621 6 view .LVU100
 431 000a FFF7FEFF 		bl	pop
ARM GAS  /tmp/cch5Qmdz.s 			page 20


 432              	.LVL35:
 433              		.loc 1 621 5 view .LVU101
 434 000e 0128     		cmp	r0, #1
 435 0010 01D0     		beq	.L31
 436              	.L28:
 622:Src/Eagle_TRT.c **** 	{
 623:Src/Eagle_TRT.c **** 		HAL_UART_Transmit_IT(huart, (uint8_t *)text_print_function, strlen(text_print_function));
 624:Src/Eagle_TRT.c **** 	}
 625:Src/Eagle_TRT.c **** }
 437              		.loc 1 625 1 view .LVU102
 438 0012 0EB0     		add	sp, sp, #56
 439              	.LCFI6:
 440              		.cfi_remember_state
 441              		.cfi_def_cfa_offset 8
 442              		@ sp needed
 443 0014 10BD     		pop	{r4, pc}
 444              	.LVL36:
 445              	.L31:
 446              	.LCFI7:
 447              		.cfi_restore_state
 623:Src/Eagle_TRT.c **** 	}
 448              		.loc 1 623 3 is_stmt 1 view .LVU103
 623:Src/Eagle_TRT.c **** 	}
 449              		.loc 1 623 63 is_stmt 0 view .LVU104
 450 0016 01A8     		add	r0, sp, #4
 451 0018 FFF7FEFF 		bl	strlen
 452              	.LVL37:
 623:Src/Eagle_TRT.c **** 	}
 453              		.loc 1 623 3 view .LVU105
 454 001c 82B2     		uxth	r2, r0
 455 001e 01A9     		add	r1, sp, #4
 456 0020 2046     		mov	r0, r4
 457 0022 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 458              	.LVL38:
 459              		.loc 1 625 1 view .LVU106
 460 0026 F4E7     		b	.L28
 461              	.L33:
 462              		.align	2
 463              	.L32:
 464 0028 00000000 		.word	.LANCHOR0
 465              		.cfi_endproc
 466              	.LFE151:
 468              		.section	.text.calc_pot_value,"ax",%progbits
 469              		.align	1
 470              		.global	calc_pot_value
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv5-d16
 476              	calc_pot_value:
 477              	.LVL39:
 478              	.LFB155:
 626:Src/Eagle_TRT.c **** 
 627:Src/Eagle_TRT.c **** #endif
 628:Src/Eagle_TRT.c **** 
 629:Src/Eagle_TRT.c **** #ifdef HAL_TIM_MODULE_ENABLED
 630:Src/Eagle_TRT.c **** #include "stm32f7xx_hal_tim.h"
ARM GAS  /tmp/cch5Qmdz.s 			page 21


 631:Src/Eagle_TRT.c **** 
 632:Src/Eagle_TRT.c **** extern UART_HandleTypeDef huart2;
 633:Src/Eagle_TRT.c **** extern char txt;
 634:Src/Eagle_TRT.c **** 
 635:Src/Eagle_TRT.c **** // Function to request data from encoder via SSI communication
 636:Src/Eagle_TRT.c **** // This function is called from the interrupt callback of the timer that you are using for the enco
 637:Src/Eagle_TRT.c **** // The tim used for this function must be initialized at most at 2 microsecond per tick
 638:Src/Eagle_TRT.c **** // Lower the number of microseconds per tick better it is
 639:Src/Eagle_TRT.c **** // TimerInstance = struct of the tim used for the encoder
 640:Src/Eagle_TRT.c **** enc_stc enc;
 641:Src/Eagle_TRT.c **** int read_SSI(enc_stc *enc)
 642:Src/Eagle_TRT.c **** {
 643:Src/Eagle_TRT.c **** 
 644:Src/Eagle_TRT.c **** 	int bin_data[enc->data_size];
 645:Src/Eagle_TRT.c **** 
 646:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_RESET);
 647:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 648:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 649:Src/Eagle_TRT.c **** 	{
 650:Src/Eagle_TRT.c **** 	}
 651:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_SET);
 652:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 653:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 654:Src/Eagle_TRT.c **** 	{
 655:Src/Eagle_TRT.c **** 	}
 656:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_RESET);
 657:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 658:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 659:Src/Eagle_TRT.c **** 	{
 660:Src/Eagle_TRT.c **** 	}
 661:Src/Eagle_TRT.c **** 
 662:Src/Eagle_TRT.c **** 	// Starting the clock to retrieve 14 bits from the sensor
 663:Src/Eagle_TRT.c **** 	for (int i = 0; i < enc->data_size; i++)
 664:Src/Eagle_TRT.c **** 	{
 665:Src/Eagle_TRT.c **** 
 666:Src/Eagle_TRT.c **** 		// CLOCK HIGH
 667:Src/Eagle_TRT.c **** 		HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_SET);
 668:Src/Eagle_TRT.c **** 		__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 669:Src/Eagle_TRT.c **** 		while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period / 2)
 670:Src/Eagle_TRT.c **** 		{
 671:Src/Eagle_TRT.c **** 		}
 672:Src/Eagle_TRT.c **** 
 673:Src/Eagle_TRT.c **** 		//Reading the Pin at the half of the clock period
 674:Src/Eagle_TRT.c **** 		// Set the bit as the pin state (0 or 1)
 675:Src/Eagle_TRT.c **** 		bin_data[i] = HAL_GPIO_ReadPin(enc->DataPinName, enc->DataPinNumber);
 676:Src/Eagle_TRT.c **** 		enc->Data[i] = bin_data[i];
 677:Src/Eagle_TRT.c **** 
 678:Src/Eagle_TRT.c **** 		__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 679:Src/Eagle_TRT.c **** 		while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period / 2)
 680:Src/Eagle_TRT.c **** 		{
 681:Src/Eagle_TRT.c **** 		}
 682:Src/Eagle_TRT.c **** 
 683:Src/Eagle_TRT.c **** 		// CLOCK LOW
 684:Src/Eagle_TRT.c **** 		HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_RESET);
 685:Src/Eagle_TRT.c **** 		__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 686:Src/Eagle_TRT.c **** 		while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 687:Src/Eagle_TRT.c **** 		{
ARM GAS  /tmp/cch5Qmdz.s 			page 22


 688:Src/Eagle_TRT.c **** 		}
 689:Src/Eagle_TRT.c **** 	}
 690:Src/Eagle_TRT.c **** 
 691:Src/Eagle_TRT.c **** 	// Requesting an other bit for the aventual error sent from the sensor
 692:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_SET);
 693:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 694:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period * 2)
 695:Src/Eagle_TRT.c **** 	{
 696:Src/Eagle_TRT.c **** 	}
 697:Src/Eagle_TRT.c **** 
 698:Src/Eagle_TRT.c **** 	int error_flag = HAL_GPIO_ReadPin(enc->DataPinName, enc->DataPinNumber);
 699:Src/Eagle_TRT.c **** 
 700:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 701:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period * 2)
 702:Src/Eagle_TRT.c **** 	{
 703:Src/Eagle_TRT.c **** 	}
 704:Src/Eagle_TRT.c **** 
 705:Src/Eagle_TRT.c **** 	// Converting bits into number and converting it into angle in degrees (0 ~ 359)
 706:Src/Eagle_TRT.c **** 	enc->converted_data = bin_dec(enc->Data, enc->data_size);
 707:Src/Eagle_TRT.c **** 
 708:Src/Eagle_TRT.c **** 	return error_flag;
 709:Src/Eagle_TRT.c **** }
 710:Src/Eagle_TRT.c **** 
 711:Src/Eagle_TRT.c **** // Interrupt function of tim 2
 712:Src/Eagle_TRT.c **** // Call this function in the timer callback function of the stm
 713:Src/Eagle_TRT.c **** // htim = timer TimerInstance of the timer that you are using for the clock of the encoder
 714:Src/Eagle_TRT.c **** // Interrupt_flag = initilize a int variable in the main file
 715:Src/Eagle_TRT.c **** // Angles_array = array to store the last angles
 716:Src/Eagle_TRT.c **** // Speed = pointer to the speed value
 717:Src/Eagle_TRT.c **** void encoder_tim_interrupt(enc_stc *enc)
 718:Src/Eagle_TRT.c **** {
 719:Src/Eagle_TRT.c **** 
 720:Src/Eagle_TRT.c **** 	if (enc->interrupt_flag == 0)
 721:Src/Eagle_TRT.c **** 	{
 722:Src/Eagle_TRT.c **** 		// Requesting first angle
 723:Src/Eagle_TRT.c **** 		enc->angle0_prec = enc->angle0;
 724:Src/Eagle_TRT.c **** 		read_SSI(enc);
 725:Src/Eagle_TRT.c **** 		enc->angle0 = enc->converted_data / 45.5055;
 726:Src/Eagle_TRT.c **** 	}
 727:Src/Eagle_TRT.c **** 	else if (enc->interrupt_flag == 1)
 728:Src/Eagle_TRT.c **** 	{
 729:Src/Eagle_TRT.c **** 		// Requesting second angle
 730:Src/Eagle_TRT.c **** 		enc->angle1_prec = enc->angle1;
 731:Src/Eagle_TRT.c **** 		read_SSI(enc);
 732:Src/Eagle_TRT.c **** 		enc->angle1 = enc->converted_data / 45.5055;
 733:Src/Eagle_TRT.c **** 	}
 734:Src/Eagle_TRT.c **** 	else if (enc->interrupt_flag == 2)
 735:Src/Eagle_TRT.c **** 	{
 736:Src/Eagle_TRT.c **** 		// Calculate speed from the two angles
 737:Src/Eagle_TRT.c **** 		get_speed_encoder(enc);
 738:Src/Eagle_TRT.c **** 
 739:Src/Eagle_TRT.c **** 		// Get the speed sign to be sent in CAN
 740:Src/Eagle_TRT.c **** 		if (enc->average_speed < 0)
 741:Src/Eagle_TRT.c **** 		{
 742:Src/Eagle_TRT.c **** 			enc->average_speed *= -1;
 743:Src/Eagle_TRT.c **** 			enc->speed_sign = 1;
 744:Src/Eagle_TRT.c **** 		}
ARM GAS  /tmp/cch5Qmdz.s 			page 23


 745:Src/Eagle_TRT.c **** 		else
 746:Src/Eagle_TRT.c **** 		{
 747:Src/Eagle_TRT.c **** 			enc->speed_sign = 0;
 748:Src/Eagle_TRT.c **** 		}
 749:Src/Eagle_TRT.c **** 	}
 750:Src/Eagle_TRT.c **** 
 751:Src/Eagle_TRT.c **** 	// Cycle between steps
 752:Src/Eagle_TRT.c **** 	if (enc->interrupt_flag >= 2)
 753:Src/Eagle_TRT.c **** 	{
 754:Src/Eagle_TRT.c **** 		enc->interrupt_flag = 0;
 755:Src/Eagle_TRT.c **** 	}
 756:Src/Eagle_TRT.c **** 	else
 757:Src/Eagle_TRT.c **** 	{
 758:Src/Eagle_TRT.c **** 		enc->interrupt_flag++;
 759:Src/Eagle_TRT.c **** 	}
 760:Src/Eagle_TRT.c **** 	//enc->interrupt_flag = enc->interrupt_flag >= 2 ? 0 : enc->interrupt_flag + 1;
 761:Src/Eagle_TRT.c **** }
 762:Src/Eagle_TRT.c **** 
 763:Src/Eagle_TRT.c **** // Funtion to calculate the speed
 764:Src/Eagle_TRT.c **** // Angle0 = last angle calculated
 765:Src/Eagle_TRT.c **** // Angle1 = previous angle calculated
 766:Src/Eagle_TRT.c **** // Refresh = delta-time from the two calculations, express it in microseconds
 767:Src/Eagle_TRT.c **** // Wheel_diameter = diameter of the wheel expressed meters
 768:Src/Eagle_TRT.c **** void get_speed_encoder(enc_stc *enc)
 769:Src/Eagle_TRT.c **** {
 770:Src/Eagle_TRT.c **** 
 771:Src/Eagle_TRT.c **** 	long double speed = 0;
 772:Src/Eagle_TRT.c **** 	double dt = 0;
 773:Src/Eagle_TRT.c **** 
 774:Src/Eagle_TRT.c **** 	if (enc->dx_wheel == 1)
 775:Src/Eagle_TRT.c **** 	{
 776:Src/Eagle_TRT.c **** 		enc->delta_angle = enc->angle1 - enc->angle0;
 777:Src/Eagle_TRT.c **** 	}
 778:Src/Eagle_TRT.c **** 	else
 779:Src/Eagle_TRT.c **** 	{
 780:Src/Eagle_TRT.c **** 		enc->delta_angle = enc->angle0 - enc->angle1;
 781:Src/Eagle_TRT.c **** 	}
 782:Src/Eagle_TRT.c **** 
 783:Src/Eagle_TRT.c **** 	// Calculate correct delta angle if near to 0-360
 784:Src/Eagle_TRT.c **** 	if ((enc->angle0 < enc->max_delta_angle && enc->angle1 > 360 - enc->max_delta_angle) ||
 785:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 786:Src/Eagle_TRT.c **** 	{
 787:Src/Eagle_TRT.c **** 		if (enc->delta_angle < 0)
 788:Src/Eagle_TRT.c **** 		{
 789:Src/Eagle_TRT.c **** 			enc->delta_angle = 360 + enc->delta_angle;
 790:Src/Eagle_TRT.c **** 		}
 791:Src/Eagle_TRT.c **** 		else
 792:Src/Eagle_TRT.c **** 		{
 793:Src/Eagle_TRT.c **** 			if (enc->delta_angle > 0)
 794:Src/Eagle_TRT.c **** 			{
 795:Src/Eagle_TRT.c **** 				enc->delta_angle = 360 - enc->delta_angle;
 796:Src/Eagle_TRT.c **** 			}
 797:Src/Eagle_TRT.c **** 		}
 798:Src/Eagle_TRT.c **** 	}
 799:Src/Eagle_TRT.c **** 
 800:Src/Eagle_TRT.c **** 	// Calculating rad/s, then m/s, then Km/h
 801:Src/Eagle_TRT.c **** 	//speed = enc->delta_angle * (3.1415 / 180) * (enc->wheel_diameter / 2);
ARM GAS  /tmp/cch5Qmdz.s 			page 24


 802:Src/Eagle_TRT.c **** 	speed = (enc->delta_angle / 360) * ((enc->wheel_diameter / 2) * 3.1415);
 803:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 804:Src/Eagle_TRT.c **** 	speed *= 3.6;
 805:Src/Eagle_TRT.c **** 	speed = round((speed * 1000)) / 1000;
 806:Src/Eagle_TRT.c **** 
 807:Src/Eagle_TRT.c **** 	int off = 100;
 808:Src/Eagle_TRT.c **** 
 809:Src/Eagle_TRT.c **** 	// Start detecting eventual new wheel roation
 810:Src/Eagle_TRT.c **** 	// If the speed is too low, don't count rotations
 811:Src/Eagle_TRT.c **** 	if (enc->average_speed < -0.5 || enc->average_speed > 0.5)
 812:Src/Eagle_TRT.c **** 	{
 813:Src/Eagle_TRT.c **** 		if ((enc->angle0_prec <= 361 && enc->angle0_prec > 360 - off) && (enc->angle0 >= -1 && enc->angle
 814:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 815:Src/Eagle_TRT.c **** 		{
 816:Src/Eagle_TRT.c **** 			enc->wheel_rotation++;
 817:Src/Eagle_TRT.c **** 			enc->Km += (3.14 * enc->wheel_diameter);
 818:Src/Eagle_TRT.c **** 		}
 819:Src/Eagle_TRT.c **** 	}
 820:Src/Eagle_TRT.c **** 
 821:Src/Eagle_TRT.c **** 	// Remove noise mediating previous values with actual
 822:Src/Eagle_TRT.c **** 	shift_array(enc->speed_array, 4, speed);
 823:Src/Eagle_TRT.c **** 	enc->average_speed = dynamic_average(enc->speed_array, 4);
 824:Src/Eagle_TRT.c **** 
 825:Src/Eagle_TRT.c **** 	// Calculating the angle sample frequency
 826:Src/Eagle_TRT.c **** 	//enc_calculate_optimal_frequency(enc);
 827:Src/Eagle_TRT.c **** }
 828:Src/Eagle_TRT.c **** /*
 829:Src/Eagle_TRT.c **** // Calculate anche sample frequency
 830:Src/Eagle_TRT.c **** // The delta angle changes depending on the current speed
 831:Src/Eagle_TRT.c **** // Constrain the delta angle between a defined range (max_delta_angle)
 832:Src/Eagle_TRT.c **** void enc_calculate_optimal_frequency(enc_stc *enc)
 833:Src/Eagle_TRT.c **** {
 834:Src/Eagle_TRT.c **** 	double abs_delta_angle = (enc->delta_angle >= 0) ? enc->delta_angle : enc->delta_angle * -1;
 835:Src/Eagle_TRT.c **** 
 836:Src/Eagle_TRT.c **** 	if (abs_delta_angle > enc->max_delta_angle * 1.2 || abs_delta_angle < enc->max_delta_angle * 0.5)
 837:Src/Eagle_TRT.c **** 	{
 838:Src/Eagle_TRT.c **** 		double angular_speed = enc->average_speed / ((enc->wheel_diameter / 2)*3.6);
 839:Src/Eagle_TRT.c **** 		double frequency = angular_speed / (enc->max_delta_angle * 3.14 / 180);
 840:Src/Eagle_TRT.c **** 
 841:Src/Eagle_TRT.c **** 		enc->flake_freq = frequency;
 842:Src/Eagle_TRT.c **** 
 843:Src/Eagle_TRT.c **** 		frequency = frequency < 0 ? frequency * (-1) : frequency;
 844:Src/Eagle_TRT.c **** 		frequency = frequency < 50 ? 50 : frequency;
 845:Src/Eagle_TRT.c **** 
 846:Src/Eagle_TRT.c **** 		// Returns 0 if reinitialization is done correctly
 847:Src/Eagle_TRT.c **** 		HAL_TIM_Base_Stop(enc->frequency_timer);
 848:Src/Eagle_TRT.c **** 		HAL_TIM_Base_Stop_IT(enc->frequency_timer);
 849:Src/Eagle_TRT.c **** 		if (ReinitTIM7(frequency, enc) == 0)
 850:Src/Eagle_TRT.c **** 		{
 851:Src/Eagle_TRT.c **** 			// Set encoder actual frequency
 852:Src/Eagle_TRT.c **** 			enc->frequency = enc->frequency_timer_Hz / (enc->frequency_timer->Init.Prescaler * enc->frequenc
 853:Src/Eagle_TRT.c **** 		}
 854:Src/Eagle_TRT.c **** 		HAL_TIM_Base_Start(enc->frequency_timer);
 855:Src/Eagle_TRT.c **** 		HAL_TIM_Base_Start_IT(enc->frequency_timer);
 856:Src/Eagle_TRT.c **** 	}
 857:Src/Eagle_TRT.c **** }
 858:Src/Eagle_TRT.c **** 
ARM GAS  /tmp/cch5Qmdz.s 			page 25


 859:Src/Eagle_TRT.c **** // Reinitializing timer to generate interrupts to the given frequency
 860:Src/Eagle_TRT.c **** int ReinitTIM7(float frequency, enc_stc *enc)
 861:Src/Eagle_TRT.c **** {
 862:Src/Eagle_TRT.c **** 
 863:Src/Eagle_TRT.c **** 	int error_flag = 0;
 864:Src/Eagle_TRT.c **** 
 865:Src/Eagle_TRT.c **** 
 866:Src/Eagle_TRT.c **** 	TIM_MasterConfigTypeDef sMasterConfig = {0};
 867:Src/Eagle_TRT.c **** 
 868:Src/Eagle_TRT.c **** 
 869:Src/Eagle_TRT.c **** 	enc->frequency_timer_prescaler = sqrt(enc->frequency_timer_Hz / frequency);
 870:Src/Eagle_TRT.c **** 	enc->frequency_timer_period = enc->frequency_timer_prescaler;
 871:Src/Eagle_TRT.c **** 
 872:Src/Eagle_TRT.c **** 	enc->frequency_timer->Instance = TIM7;
 873:Src/Eagle_TRT.c **** 	enc->frequency_timer->Init.Prescaler = enc->frequency_timer_prescaler;
 874:Src/Eagle_TRT.c **** 	enc->frequency_timer->Init.CounterMode = TIM_COUNTERMODE_UP;
 875:Src/Eagle_TRT.c **** 	enc->frequency_timer->Init.Period = enc->frequency_timer_period;
 876:Src/Eagle_TRT.c **** 	enc->frequency_timer->Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 877:Src/Eagle_TRT.c **** 
 878:Src/Eagle_TRT.c **** 	if (HAL_TIM_Base_Init(enc->frequency_timer) != HAL_OK)
 879:Src/Eagle_TRT.c **** 	{
 880:Src/Eagle_TRT.c **** 		error_flag = 1;
 881:Src/Eagle_TRT.c **** 	}
 882:Src/Eagle_TRT.c **** 	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 883:Src/Eagle_TRT.c **** 	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 884:Src/Eagle_TRT.c **** 	if (HAL_TIMEx_MasterConfigSynchronization(enc->frequency_timer, &sMasterConfig) != HAL_OK)
 885:Src/Eagle_TRT.c **** 	{
 886:Src/Eagle_TRT.c **** 		error_flag = 2;
 887:Src/Eagle_TRT.c **** 	}
 888:Src/Eagle_TRT.c **** 	return error_flag;
 889:Src/Eagle_TRT.c **** }*/
 890:Src/Eagle_TRT.c **** 
 891:Src/Eagle_TRT.c **** pot_stc pot_1;
 892:Src/Eagle_TRT.c **** pot_stc pot_2;
 893:Src/Eagle_TRT.c **** pot_stc pot_3;
 894:Src/Eagle_TRT.c **** void calc_pot_value(pot_stc *pot)
 895:Src/Eagle_TRT.c **** {
 479              		.loc 1 895 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              		.loc 1 895 1 is_stmt 0 view .LVU108
 485 0000 10B4     		push	{r4}
 486              	.LCFI8:
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 4, -4
 896:Src/Eagle_TRT.c **** 
 897:Src/Eagle_TRT.c **** 	pot->val_100 = round(100 - (abs(pot->val - pot->min) * 100 / (pot->range))); //val0_100 -->STEER -
 489              		.loc 1 897 2 is_stmt 1 view .LVU109
 490              		.loc 1 897 37 is_stmt 0 view .LVU110
 491 0002 0269     		ldr	r2, [r0, #16]
 492              		.loc 1 897 48 view .LVU111
 493 0004 8468     		ldr	r4, [r0, #8]
 494              		.loc 1 897 43 view .LVU112
 495 0006 131B     		subs	r3, r2, r4
 496              		.loc 1 897 30 view .LVU113
ARM GAS  /tmp/cch5Qmdz.s 			page 26


 497 0008 83EAE371 		eor	r1, r3, r3, asr #31
 498 000c A1EBE371 		sub	r1, r1, r3, asr #31
 499              		.loc 1 897 55 view .LVU114
 500 0010 6423     		movs	r3, #100
 501 0012 03FB01F3 		mul	r3, r3, r1
 502              		.loc 1 897 67 view .LVU115
 503 0016 C168     		ldr	r1, [r0, #12]
 504              		.loc 1 897 61 view .LVU116
 505 0018 93FBF1F3 		sdiv	r3, r3, r1
 506              		.loc 1 897 27 view .LVU117
 507 001c C3F16403 		rsb	r3, r3, #100
 508              		.loc 1 897 15 view .LVU118
 509 0020 0360     		str	r3, [r0]
 898:Src/Eagle_TRT.c **** 	if (pot->val <= pot->min)
 510              		.loc 1 898 2 is_stmt 1 view .LVU119
 511              		.loc 1 898 5 is_stmt 0 view .LVU120
 512 0022 A242     		cmp	r2, r4
 513 0024 01DC     		bgt	.L35
 899:Src/Eagle_TRT.c **** 	{
 900:Src/Eagle_TRT.c **** 		pot->val_100 = 100;
 514              		.loc 1 900 3 is_stmt 1 view .LVU121
 515              		.loc 1 900 16 is_stmt 0 view .LVU122
 516 0026 6423     		movs	r3, #100
 517 0028 0360     		str	r3, [r0]
 518              	.L35:
 901:Src/Eagle_TRT.c **** 	}
 902:Src/Eagle_TRT.c **** 	if (pot->val >= pot->max)
 519              		.loc 1 902 2 is_stmt 1 view .LVU123
 520              		.loc 1 902 21 is_stmt 0 view .LVU124
 521 002a 4368     		ldr	r3, [r0, #4]
 522              		.loc 1 902 5 view .LVU125
 523 002c 9A42     		cmp	r2, r3
 524 002e 01DB     		blt	.L34
 903:Src/Eagle_TRT.c **** 	{
 904:Src/Eagle_TRT.c **** 		pot->val_100 = 0;
 525              		.loc 1 904 3 is_stmt 1 view .LVU126
 526              		.loc 1 904 16 is_stmt 0 view .LVU127
 527 0030 0023     		movs	r3, #0
 528 0032 0360     		str	r3, [r0]
 529              	.L34:
 905:Src/Eagle_TRT.c **** 	}
 906:Src/Eagle_TRT.c **** }
 530              		.loc 1 906 1 view .LVU128
 531 0034 5DF8044B 		ldr	r4, [sp], #4
 532              	.LCFI9:
 533              		.cfi_restore 4
 534              		.cfi_def_cfa_offset 0
 535 0038 7047     		bx	lr
 536              		.cfi_endproc
 537              	.LFE155:
 539              		.section	.text.implausibility_check,"ax",%progbits
 540              		.align	1
 541              		.global	implausibility_check
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv5-d16
ARM GAS  /tmp/cch5Qmdz.s 			page 27


 547              	implausibility_check:
 548              	.LVL40:
 549              	.LFB156:
 907:Src/Eagle_TRT.c **** 
 908:Src/Eagle_TRT.c **** //Function to check if the two ADC values are approximately the same
 909:Src/Eagle_TRT.c **** //if the values are different for more tha 10 points percentage for more than 100 milliseconds retu
 910:Src/Eagle_TRT.c **** //TimerInstance = pointer to the timer needed to check the SCS error
 911:Src/Eagle_TRT.c **** //val0_100 = pointer to the first potentiometer
 912:Src/Eagle_TRT.c **** //val1_100 = pointer to the second potentiometer
 913:Src/Eagle_TRT.c **** int implausibility_check(pot_stc *pot_1, pot_stc *pot_2)
 914:Src/Eagle_TRT.c **** {
 550              		.loc 1 914 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 915:Src/Eagle_TRT.c **** 
 916:Src/Eagle_TRT.c **** 	int SCS1 = 0;
 555              		.loc 1 916 2 view .LVU130
 917:Src/Eagle_TRT.c **** 
 918:Src/Eagle_TRT.c **** 	if (pot_1->val_100 >= 100)
 556              		.loc 1 918 2 view .LVU131
 557              		.loc 1 918 11 is_stmt 0 view .LVU132
 558 0000 0368     		ldr	r3, [r0]
 559              		.loc 1 918 5 view .LVU133
 560 0002 632B     		cmp	r3, #99
 561 0004 01DD     		ble	.L39
 919:Src/Eagle_TRT.c **** 	{
 920:Src/Eagle_TRT.c **** 		pot_1->val_100 = 100;
 562              		.loc 1 920 3 is_stmt 1 view .LVU134
 563              		.loc 1 920 18 is_stmt 0 view .LVU135
 564 0006 6423     		movs	r3, #100
 565 0008 0360     		str	r3, [r0]
 566              	.L39:
 921:Src/Eagle_TRT.c **** 	}
 922:Src/Eagle_TRT.c **** 	if (pot_1->val_100 <= 5)
 567              		.loc 1 922 2 is_stmt 1 view .LVU136
 568              		.loc 1 922 11 is_stmt 0 view .LVU137
 569 000a 0368     		ldr	r3, [r0]
 570              		.loc 1 922 5 view .LVU138
 571 000c 052B     		cmp	r3, #5
 572 000e 01DC     		bgt	.L40
 923:Src/Eagle_TRT.c **** 	{
 924:Src/Eagle_TRT.c **** 		pot_1->val_100 = 0;
 573              		.loc 1 924 3 is_stmt 1 view .LVU139
 574              		.loc 1 924 18 is_stmt 0 view .LVU140
 575 0010 0023     		movs	r3, #0
 576 0012 0360     		str	r3, [r0]
 577              	.L40:
 925:Src/Eagle_TRT.c **** 	}
 926:Src/Eagle_TRT.c **** 	if (pot_2->val_100 >= 100)
 578              		.loc 1 926 2 is_stmt 1 view .LVU141
 579              		.loc 1 926 11 is_stmt 0 view .LVU142
 580 0014 0B68     		ldr	r3, [r1]
 581              		.loc 1 926 5 view .LVU143
 582 0016 632B     		cmp	r3, #99
 583 0018 01DD     		ble	.L41
ARM GAS  /tmp/cch5Qmdz.s 			page 28


 927:Src/Eagle_TRT.c **** 	{
 928:Src/Eagle_TRT.c **** 		pot_2->val_100 = 100;
 584              		.loc 1 928 3 is_stmt 1 view .LVU144
 585              		.loc 1 928 18 is_stmt 0 view .LVU145
 586 001a 6423     		movs	r3, #100
 587 001c 0B60     		str	r3, [r1]
 588              	.L41:
 929:Src/Eagle_TRT.c **** 	}
 930:Src/Eagle_TRT.c **** 	if (pot_2->val_100 <= 5)
 589              		.loc 1 930 2 is_stmt 1 view .LVU146
 590              		.loc 1 930 11 is_stmt 0 view .LVU147
 591 001e 0B68     		ldr	r3, [r1]
 592              		.loc 1 930 5 view .LVU148
 593 0020 052B     		cmp	r3, #5
 594 0022 01DC     		bgt	.L42
 931:Src/Eagle_TRT.c **** 	{
 932:Src/Eagle_TRT.c **** 		pot_2->val_100 = 0;
 595              		.loc 1 932 3 is_stmt 1 view .LVU149
 596              		.loc 1 932 18 is_stmt 0 view .LVU150
 597 0024 0023     		movs	r3, #0
 598 0026 0B60     		str	r3, [r1]
 599              	.L42:
 933:Src/Eagle_TRT.c **** 	}
 934:Src/Eagle_TRT.c **** 	if (abs(pot_1->val_100 - pot_2->val_100) >= 10)
 600              		.loc 1 934 2 is_stmt 1 view .LVU151
 601              		.loc 1 934 15 is_stmt 0 view .LVU152
 602 0028 0368     		ldr	r3, [r0]
 603              		.loc 1 934 32 view .LVU153
 604 002a 0A68     		ldr	r2, [r1]
 605              		.loc 1 934 25 view .LVU154
 606 002c 9B1A     		subs	r3, r3, r2
 607              		.loc 1 934 6 view .LVU155
 608 002e 002B     		cmp	r3, #0
 609 0030 B8BF     		it	lt
 610 0032 5B42     		rsblt	r3, r3, #0
 611              		.loc 1 934 5 view .LVU156
 612 0034 092B     		cmp	r3, #9
 613 0036 06DD     		ble	.L43
 935:Src/Eagle_TRT.c **** 	{
 936:Src/Eagle_TRT.c **** 		if (__HAL_TIM_GET_COUNTER(pot_1->TimerInstance) > 100)
 614              		.loc 1 936 3 is_stmt 1 view .LVU157
 615              		.loc 1 936 7 is_stmt 0 view .LVU158
 616 0038 4369     		ldr	r3, [r0, #20]
 617 003a 1B68     		ldr	r3, [r3]
 618 003c 5B6A     		ldr	r3, [r3, #36]
 619              		.loc 1 936 6 view .LVU159
 620 003e 642B     		cmp	r3, #100
 621 0040 06D8     		bhi	.L45
 916:Src/Eagle_TRT.c **** 
 622              		.loc 1 916 6 view .LVU160
 623 0042 0020     		movs	r0, #0
 624              	.LVL41:
 916:Src/Eagle_TRT.c **** 
 625              		.loc 1 916 6 view .LVU161
 626 0044 7047     		bx	lr
 627              	.LVL42:
 628              	.L43:
ARM GAS  /tmp/cch5Qmdz.s 			page 29


 937:Src/Eagle_TRT.c **** 		{
 938:Src/Eagle_TRT.c **** 			SCS1 = 1;
 939:Src/Eagle_TRT.c **** 		}
 940:Src/Eagle_TRT.c **** 	}
 941:Src/Eagle_TRT.c **** 	else
 942:Src/Eagle_TRT.c **** 	{
 943:Src/Eagle_TRT.c **** 		__HAL_TIM_SET_COUNTER(pot_1->TimerInstance, 0);
 629              		.loc 1 943 3 is_stmt 1 view .LVU162
 630 0046 4369     		ldr	r3, [r0, #20]
 631 0048 1B68     		ldr	r3, [r3]
 632 004a 0020     		movs	r0, #0
 633              	.LVL43:
 634              		.loc 1 943 3 is_stmt 0 view .LVU163
 635 004c 5862     		str	r0, [r3, #36]
 944:Src/Eagle_TRT.c **** 		SCS1 = 0;
 636              		.loc 1 944 3 is_stmt 1 view .LVU164
 637              		.loc 1 944 3 is_stmt 0 view .LVU165
 638 004e 7047     		bx	lr
 639              	.LVL44:
 640              	.L45:
 938:Src/Eagle_TRT.c **** 		}
 641              		.loc 1 938 9 view .LVU166
 642 0050 0120     		movs	r0, #1
 643              	.LVL45:
 945:Src/Eagle_TRT.c **** 	}
 946:Src/Eagle_TRT.c **** 
 947:Src/Eagle_TRT.c **** 	return SCS1;
 644              		.loc 1 947 2 is_stmt 1 view .LVU167
 948:Src/Eagle_TRT.c **** }
 645              		.loc 1 948 1 is_stmt 0 view .LVU168
 646 0052 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE156:
 650              		.section	.text.set_max,"ax",%progbits
 651              		.align	1
 652              		.global	set_max
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-d16
 658              	set_max:
 659              	.LVL46:
 660              	.LFB157:
 949:Src/Eagle_TRT.c **** 
 950:Src/Eagle_TRT.c **** //function to set the value of the potentiometer when the pedal is released
 951:Src/Eagle_TRT.c **** //val = array pointer to the potentiometer values
 952:Src/Eagle_TRT.c **** //max1 = pointer to the maximum value of the APPS1
 953:Src/Eagle_TRT.c **** //max2 = pointer to the maximum value of the APPS2
 954:Src/Eagle_TRT.c **** void set_max(pot_stc *pot_1)
 955:Src/Eagle_TRT.c **** {
 661              		.loc 1 955 1 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 956:Src/Eagle_TRT.c **** 	pot_1->max = pot_1->val;
 666              		.loc 1 956 2 view .LVU170
ARM GAS  /tmp/cch5Qmdz.s 			page 30


 667              		.loc 1 956 20 is_stmt 0 view .LVU171
 668 0000 0369     		ldr	r3, [r0, #16]
 669              		.loc 1 956 13 view .LVU172
 670 0002 4360     		str	r3, [r0, #4]
 957:Src/Eagle_TRT.c **** }
 671              		.loc 1 957 1 view .LVU173
 672 0004 7047     		bx	lr
 673              		.cfi_endproc
 674              	.LFE157:
 676              		.section	.text.set_min,"ax",%progbits
 677              		.align	1
 678              		.global	set_min
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu fpv5-d16
 684              	set_min:
 685              	.LVL47:
 686              	.LFB158:
 958:Src/Eagle_TRT.c **** 
 959:Src/Eagle_TRT.c **** //function to set the value of the potentiometer when the pedal is pressed
 960:Src/Eagle_TRT.c **** //val = array pointer to the potentiometer values
 961:Src/Eagle_TRT.c **** //min1 = pointer to the minimum value of the APPS1
 962:Src/Eagle_TRT.c **** //min2 = pointer to the minimum value of the APPS2
 963:Src/Eagle_TRT.c **** void set_min(pot_stc *pot_1)
 964:Src/Eagle_TRT.c **** {
 687              		.loc 1 964 1 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 965:Src/Eagle_TRT.c **** 	pot_1->min = pot_1->val;
 692              		.loc 1 965 2 view .LVU175
 693              		.loc 1 965 20 is_stmt 0 view .LVU176
 694 0000 0369     		ldr	r3, [r0, #16]
 695              		.loc 1 965 13 view .LVU177
 696 0002 8360     		str	r3, [r0, #8]
 966:Src/Eagle_TRT.c **** }
 697              		.loc 1 966 1 view .LVU178
 698 0004 7047     		bx	lr
 699              		.cfi_endproc
 700              	.LFE158:
 702              		.section	.text.Power,"ax",%progbits
 703              		.align	1
 704              		.global	Power
 705              		.syntax unified
 706              		.thumb
 707              		.thumb_func
 708              		.fpu fpv5-d16
 710              	Power:
 711              	.LVL48:
 712              	.LFB160:
 967:Src/Eagle_TRT.c **** 
 968:Src/Eagle_TRT.c **** #endif
 969:Src/Eagle_TRT.c **** 
 970:Src/Eagle_TRT.c **** //function to calculate the decimal value from MSB binary array
 971:Src/Eagle_TRT.c **** //bin = pointer to binary array
ARM GAS  /tmp/cch5Qmdz.s 			page 31


 972:Src/Eagle_TRT.c **** //max = size of the array
 973:Src/Eagle_TRT.c **** int bin_dec(int *bin, int size)
 974:Src/Eagle_TRT.c **** {
 975:Src/Eagle_TRT.c **** 
 976:Src/Eagle_TRT.c **** 	int dec = 0;
 977:Src/Eagle_TRT.c **** 
 978:Src/Eagle_TRT.c **** 	for (int i = 0; i < size; i++)
 979:Src/Eagle_TRT.c **** 	{
 980:Src/Eagle_TRT.c **** 		if (bin[i] == 1)
 981:Src/Eagle_TRT.c **** 		{
 982:Src/Eagle_TRT.c **** 			dec += Power(2, size - i - 1);
 983:Src/Eagle_TRT.c **** 		}
 984:Src/Eagle_TRT.c **** 	}
 985:Src/Eagle_TRT.c **** 	return dec;
 986:Src/Eagle_TRT.c **** }
 987:Src/Eagle_TRT.c **** 
 988:Src/Eagle_TRT.c **** //function to calculate the power of a given number
 989:Src/Eagle_TRT.c **** double Power(int base, int expn)
 990:Src/Eagle_TRT.c **** {
 713              		.loc 1 990 1 is_stmt 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718              		.loc 1 990 1 is_stmt 0 view .LVU180
 719 0000 06EE900A 		vmov	s13, r0	@ int
 991:Src/Eagle_TRT.c **** 
 992:Src/Eagle_TRT.c **** 	double result = 1;
 720              		.loc 1 992 2 is_stmt 1 view .LVU181
 721              	.LVL49:
 993:Src/Eagle_TRT.c **** 
 994:Src/Eagle_TRT.c **** 	if (expn != 0)
 722              		.loc 1 994 2 view .LVU182
 723              		.loc 1 994 5 is_stmt 0 view .LVU183
 724 0004 0A46     		mov	r2, r1
 725 0006 11B9     		cbnz	r1, .L52
 992:Src/Eagle_TRT.c **** 
 726              		.loc 1 992 9 view .LVU184
 727 0008 B7EE000B 		vmov.f64	d0, #1.0e+0
 728 000c 7047     		bx	lr
 729              	.L52:
 730              	.LBB3:
 995:Src/Eagle_TRT.c **** 	{
 996:Src/Eagle_TRT.c **** 		for (int j = 0; j < expn; j++)
 731              		.loc 1 996 12 view .LVU185
 732 000e 0023     		movs	r3, #0
 733              	.LBE3:
 992:Src/Eagle_TRT.c **** 
 734              		.loc 1 992 9 view .LVU186
 735 0010 B7EE000B 		vmov.f64	d0, #1.0e+0
 736              	.LVL50:
 737              	.L49:
 738              	.LBB4:
 739              		.loc 1 996 19 is_stmt 1 discriminator 1 view .LVU187
 740              		.loc 1 996 3 is_stmt 0 discriminator 1 view .LVU188
 741 0014 9342     		cmp	r3, r2
 742 0016 05DA     		bge	.L53
ARM GAS  /tmp/cch5Qmdz.s 			page 32


 997:Src/Eagle_TRT.c **** 		{
 998:Src/Eagle_TRT.c **** 			result = result * base;
 743              		.loc 1 998 4 is_stmt 1 discriminator 3 view .LVU189
 744              		.loc 1 998 20 is_stmt 0 discriminator 3 view .LVU190
 745 0018 B8EEE67B 		vcvt.f64.s32	d7, s13
 746              		.loc 1 998 11 discriminator 3 view .LVU191
 747 001c 20EE070B 		vmul.f64	d0, d0, d7
 748              	.LVL51:
 996:Src/Eagle_TRT.c **** 		{
 749              		.loc 1 996 29 is_stmt 1 discriminator 3 view .LVU192
 996:Src/Eagle_TRT.c **** 		{
 750              		.loc 1 996 30 is_stmt 0 discriminator 3 view .LVU193
 751 0020 0133     		adds	r3, r3, #1
 752              	.LVL52:
 996:Src/Eagle_TRT.c **** 		{
 753              		.loc 1 996 30 discriminator 3 view .LVU194
 754 0022 F7E7     		b	.L49
 755              	.L53:
 996:Src/Eagle_TRT.c **** 		{
 756              		.loc 1 996 30 discriminator 3 view .LVU195
 757              	.LBE4:
 999:Src/Eagle_TRT.c **** 		}
1000:Src/Eagle_TRT.c **** 	}
1001:Src/Eagle_TRT.c **** 
1002:Src/Eagle_TRT.c **** 	return result;
1003:Src/Eagle_TRT.c **** }
 758              		.loc 1 1003 1 view .LVU196
 759 0024 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE160:
 763              		.section	.text.bin_dec,"ax",%progbits
 764              		.align	1
 765              		.global	bin_dec
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 769              		.fpu fpv5-d16
 771              	bin_dec:
 772              	.LVL53:
 773              	.LFB159:
 974:Src/Eagle_TRT.c **** 
 774              		.loc 1 974 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 974:Src/Eagle_TRT.c **** 
 778              		.loc 1 974 1 is_stmt 0 view .LVU198
 779 0000 70B5     		push	{r4, r5, r6, lr}
 780              	.LCFI10:
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 786 0002 2DED028B 		vpush.64	{d8}
 787              	.LCFI11:
 788              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cch5Qmdz.s 			page 33


 789              		.cfi_offset 80, -24
 790              		.cfi_offset 81, -20
 791 0006 0646     		mov	r6, r0
 792 0008 0D46     		mov	r5, r1
 976:Src/Eagle_TRT.c **** 
 793              		.loc 1 976 2 is_stmt 1 view .LVU199
 794              	.LVL54:
 978:Src/Eagle_TRT.c **** 	{
 795              		.loc 1 978 2 view .LVU200
 796              	.LBB5:
 978:Src/Eagle_TRT.c **** 	{
 797              		.loc 1 978 7 view .LVU201
 978:Src/Eagle_TRT.c **** 	{
 798              		.loc 1 978 11 is_stmt 0 view .LVU202
 799 000a 0024     		movs	r4, #0
 800              	.LBE5:
 976:Src/Eagle_TRT.c **** 
 801              		.loc 1 976 6 view .LVU203
 802 000c 08EE104A 		vmov	s16, r4	@ int
 803              	.LBB6:
 978:Src/Eagle_TRT.c **** 	{
 804              		.loc 1 978 2 view .LVU204
 805 0010 00E0     		b	.L55
 806              	.LVL55:
 807              	.L56:
 978:Src/Eagle_TRT.c **** 	{
 808              		.loc 1 978 28 is_stmt 1 discriminator 2 view .LVU205
 978:Src/Eagle_TRT.c **** 	{
 809              		.loc 1 978 29 is_stmt 0 discriminator 2 view .LVU206
 810 0012 0134     		adds	r4, r4, #1
 811              	.LVL56:
 812              	.L55:
 978:Src/Eagle_TRT.c **** 	{
 813              		.loc 1 978 18 is_stmt 1 discriminator 1 view .LVU207
 978:Src/Eagle_TRT.c **** 	{
 814              		.loc 1 978 2 is_stmt 0 discriminator 1 view .LVU208
 815 0014 AC42     		cmp	r4, r5
 816 0016 0FDA     		bge	.L59
 980:Src/Eagle_TRT.c **** 		{
 817              		.loc 1 980 3 is_stmt 1 view .LVU209
 980:Src/Eagle_TRT.c **** 		{
 818              		.loc 1 980 10 is_stmt 0 view .LVU210
 819 0018 56F82430 		ldr	r3, [r6, r4, lsl #2]
 980:Src/Eagle_TRT.c **** 		{
 820              		.loc 1 980 6 view .LVU211
 821 001c 012B     		cmp	r3, #1
 822 001e F8D1     		bne	.L56
 982:Src/Eagle_TRT.c **** 		}
 823              		.loc 1 982 4 is_stmt 1 view .LVU212
 982:Src/Eagle_TRT.c **** 		}
 824              		.loc 1 982 25 is_stmt 0 view .LVU213
 825 0020 291B     		subs	r1, r5, r4
 982:Src/Eagle_TRT.c **** 		}
 826              		.loc 1 982 11 view .LVU214
 827 0022 0139     		subs	r1, r1, #1
 828 0024 0220     		movs	r0, #2
 829 0026 FFF7FEFF 		bl	Power
ARM GAS  /tmp/cch5Qmdz.s 			page 34


 830              	.LVL57:
 982:Src/Eagle_TRT.c **** 		}
 831              		.loc 1 982 8 view .LVU215
 832 002a B8EEC87B 		vcvt.f64.s32	d7, s16
 833 002e 37EE007B 		vadd.f64	d7, d7, d0
 834 0032 BDEEC78B 		vcvt.s32.f64	s16, d7
 835              	.LVL58:
 982:Src/Eagle_TRT.c **** 		}
 836              		.loc 1 982 8 view .LVU216
 837 0036 ECE7     		b	.L56
 838              	.L59:
 982:Src/Eagle_TRT.c **** 		}
 839              		.loc 1 982 8 view .LVU217
 840              	.LBE6:
 985:Src/Eagle_TRT.c **** }
 841              		.loc 1 985 2 is_stmt 1 view .LVU218
 986:Src/Eagle_TRT.c **** 
 842              		.loc 1 986 1 is_stmt 0 view .LVU219
 843 0038 18EE100A 		vmov	r0, s16	@ int
 844 003c BDEC028B 		vldm	sp!, {d8}
 845              	.LCFI12:
 846              		.cfi_restore 80
 847              		.cfi_restore 81
 848              		.cfi_def_cfa_offset 16
 849              	.LVL59:
 986:Src/Eagle_TRT.c **** 
 850              		.loc 1 986 1 view .LVU220
 851 0040 70BD     		pop	{r4, r5, r6, pc}
 986:Src/Eagle_TRT.c **** 
 852              		.loc 1 986 1 view .LVU221
 853              		.cfi_endproc
 854              	.LFE159:
 856              		.section	.text.read_SSI,"ax",%progbits
 857              		.align	1
 858              		.global	read_SSI
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 862              		.fpu fpv5-d16
 864              	read_SSI:
 865              	.LVL60:
 866              	.LFB152:
 642:Src/Eagle_TRT.c **** 
 867              		.loc 1 642 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 642:Src/Eagle_TRT.c **** 
 871              		.loc 1 642 1 is_stmt 0 view .LVU223
 872 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 873              	.LCFI13:
 874              		.cfi_def_cfa_offset 24
 875              		.cfi_offset 3, -24
 876              		.cfi_offset 4, -20
 877              		.cfi_offset 5, -16
 878              		.cfi_offset 6, -12
 879              		.cfi_offset 7, -8
ARM GAS  /tmp/cch5Qmdz.s 			page 35


 880              		.cfi_offset 14, -4
 881 0002 00AF     		add	r7, sp, #0
 882              	.LCFI14:
 883              		.cfi_def_cfa_register 7
 884 0004 0446     		mov	r4, r0
 644:Src/Eagle_TRT.c **** 
 885              		.loc 1 644 2 is_stmt 1 view .LVU224
 644:Src/Eagle_TRT.c **** 
 886              		.loc 1 644 18 is_stmt 0 view .LVU225
 887 0006 0368     		ldr	r3, [r0]
 888              	.LVL61:
 644:Src/Eagle_TRT.c **** 
 889              		.loc 1 644 6 view .LVU226
 890 0008 9B00     		lsls	r3, r3, #2
 891              	.LVL62:
 644:Src/Eagle_TRT.c **** 
 892              		.loc 1 644 6 view .LVU227
 893 000a 0733     		adds	r3, r3, #7
 894 000c 23F00703 		bic	r3, r3, #7
 895 0010 ADEB030D 		sub	sp, sp, r3
 896 0014 6E46     		mov	r6, sp
 897              	.LVL63:
 646:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 898              		.loc 1 646 2 is_stmt 1 view .LVU228
 899 0016 0022     		movs	r2, #0
 900 0018 B0F8D413 		ldrh	r1, [r0, #980]
 901 001c D0F8CC03 		ldr	r0, [r0, #972]
 902              	.LVL64:
 646:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 903              		.loc 1 646 2 is_stmt 0 view .LVU229
 904 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 905              	.LVL65:
 647:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 906              		.loc 1 647 2 is_stmt 1 view .LVU230
 907 0024 D4F8C433 		ldr	r3, [r4, #964]
 908 0028 1B68     		ldr	r3, [r3]
 909 002a 0022     		movs	r2, #0
 910 002c 5A62     		str	r2, [r3, #36]
 648:Src/Eagle_TRT.c **** 	{
 911              		.loc 1 648 2 view .LVU231
 912              	.L61:
 650:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_SET);
 913              		.loc 1 650 2 discriminator 1 view .LVU232
 648:Src/Eagle_TRT.c **** 	{
 914              		.loc 1 648 8 discriminator 1 view .LVU233
 648:Src/Eagle_TRT.c **** 	{
 915              		.loc 1 648 9 is_stmt 0 discriminator 1 view .LVU234
 916 002e D4F8C433 		ldr	r3, [r4, #964]
 917 0032 1B68     		ldr	r3, [r3]
 918 0034 5A6A     		ldr	r2, [r3, #36]
 648:Src/Eagle_TRT.c **** 	{
 919              		.loc 1 648 57 discriminator 1 view .LVU235
 920 0036 E368     		ldr	r3, [r4, #12]
 648:Src/Eagle_TRT.c **** 	{
 921              		.loc 1 648 8 discriminator 1 view .LVU236
 922 0038 9A42     		cmp	r2, r3
 923 003a F8D9     		bls	.L61
ARM GAS  /tmp/cch5Qmdz.s 			page 36


 651:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 924              		.loc 1 651 2 is_stmt 1 view .LVU237
 925 003c 0122     		movs	r2, #1
 926 003e B4F8D413 		ldrh	r1, [r4, #980]
 927 0042 D4F8CC03 		ldr	r0, [r4, #972]
 928 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 929              	.LVL66:
 652:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 930              		.loc 1 652 2 view .LVU238
 931 004a D4F8C433 		ldr	r3, [r4, #964]
 932 004e 1B68     		ldr	r3, [r3]
 933 0050 0022     		movs	r2, #0
 934 0052 5A62     		str	r2, [r3, #36]
 653:Src/Eagle_TRT.c **** 	{
 935              		.loc 1 653 2 view .LVU239
 936              	.L62:
 655:Src/Eagle_TRT.c **** 	HAL_GPIO_WritePin(enc->ClockPinName, enc->ClockPinNumber, GPIO_PIN_RESET);
 937              		.loc 1 655 2 discriminator 1 view .LVU240
 653:Src/Eagle_TRT.c **** 	{
 938              		.loc 1 653 8 discriminator 1 view .LVU241
 653:Src/Eagle_TRT.c **** 	{
 939              		.loc 1 653 9 is_stmt 0 discriminator 1 view .LVU242
 940 0054 D4F8C433 		ldr	r3, [r4, #964]
 941 0058 1B68     		ldr	r3, [r3]
 942 005a 5A6A     		ldr	r2, [r3, #36]
 653:Src/Eagle_TRT.c **** 	{
 943              		.loc 1 653 57 discriminator 1 view .LVU243
 944 005c E368     		ldr	r3, [r4, #12]
 653:Src/Eagle_TRT.c **** 	{
 945              		.loc 1 653 8 discriminator 1 view .LVU244
 946 005e 9A42     		cmp	r2, r3
 947 0060 F8D9     		bls	.L62
 656:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 948              		.loc 1 656 2 is_stmt 1 view .LVU245
 949 0062 0022     		movs	r2, #0
 950 0064 B4F8D413 		ldrh	r1, [r4, #980]
 951 0068 D4F8CC03 		ldr	r0, [r4, #972]
 952 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 953              	.LVL67:
 657:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 954              		.loc 1 657 2 view .LVU246
 955 0070 D4F8C433 		ldr	r3, [r4, #964]
 956 0074 1B68     		ldr	r3, [r3]
 957 0076 0022     		movs	r2, #0
 958 0078 5A62     		str	r2, [r3, #36]
 658:Src/Eagle_TRT.c **** 	{
 959              		.loc 1 658 2 view .LVU247
 960              	.L63:
 660:Src/Eagle_TRT.c **** 
 961              		.loc 1 660 2 discriminator 1 view .LVU248
 658:Src/Eagle_TRT.c **** 	{
 962              		.loc 1 658 8 discriminator 1 view .LVU249
 658:Src/Eagle_TRT.c **** 	{
 963              		.loc 1 658 9 is_stmt 0 discriminator 1 view .LVU250
 964 007a D4F8C433 		ldr	r3, [r4, #964]
 965 007e 1B68     		ldr	r3, [r3]
 966 0080 5A6A     		ldr	r2, [r3, #36]
ARM GAS  /tmp/cch5Qmdz.s 			page 37


 658:Src/Eagle_TRT.c **** 	{
 967              		.loc 1 658 57 discriminator 1 view .LVU251
 968 0082 E368     		ldr	r3, [r4, #12]
 658:Src/Eagle_TRT.c **** 	{
 969              		.loc 1 658 8 discriminator 1 view .LVU252
 970 0084 9A42     		cmp	r2, r3
 971 0086 F8D9     		bls	.L63
 972              	.LBB7:
 663:Src/Eagle_TRT.c **** 	{
 973              		.loc 1 663 11 view .LVU253
 974 0088 0025     		movs	r5, #0
 975 008a 3CE0     		b	.L64
 976              	.LVL68:
 977              	.L65:
 669:Src/Eagle_TRT.c **** 		{
 978              		.loc 1 669 9 discriminator 1 view .LVU254
 979 008c B2EB630F 		cmp	r2, r3, asr #1
 980 0090 08D8     		bhi	.L74
 981              	.L66:
 671:Src/Eagle_TRT.c **** 
 982              		.loc 1 671 3 is_stmt 1 discriminator 1 view .LVU255
 669:Src/Eagle_TRT.c **** 		{
 983              		.loc 1 669 9 discriminator 1 view .LVU256
 669:Src/Eagle_TRT.c **** 		{
 984              		.loc 1 669 10 is_stmt 0 discriminator 1 view .LVU257
 985 0092 D4F8C433 		ldr	r3, [r4, #964]
 986 0096 1B68     		ldr	r3, [r3]
 987 0098 5A6A     		ldr	r2, [r3, #36]
 669:Src/Eagle_TRT.c **** 		{
 988              		.loc 1 669 58 discriminator 1 view .LVU258
 989 009a E368     		ldr	r3, [r4, #12]
 669:Src/Eagle_TRT.c **** 		{
 990              		.loc 1 669 73 discriminator 1 view .LVU259
 991 009c 002B     		cmp	r3, #0
 992 009e F5DA     		bge	.L65
 993 00a0 0133     		adds	r3, r3, #1
 994 00a2 F3E7     		b	.L65
 995              	.L74:
 675:Src/Eagle_TRT.c **** 		enc->Data[i] = bin_data[i];
 996              		.loc 1 675 3 is_stmt 1 view .LVU260
 675:Src/Eagle_TRT.c **** 		enc->Data[i] = bin_data[i];
 997              		.loc 1 675 17 is_stmt 0 view .LVU261
 998 00a4 B4F8D613 		ldrh	r1, [r4, #982]
 999 00a8 D4F8D003 		ldr	r0, [r4, #976]
 1000 00ac FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1001              	.LVL69:
 675:Src/Eagle_TRT.c **** 		enc->Data[i] = bin_data[i];
 1002              		.loc 1 675 15 view .LVU262
 1003 00b0 46F82500 		str	r0, [r6, r5, lsl #2]
 676:Src/Eagle_TRT.c **** 
 1004              		.loc 1 676 3 is_stmt 1 view .LVU263
 676:Src/Eagle_TRT.c **** 
 1005              		.loc 1 676 16 is_stmt 0 view .LVU264
 1006 00b4 2B1D     		adds	r3, r5, #4
 1007 00b6 44F82300 		str	r0, [r4, r3, lsl #2]
 678:Src/Eagle_TRT.c **** 		while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period / 2)
 1008              		.loc 1 678 3 is_stmt 1 view .LVU265
ARM GAS  /tmp/cch5Qmdz.s 			page 38


 1009 00ba D4F8C433 		ldr	r3, [r4, #964]
 1010 00be 1B68     		ldr	r3, [r3]
 1011 00c0 0022     		movs	r2, #0
 1012 00c2 5A62     		str	r2, [r3, #36]
 679:Src/Eagle_TRT.c **** 		{
 1013              		.loc 1 679 3 view .LVU266
 679:Src/Eagle_TRT.c **** 		{
 1014              		.loc 1 679 9 is_stmt 0 view .LVU267
 1015 00c4 02E0     		b	.L68
 1016              	.L67:
 679:Src/Eagle_TRT.c **** 		{
 1017              		.loc 1 679 9 discriminator 1 view .LVU268
 1018 00c6 B2EB630F 		cmp	r2, r3, asr #1
 1019 00ca 08D8     		bhi	.L75
 1020              	.L68:
 681:Src/Eagle_TRT.c **** 
 1021              		.loc 1 681 3 is_stmt 1 discriminator 1 view .LVU269
 679:Src/Eagle_TRT.c **** 		{
 1022              		.loc 1 679 9 discriminator 1 view .LVU270
 679:Src/Eagle_TRT.c **** 		{
 1023              		.loc 1 679 10 is_stmt 0 discriminator 1 view .LVU271
 1024 00cc D4F8C433 		ldr	r3, [r4, #964]
 1025 00d0 1B68     		ldr	r3, [r3]
 1026 00d2 5A6A     		ldr	r2, [r3, #36]
 679:Src/Eagle_TRT.c **** 		{
 1027              		.loc 1 679 58 discriminator 1 view .LVU272
 1028 00d4 E368     		ldr	r3, [r4, #12]
 679:Src/Eagle_TRT.c **** 		{
 1029              		.loc 1 679 73 discriminator 1 view .LVU273
 1030 00d6 002B     		cmp	r3, #0
 1031 00d8 F5DA     		bge	.L67
 1032 00da 0133     		adds	r3, r3, #1
 1033 00dc F3E7     		b	.L67
 1034              	.L75:
 684:Src/Eagle_TRT.c **** 		__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 1035              		.loc 1 684 3 is_stmt 1 view .LVU274
 1036 00de 0022     		movs	r2, #0
 1037 00e0 B4F8D413 		ldrh	r1, [r4, #980]
 1038 00e4 D4F8CC03 		ldr	r0, [r4, #972]
 1039 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1040              	.LVL70:
 685:Src/Eagle_TRT.c **** 		while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period)
 1041              		.loc 1 685 3 view .LVU275
 1042 00ec D4F8C433 		ldr	r3, [r4, #964]
 1043 00f0 1B68     		ldr	r3, [r3]
 1044 00f2 0022     		movs	r2, #0
 1045 00f4 5A62     		str	r2, [r3, #36]
 686:Src/Eagle_TRT.c **** 		{
 1046              		.loc 1 686 3 view .LVU276
 1047              	.L69:
 688:Src/Eagle_TRT.c **** 	}
 1048              		.loc 1 688 3 discriminator 1 view .LVU277
 686:Src/Eagle_TRT.c **** 		{
 1049              		.loc 1 686 9 discriminator 1 view .LVU278
 686:Src/Eagle_TRT.c **** 		{
 1050              		.loc 1 686 10 is_stmt 0 discriminator 1 view .LVU279
 1051 00f6 D4F8C433 		ldr	r3, [r4, #964]
ARM GAS  /tmp/cch5Qmdz.s 			page 39


 1052 00fa 1B68     		ldr	r3, [r3]
 1053 00fc 5A6A     		ldr	r2, [r3, #36]
 686:Src/Eagle_TRT.c **** 		{
 1054              		.loc 1 686 58 discriminator 1 view .LVU280
 1055 00fe E368     		ldr	r3, [r4, #12]
 686:Src/Eagle_TRT.c **** 		{
 1056              		.loc 1 686 9 discriminator 1 view .LVU281
 1057 0100 9A42     		cmp	r2, r3
 1058 0102 F8D9     		bls	.L69
 663:Src/Eagle_TRT.c **** 	{
 1059              		.loc 1 663 38 is_stmt 1 discriminator 2 view .LVU282
 663:Src/Eagle_TRT.c **** 	{
 1060              		.loc 1 663 39 is_stmt 0 discriminator 2 view .LVU283
 1061 0104 0135     		adds	r5, r5, #1
 1062              	.LVL71:
 1063              	.L64:
 663:Src/Eagle_TRT.c **** 	{
 1064              		.loc 1 663 18 is_stmt 1 discriminator 1 view .LVU284
 663:Src/Eagle_TRT.c **** 	{
 1065              		.loc 1 663 25 is_stmt 0 discriminator 1 view .LVU285
 1066 0106 2368     		ldr	r3, [r4]
 663:Src/Eagle_TRT.c **** 	{
 1067              		.loc 1 663 2 discriminator 1 view .LVU286
 1068 0108 9D42     		cmp	r5, r3
 1069 010a 0CDA     		bge	.L76
 667:Src/Eagle_TRT.c **** 		__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 1070              		.loc 1 667 3 is_stmt 1 view .LVU287
 1071 010c 0122     		movs	r2, #1
 1072 010e B4F8D413 		ldrh	r1, [r4, #980]
 1073 0112 D4F8CC03 		ldr	r0, [r4, #972]
 1074 0116 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1075              	.LVL72:
 668:Src/Eagle_TRT.c **** 		while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period / 2)
 1076              		.loc 1 668 3 view .LVU288
 1077 011a D4F8C433 		ldr	r3, [r4, #964]
 1078 011e 1B68     		ldr	r3, [r3]
 1079 0120 0022     		movs	r2, #0
 1080 0122 5A62     		str	r2, [r3, #36]
 669:Src/Eagle_TRT.c **** 		{
 1081              		.loc 1 669 3 view .LVU289
 669:Src/Eagle_TRT.c **** 		{
 1082              		.loc 1 669 9 is_stmt 0 view .LVU290
 1083 0124 B5E7     		b	.L66
 1084              	.L76:
 1085              	.LBE7:
 692:Src/Eagle_TRT.c **** 	__HAL_TIM_SET_COUNTER(enc->TimerInstance, 0);
 1086              		.loc 1 692 2 is_stmt 1 view .LVU291
 1087 0126 0122     		movs	r2, #1
 1088 0128 B4F8D413 		ldrh	r1, [r4, #980]
 1089 012c D4F8CC03 		ldr	r0, [r4, #972]
 1090 0130 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1091              	.LVL73:
 693:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period * 2)
 1092              		.loc 1 693 2 view .LVU292
 1093 0134 D4F8C433 		ldr	r3, [r4, #964]
 1094 0138 1B68     		ldr	r3, [r3]
 1095 013a 0022     		movs	r2, #0
ARM GAS  /tmp/cch5Qmdz.s 			page 40


 1096 013c 5A62     		str	r2, [r3, #36]
 694:Src/Eagle_TRT.c **** 	{
 1097              		.loc 1 694 2 view .LVU293
 1098              	.L71:
 696:Src/Eagle_TRT.c **** 
 1099              		.loc 1 696 2 discriminator 1 view .LVU294
 694:Src/Eagle_TRT.c **** 	{
 1100              		.loc 1 694 8 discriminator 1 view .LVU295
 694:Src/Eagle_TRT.c **** 	{
 1101              		.loc 1 694 9 is_stmt 0 discriminator 1 view .LVU296
 1102 013e D4F8C433 		ldr	r3, [r4, #964]
 1103 0142 1B68     		ldr	r3, [r3]
 1104 0144 5B6A     		ldr	r3, [r3, #36]
 694:Src/Eagle_TRT.c **** 	{
 1105              		.loc 1 694 57 discriminator 1 view .LVU297
 1106 0146 E268     		ldr	r2, [r4, #12]
 694:Src/Eagle_TRT.c **** 	{
 1107              		.loc 1 694 8 discriminator 1 view .LVU298
 1108 0148 B3EB420F 		cmp	r3, r2, lsl #1
 1109 014c F7D9     		bls	.L71
 698:Src/Eagle_TRT.c **** 
 1110              		.loc 1 698 2 is_stmt 1 view .LVU299
 698:Src/Eagle_TRT.c **** 
 1111              		.loc 1 698 19 is_stmt 0 view .LVU300
 1112 014e B4F8D613 		ldrh	r1, [r4, #982]
 1113 0152 D4F8D003 		ldr	r0, [r4, #976]
 1114 0156 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1115              	.LVL74:
 1116 015a 0546     		mov	r5, r0
 1117              	.LVL75:
 700:Src/Eagle_TRT.c **** 	while (__HAL_TIM_GET_COUNTER(enc->TimerInstance) <= enc->clock_period * 2)
 1118              		.loc 1 700 2 is_stmt 1 view .LVU301
 1119 015c D4F8C433 		ldr	r3, [r4, #964]
 1120 0160 1B68     		ldr	r3, [r3]
 1121 0162 0022     		movs	r2, #0
 1122 0164 5A62     		str	r2, [r3, #36]
 701:Src/Eagle_TRT.c **** 	{
 1123              		.loc 1 701 2 view .LVU302
 1124              	.L72:
 703:Src/Eagle_TRT.c **** 
 1125              		.loc 1 703 2 discriminator 1 view .LVU303
 701:Src/Eagle_TRT.c **** 	{
 1126              		.loc 1 701 8 discriminator 1 view .LVU304
 701:Src/Eagle_TRT.c **** 	{
 1127              		.loc 1 701 9 is_stmt 0 discriminator 1 view .LVU305
 1128 0166 D4F8C433 		ldr	r3, [r4, #964]
 1129 016a 1B68     		ldr	r3, [r3]
 1130 016c 5B6A     		ldr	r3, [r3, #36]
 701:Src/Eagle_TRT.c **** 	{
 1131              		.loc 1 701 57 discriminator 1 view .LVU306
 1132 016e E268     		ldr	r2, [r4, #12]
 701:Src/Eagle_TRT.c **** 	{
 1133              		.loc 1 701 8 discriminator 1 view .LVU307
 1134 0170 B3EB420F 		cmp	r3, r2, lsl #1
 1135 0174 F7D9     		bls	.L72
 706:Src/Eagle_TRT.c **** 
 1136              		.loc 1 706 2 is_stmt 1 view .LVU308
ARM GAS  /tmp/cch5Qmdz.s 			page 41


 706:Src/Eagle_TRT.c **** 
 1137              		.loc 1 706 35 is_stmt 0 view .LVU309
 1138 0176 2046     		mov	r0, r4
 1139              	.LVL76:
 706:Src/Eagle_TRT.c **** 
 1140              		.loc 1 706 24 view .LVU310
 1141 0178 50F8101B 		ldr	r1, [r0], #16
 1142 017c FFF7FEFF 		bl	bin_dec
 1143              	.LVL77:
 706:Src/Eagle_TRT.c **** 
 1144              		.loc 1 706 22 view .LVU311
 1145 0180 C4F8C003 		str	r0, [r4, #960]
 708:Src/Eagle_TRT.c **** }
 1146              		.loc 1 708 2 is_stmt 1 view .LVU312
 709:Src/Eagle_TRT.c **** 
 1147              		.loc 1 709 1 is_stmt 0 view .LVU313
 1148 0184 2846     		mov	r0, r5
 1149 0186 BD46     		mov	sp, r7
 1150              	.LCFI15:
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 0188 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 709:Src/Eagle_TRT.c **** 
 1154              		.loc 1 709 1 view .LVU314
 1155              		.cfi_endproc
 1156              	.LFE152:
 1158              		.section	.text.shift_array,"ax",%progbits
 1159              		.align	1
 1160              		.global	shift_array
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu fpv5-d16
 1166              	shift_array:
 1167              	.LVL78:
 1168              	.LFB161:
1004:Src/Eagle_TRT.c **** 
1005:Src/Eagle_TRT.c **** //shift all the data of a numeric array and add another one value
1006:Src/Eagle_TRT.c **** //array = array to be shifted
1007:Src/Eagle_TRT.c **** //size = size of the array
1008:Src/Eagle_TRT.c **** //data = value to be added in the last position of the array
1009:Src/Eagle_TRT.c **** void shift_array(long double *array, int size, long double data)
1010:Src/Eagle_TRT.c **** {
 1169              		.loc 1 1010 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
1011:Src/Eagle_TRT.c **** 
1012:Src/Eagle_TRT.c **** 	for (int i = 1; i < size; i++)
 1174              		.loc 1 1012 2 view .LVU316
 1175              	.LBB8:
 1176              		.loc 1 1012 7 view .LVU317
 1177              		.loc 1 1012 11 is_stmt 0 view .LVU318
 1178 0000 0122     		movs	r2, #1
 1179              	.LVL79:
 1180              		.loc 1 1012 18 is_stmt 1 view .LVU319
ARM GAS  /tmp/cch5Qmdz.s 			page 42


 1181              		.loc 1 1012 2 is_stmt 0 view .LVU320
 1182 0002 8A42     		cmp	r2, r1
 1183 0004 17DA     		bge	.L84
 1184              	.LBE8:
1010:Src/Eagle_TRT.c **** 
 1185              		.loc 1 1010 1 view .LVU321
 1186 0006 30B4     		push	{r4, r5}
 1187              	.LCFI16:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 4, -8
 1190              		.cfi_offset 5, -4
 1191              	.L79:
 1192              	.LBB9:
1013:Src/Eagle_TRT.c **** 	{
1014:Src/Eagle_TRT.c **** 		array[i - 1] = array[i];
 1193              		.loc 1 1014 3 is_stmt 1 discriminator 3 view .LVU322
 1194              		.loc 1 1014 8 is_stmt 0 discriminator 3 view .LVU323
 1195 0008 6FF06043 		mvn	r3, #-536870912
 1196 000c 1344     		add	r3, r3, r2
 1197 000e 00EBC303 		add	r3, r0, r3, lsl #3
 1198              		.loc 1 1014 23 discriminator 3 view .LVU324
 1199 0012 00EBC204 		add	r4, r0, r2, lsl #3
 1200 0016 D4E90045 		ldrd	r4, [r4]
 1201              		.loc 1 1014 16 discriminator 3 view .LVU325
 1202 001a C3E90045 		strd	r4, [r3]
1012:Src/Eagle_TRT.c **** 	{
 1203              		.loc 1 1012 28 is_stmt 1 discriminator 3 view .LVU326
1012:Src/Eagle_TRT.c **** 	{
 1204              		.loc 1 1012 29 is_stmt 0 discriminator 3 view .LVU327
 1205 001e 0132     		adds	r2, r2, #1
 1206              	.LVL80:
1012:Src/Eagle_TRT.c **** 	{
 1207              		.loc 1 1012 18 is_stmt 1 discriminator 3 view .LVU328
1012:Src/Eagle_TRT.c **** 	{
 1208              		.loc 1 1012 2 is_stmt 0 discriminator 3 view .LVU329
 1209 0020 8A42     		cmp	r2, r1
 1210 0022 F1DB     		blt	.L79
 1211              	.LBE9:
1015:Src/Eagle_TRT.c **** 	}
1016:Src/Eagle_TRT.c **** 	array[size - 1] = data;
 1212              		.loc 1 1016 2 is_stmt 1 view .LVU330
 1213              		.loc 1 1016 7 is_stmt 0 view .LVU331
 1214 0024 6FF06043 		mvn	r3, #-536870912
 1215 0028 0B44     		add	r3, r3, r1
 1216 002a 00EBC300 		add	r0, r0, r3, lsl #3
 1217              	.LVL81:
 1218              		.loc 1 1016 18 view .LVU332
 1219 002e 80ED000B 		vstr.64	d0, [r0]
1017:Src/Eagle_TRT.c **** }
 1220              		.loc 1 1017 1 view .LVU333
 1221 0032 30BC     		pop	{r4, r5}
 1222              	.LCFI17:
 1223              		.cfi_restore 5
 1224              		.cfi_restore 4
 1225              		.cfi_def_cfa_offset 0
 1226 0034 7047     		bx	lr
 1227              	.LVL82:
ARM GAS  /tmp/cch5Qmdz.s 			page 43


 1228              	.L84:
1016:Src/Eagle_TRT.c **** }
 1229              		.loc 1 1016 2 is_stmt 1 view .LVU334
1016:Src/Eagle_TRT.c **** }
 1230              		.loc 1 1016 7 is_stmt 0 view .LVU335
 1231 0036 6FF06043 		mvn	r3, #-536870912
 1232 003a 0B44     		add	r3, r3, r1
 1233 003c 00EBC300 		add	r0, r0, r3, lsl #3
 1234              	.LVL83:
1016:Src/Eagle_TRT.c **** }
 1235              		.loc 1 1016 18 view .LVU336
 1236 0040 80ED000B 		vstr.64	d0, [r0]
 1237 0044 7047     		bx	lr
 1238              		.cfi_endproc
 1239              	.LFE161:
 1241              		.section	.text.speed_filter,"ax",%progbits
 1242              		.align	1
 1243              		.global	speed_filter
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu fpv5-d16
 1249              	speed_filter:
 1250              	.LVL84:
 1251              	.LFB162:
1018:Src/Eagle_TRT.c **** 
1019:Src/Eagle_TRT.c **** double speed_filter(double *data, int size)
1020:Src/Eagle_TRT.c **** {
 1252              		.loc 1 1020 1 is_stmt 1 view -0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		@ link register save eliminated.
 1257              		.loc 1 1020 1 is_stmt 0 view .LVU338
 1258 0000 70B4     		push	{r4, r5, r6}
 1259              	.LCFI18:
 1260              		.cfi_def_cfa_offset 12
 1261              		.cfi_offset 4, -12
 1262              		.cfi_offset 5, -8
 1263              		.cfi_offset 6, -4
1021:Src/Eagle_TRT.c **** 	double min = 100000000000000;
 1264              		.loc 1 1021 2 is_stmt 1 view .LVU339
 1265              	.LVL85:
1022:Src/Eagle_TRT.c **** 	double max = -min;
 1266              		.loc 1 1022 2 view .LVU340
1023:Src/Eagle_TRT.c **** 	double sum = 0;
 1267              		.loc 1 1023 2 view .LVU341
1024:Src/Eagle_TRT.c **** 	double average = 0;
 1268              		.loc 1 1024 2 view .LVU342
1025:Src/Eagle_TRT.c **** 	int index_1;
 1269              		.loc 1 1025 2 view .LVU343
1026:Src/Eagle_TRT.c **** 	int index_2;
 1270              		.loc 1 1026 2 view .LVU344
1027:Src/Eagle_TRT.c **** 	int average_members = 0;
 1271              		.loc 1 1027 2 view .LVU345
1028:Src/Eagle_TRT.c **** 
1029:Src/Eagle_TRT.c **** 	for (int i = 0; i < size; i++)
ARM GAS  /tmp/cch5Qmdz.s 			page 44


 1272              		.loc 1 1029 2 view .LVU346
 1273              	.LBB10:
 1274              		.loc 1 1029 7 view .LVU347
 1275              		.loc 1 1029 11 is_stmt 0 view .LVU348
 1276 0002 0023     		movs	r3, #0
 1277              	.LBE10:
1022:Src/Eagle_TRT.c **** 	double sum = 0;
 1278              		.loc 1 1022 9 view .LVU349
 1279 0004 9FED1C5B 		vldr.64	d5, .L98
1021:Src/Eagle_TRT.c **** 	double max = -min;
 1280              		.loc 1 1021 9 view .LVU350
 1281 0008 9FED1D6B 		vldr.64	d6, .L98+8
 1282              	.LBB11:
 1283              		.loc 1 1029 2 view .LVU351
 1284 000c 00E0     		b	.L86
 1285              	.LVL86:
 1286              	.L88:
 1287              		.loc 1 1029 28 is_stmt 1 discriminator 2 view .LVU352
 1288              		.loc 1 1029 29 is_stmt 0 discriminator 2 view .LVU353
 1289 000e 0133     		adds	r3, r3, #1
 1290              	.LVL87:
 1291              	.L86:
 1292              		.loc 1 1029 18 is_stmt 1 discriminator 1 view .LVU354
 1293              		.loc 1 1029 2 is_stmt 0 discriminator 1 view .LVU355
 1294 0010 8B42     		cmp	r3, r1
 1295 0012 14DA     		bge	.L96
1030:Src/Eagle_TRT.c **** 	{
1031:Src/Eagle_TRT.c **** 		if (data[i] < min)
 1296              		.loc 1 1031 3 is_stmt 1 view .LVU356
 1297              		.loc 1 1031 11 is_stmt 0 view .LVU357
 1298 0014 00EBC302 		add	r2, r0, r3, lsl #3
 1299 0018 92ED007B 		vldr.64	d7, [r2]
 1300              		.loc 1 1031 6 view .LVU358
 1301 001c B4EEC67B 		vcmpe.f64	d7, d6
 1302 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1303 0024 02D5     		bpl	.L87
1032:Src/Eagle_TRT.c **** 		{
1033:Src/Eagle_TRT.c **** 			min = data[i];
1034:Src/Eagle_TRT.c **** 			index_1 = i;
 1304              		.loc 1 1034 12 view .LVU359
 1305 0026 1C46     		mov	r4, r3
 1306              	.LVL88:
1033:Src/Eagle_TRT.c **** 			index_1 = i;
 1307              		.loc 1 1033 8 view .LVU360
 1308 0028 B0EE476B 		vmov.f64	d6, d7
 1309              	.LVL89:
 1310              	.L87:
1035:Src/Eagle_TRT.c **** 		}
1036:Src/Eagle_TRT.c **** 
1037:Src/Eagle_TRT.c **** 		if (data[i] > max)
 1311              		.loc 1 1037 3 is_stmt 1 view .LVU361
 1312              		.loc 1 1037 6 is_stmt 0 view .LVU362
 1313 002c B4EEC57B 		vcmpe.f64	d7, d5
 1314 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1315 0034 EBDD     		ble	.L88
1038:Src/Eagle_TRT.c **** 		{
1039:Src/Eagle_TRT.c **** 			max = data[i];
ARM GAS  /tmp/cch5Qmdz.s 			page 45


1040:Src/Eagle_TRT.c **** 			index_2 = i;
 1316              		.loc 1 1040 12 view .LVU363
 1317 0036 1D46     		mov	r5, r3
 1318              	.LVL90:
1039:Src/Eagle_TRT.c **** 			index_2 = i;
 1319              		.loc 1 1039 8 view .LVU364
 1320 0038 B0EE475B 		vmov.f64	d5, d7
 1321              	.LVL91:
1039:Src/Eagle_TRT.c **** 			index_2 = i;
 1322              		.loc 1 1039 8 view .LVU365
 1323 003c E7E7     		b	.L88
 1324              	.LVL92:
 1325              	.L96:
1039:Src/Eagle_TRT.c **** 			index_2 = i;
 1326              		.loc 1 1039 8 view .LVU366
 1327              	.LBE11:
 1328              	.LBB12:
1041:Src/Eagle_TRT.c **** 		}
1042:Src/Eagle_TRT.c **** 	}
1043:Src/Eagle_TRT.c **** 
1044:Src/Eagle_TRT.c **** 	for (int i = 0; i < size; i++)
 1329              		.loc 1 1044 11 view .LVU367
 1330 003e 0023     		movs	r3, #0
 1331              	.LVL93:
 1332              		.loc 1 1044 11 view .LVU368
 1333              	.LBE12:
1027:Src/Eagle_TRT.c **** 
 1334              		.loc 1 1027 6 view .LVU369
 1335 0040 1A46     		mov	r2, r3
1023:Src/Eagle_TRT.c **** 	double average = 0;
 1336              		.loc 1 1023 9 view .LVU370
 1337 0042 9FED110B 		vldr.64	d0, .L98+16
 1338 0046 00E0     		b	.L90
 1339              	.LVL94:
 1340              	.L91:
 1341              	.LBB13:
 1342              		.loc 1 1044 28 is_stmt 1 discriminator 2 view .LVU371
 1343              		.loc 1 1044 29 is_stmt 0 discriminator 2 view .LVU372
 1344 0048 0133     		adds	r3, r3, #1
 1345              	.LVL95:
 1346              	.L90:
 1347              		.loc 1 1044 18 is_stmt 1 discriminator 1 view .LVU373
 1348              		.loc 1 1044 2 is_stmt 0 discriminator 1 view .LVU374
 1349 004a 8B42     		cmp	r3, r1
 1350 004c 0BDA     		bge	.L97
1045:Src/Eagle_TRT.c **** 	{
1046:Src/Eagle_TRT.c **** 		if (i != index_1 || i != index_2)
 1351              		.loc 1 1046 3 is_stmt 1 view .LVU375
 1352              		.loc 1 1046 6 is_stmt 0 view .LVU376
 1353 004e 9D42     		cmp	r5, r3
 1354 0050 08BF     		it	eq
 1355 0052 9C42     		cmpeq	r4, r3
 1356 0054 F8D0     		beq	.L91
1047:Src/Eagle_TRT.c **** 		{
1048:Src/Eagle_TRT.c **** 			sum += data[i];
 1357              		.loc 1 1048 4 is_stmt 1 view .LVU377
 1358              		.loc 1 1048 15 is_stmt 0 view .LVU378
ARM GAS  /tmp/cch5Qmdz.s 			page 46


 1359 0056 00EBC306 		add	r6, r0, r3, lsl #3
 1360 005a 96ED007B 		vldr.64	d7, [r6]
 1361              		.loc 1 1048 8 view .LVU379
 1362 005e 30EE070B 		vadd.f64	d0, d0, d7
 1363              	.LVL96:
1049:Src/Eagle_TRT.c **** 			average_members++;
 1364              		.loc 1 1049 4 is_stmt 1 view .LVU380
 1365              		.loc 1 1049 19 is_stmt 0 view .LVU381
 1366 0062 0132     		adds	r2, r2, #1
 1367              	.LVL97:
 1368              		.loc 1 1049 19 view .LVU382
 1369 0064 F0E7     		b	.L91
 1370              	.L97:
 1371              		.loc 1 1049 19 view .LVU383
 1372              	.LBE13:
1050:Src/Eagle_TRT.c **** 		}
1051:Src/Eagle_TRT.c **** 	}
1052:Src/Eagle_TRT.c **** 	average = sum / average_members;
 1373              		.loc 1 1052 2 is_stmt 1 view .LVU384
 1374              		.loc 1 1052 16 is_stmt 0 view .LVU385
 1375 0066 07EE902A 		vmov	s15, r2	@ int
 1376 006a B8EEE77B 		vcvt.f64.s32	d7, s15
 1377              	.LVL98:
1053:Src/Eagle_TRT.c **** 
1054:Src/Eagle_TRT.c **** 	return average;
 1378              		.loc 1 1054 2 is_stmt 1 view .LVU386
1055:Src/Eagle_TRT.c **** }
 1379              		.loc 1 1055 1 is_stmt 0 view .LVU387
 1380 006e 80EE070B 		vdiv.f64	d0, d0, d7
 1381              	.LVL99:
 1382              		.loc 1 1055 1 view .LVU388
 1383 0072 70BC     		pop	{r4, r5, r6}
 1384              	.LCFI19:
 1385              		.cfi_restore 6
 1386              		.cfi_restore 5
 1387              		.cfi_restore 4
 1388              		.cfi_def_cfa_offset 0
 1389              	.LVL100:
 1390              		.loc 1 1055 1 view .LVU389
 1391 0074 7047     		bx	lr
 1392              	.L99:
 1393 0076 00BF     		.align	3
 1394              	.L98:
 1395 0078 0000901E 		.word	512753664
 1396 007c C4BCD6C2 		.word	-1026114364
 1397 0080 0000901E 		.word	512753664
 1398 0084 C4BCD642 		.word	1121369284
 1399 0088 00000000 		.word	0
 1400 008c 00000000 		.word	0
 1401              		.cfi_endproc
 1402              	.LFE162:
 1404              		.section	.text.dynamic_average,"ax",%progbits
 1405              		.align	1
 1406              		.global	dynamic_average
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
ARM GAS  /tmp/cch5Qmdz.s 			page 47


 1410              		.fpu fpv5-d16
 1412              	dynamic_average:
 1413              	.LVL101:
 1414              	.LFB163:
1056:Src/Eagle_TRT.c **** 
1057:Src/Eagle_TRT.c **** //function that calculate the average of all the numbers in one array
1058:Src/Eagle_TRT.c **** double dynamic_average(long double *array, int size)
1059:Src/Eagle_TRT.c **** {
 1415              		.loc 1 1059 1 is_stmt 1 view -0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
1060:Src/Eagle_TRT.c **** 
1061:Src/Eagle_TRT.c **** 	double sum = 0;
 1420              		.loc 1 1061 2 view .LVU391
1062:Src/Eagle_TRT.c **** 	double average = 0;
 1421              		.loc 1 1062 2 view .LVU392
1063:Src/Eagle_TRT.c **** 
1064:Src/Eagle_TRT.c **** 	for (int i = 0; i < size; i++)
 1422              		.loc 1 1064 2 view .LVU393
 1423              	.LBB14:
 1424              		.loc 1 1064 7 view .LVU394
 1425              		.loc 1 1064 11 is_stmt 0 view .LVU395
 1426 0000 0023     		movs	r3, #0
 1427              	.LBE14:
1061:Src/Eagle_TRT.c **** 	double average = 0;
 1428              		.loc 1 1061 9 view .LVU396
 1429 0002 9FED097B 		vldr.64	d7, .L104
 1430              	.LVL102:
 1431              	.L101:
 1432              	.LBB15:
 1433              		.loc 1 1064 18 is_stmt 1 discriminator 1 view .LVU397
 1434              		.loc 1 1064 2 is_stmt 0 discriminator 1 view .LVU398
 1435 0006 8B42     		cmp	r3, r1
 1436 0008 07DA     		bge	.L103
1065:Src/Eagle_TRT.c **** 	{
1066:Src/Eagle_TRT.c **** 		sum += array[i];
 1437              		.loc 1 1066 3 is_stmt 1 discriminator 3 view .LVU399
 1438              		.loc 1 1066 15 is_stmt 0 discriminator 3 view .LVU400
 1439 000a 00EBC302 		add	r2, r0, r3, lsl #3
 1440 000e 92ED006B 		vldr.64	d6, [r2]
 1441              		.loc 1 1066 7 discriminator 3 view .LVU401
 1442 0012 37EE067B 		vadd.f64	d7, d7, d6
 1443              	.LVL103:
1064:Src/Eagle_TRT.c **** 	{
 1444              		.loc 1 1064 28 is_stmt 1 discriminator 3 view .LVU402
1064:Src/Eagle_TRT.c **** 	{
 1445              		.loc 1 1064 29 is_stmt 0 discriminator 3 view .LVU403
 1446 0016 0133     		adds	r3, r3, #1
 1447              	.LVL104:
1064:Src/Eagle_TRT.c **** 	{
 1448              		.loc 1 1064 29 discriminator 3 view .LVU404
 1449 0018 F5E7     		b	.L101
 1450              	.L103:
1064:Src/Eagle_TRT.c **** 	{
 1451              		.loc 1 1064 29 discriminator 3 view .LVU405
ARM GAS  /tmp/cch5Qmdz.s 			page 48


 1452              	.LBE15:
1067:Src/Eagle_TRT.c **** 	}
1068:Src/Eagle_TRT.c **** 	average = sum / size;
 1453              		.loc 1 1068 2 is_stmt 1 view .LVU406
 1454              		.loc 1 1068 16 is_stmt 0 view .LVU407
 1455 001a 06EE901A 		vmov	s13, r1	@ int
 1456 001e B8EEE60B 		vcvt.f64.s32	d0, s13
 1457              	.LVL105:
1069:Src/Eagle_TRT.c **** 
1070:Src/Eagle_TRT.c **** 	return average;
 1458              		.loc 1 1070 2 is_stmt 1 view .LVU408
1071:Src/Eagle_TRT.c **** }
 1459              		.loc 1 1071 1 is_stmt 0 view .LVU409
 1460 0022 87EE000B 		vdiv.f64	d0, d7, d0
 1461              	.LVL106:
 1462              		.loc 1 1071 1 view .LVU410
 1463 0026 7047     		bx	lr
 1464              	.L105:
 1465              		.align	3
 1466              	.L104:
 1467 0028 00000000 		.word	0
 1468 002c 00000000 		.word	0
 1469              		.cfi_endproc
 1470              	.LFE163:
 1472              		.section	.text.get_speed_encoder,"ax",%progbits
 1473              		.align	1
 1474              		.global	get_speed_encoder
 1475              		.syntax unified
 1476              		.thumb
 1477              		.thumb_func
 1478              		.fpu fpv5-d16
 1480              	get_speed_encoder:
 1481              	.LVL107:
 1482              	.LFB154:
 769:Src/Eagle_TRT.c **** 
 1483              		.loc 1 769 1 is_stmt 1 view -0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 769:Src/Eagle_TRT.c **** 
 1487              		.loc 1 769 1 is_stmt 0 view .LVU412
 1488 0000 38B5     		push	{r3, r4, r5, lr}
 1489              	.LCFI20:
 1490              		.cfi_def_cfa_offset 16
 1491              		.cfi_offset 3, -16
 1492              		.cfi_offset 4, -12
 1493              		.cfi_offset 5, -8
 1494              		.cfi_offset 14, -4
 1495 0002 0446     		mov	r4, r0
 771:Src/Eagle_TRT.c **** 	double dt = 0;
 1496              		.loc 1 771 2 is_stmt 1 view .LVU413
 1497              	.LVL108:
 772:Src/Eagle_TRT.c **** 
 1498              		.loc 1 772 2 view .LVU414
 774:Src/Eagle_TRT.c **** 	{
 1499              		.loc 1 774 2 view .LVU415
 774:Src/Eagle_TRT.c **** 	{
ARM GAS  /tmp/cch5Qmdz.s 			page 49


 1500              		.loc 1 774 9 is_stmt 0 view .LVU416
 1501 0004 C36C     		ldr	r3, [r0, #76]
 774:Src/Eagle_TRT.c **** 	{
 1502              		.loc 1 774 5 view .LVU417
 1503 0006 012B     		cmp	r3, #1
 1504 0008 44D0     		beq	.L142
 780:Src/Eagle_TRT.c **** 	}
 1505              		.loc 1 780 3 is_stmt 1 view .LVU418
 780:Src/Eagle_TRT.c **** 	}
 1506              		.loc 1 780 25 is_stmt 0 view .LVU419
 1507 000a 90ED1C7B 		vldr.64	d7, [r0, #112]
 780:Src/Eagle_TRT.c **** 	}
 1508              		.loc 1 780 39 view .LVU420
 1509 000e 90ED1E6B 		vldr.64	d6, [r0, #120]
 780:Src/Eagle_TRT.c **** 	}
 1510              		.loc 1 780 34 view .LVU421
 1511 0012 37EE467B 		vsub.f64	d7, d7, d6
 780:Src/Eagle_TRT.c **** 	}
 1512              		.loc 1 780 20 view .LVU422
 1513 0016 80ED247B 		vstr.64	d7, [r0, #144]
 1514              	.L108:
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1515              		.loc 1 784 2 is_stmt 1 view .LVU423
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1516              		.loc 1 784 10 is_stmt 0 view .LVU424
 1517 001a 94ED1C5B 		vldr.64	d5, [r4, #112]
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1518              		.loc 1 784 24 view .LVU425
 1519 001e D4ED186A 		vldr.32	s13, [r4, #96]
 1520 0022 B7EEE63A 		vcvt.f64.f32	d3, s13
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1521              		.loc 1 784 5 view .LVU426
 1522 0026 B4EEC35B 		vcmpe.f64	d5, d3
 1523 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1524 002e 0CD5     		bpl	.L109
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1525              		.loc 1 784 48 discriminator 1 view .LVU427
 1526 0030 94ED1E4B 		vldr.64	d4, [r4, #120]
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1527              		.loc 1 784 63 discriminator 1 view .LVU428
 1528 0034 9FED767A 		vldr.32	s14, .L144+64
 1529 0038 37EE667A 		vsub.f32	s14, s14, s13
 1530 003c B7EEC77A 		vcvt.f64.f32	d7, s14
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1531              		.loc 1 784 42 discriminator 1 view .LVU429
 1532 0040 B4EEC74B 		vcmpe.f64	d4, d7
 1533 0044 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1534 0048 11DC     		bgt	.L111
 1535              	.L109:
 785:Src/Eagle_TRT.c **** 	{
 1536              		.loc 1 785 7 discriminator 3 view .LVU430
 1537 004a 94ED1E7B 		vldr.64	d7, [r4, #120]
 784:Src/Eagle_TRT.c **** 		(enc->angle1 < enc->max_delta_angle && enc->angle0 > 360 - enc->max_delta_angle))
 1538              		.loc 1 784 87 discriminator 3 view .LVU431
 1539 004e B4EEC73B 		vcmpe.f64	d3, d7
 1540 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1541 0056 2CDD     		ble	.L112
ARM GAS  /tmp/cch5Qmdz.s 			page 50


 785:Src/Eagle_TRT.c **** 	{
 1542              		.loc 1 785 60 view .LVU432
 1543 0058 9FED6D7A 		vldr.32	s14, .L144+64
 1544 005c 77EE666A 		vsub.f32	s13, s14, s13
 1545 0060 B7EEE67A 		vcvt.f64.f32	d7, s13
 785:Src/Eagle_TRT.c **** 	{
 1546              		.loc 1 785 39 view .LVU433
 1547 0064 B4EEC75B 		vcmpe.f64	d5, d7
 1548 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1549 006c 21DD     		ble	.L112
 1550              	.L111:
 787:Src/Eagle_TRT.c **** 		{
 1551              		.loc 1 787 3 is_stmt 1 view .LVU434
 787:Src/Eagle_TRT.c **** 		{
 1552              		.loc 1 787 10 is_stmt 0 view .LVU435
 1553 006e 94ED247B 		vldr.64	d7, [r4, #144]
 787:Src/Eagle_TRT.c **** 		{
 1554              		.loc 1 787 6 view .LVU436
 1555 0072 B5EEC07B 		vcmpe.f64	d7, #0
 1556 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1557 007a 14D4     		bmi	.L143
 793:Src/Eagle_TRT.c **** 			{
 1558              		.loc 1 793 4 is_stmt 1 view .LVU437
 793:Src/Eagle_TRT.c **** 			{
 1559              		.loc 1 793 7 is_stmt 0 view .LVU438
 1560 007c B5EEC07B 		vcmpe.f64	d7, #0
 1561 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1562 0084 15DD     		ble	.L112
 795:Src/Eagle_TRT.c **** 			}
 1563              		.loc 1 795 5 is_stmt 1 view .LVU439
 795:Src/Eagle_TRT.c **** 			}
 1564              		.loc 1 795 28 is_stmt 0 view .LVU440
 1565 0086 9FED526B 		vldr.64	d6, .L144
 1566 008a 36EE477B 		vsub.f64	d7, d6, d7
 795:Src/Eagle_TRT.c **** 			}
 1567              		.loc 1 795 22 view .LVU441
 1568 008e 84ED247B 		vstr.64	d7, [r4, #144]
 1569 0092 0EE0     		b	.L112
 1570              	.L142:
 776:Src/Eagle_TRT.c **** 	}
 1571              		.loc 1 776 3 is_stmt 1 view .LVU442
 776:Src/Eagle_TRT.c **** 	}
 1572              		.loc 1 776 25 is_stmt 0 view .LVU443
 1573 0094 90ED1E7B 		vldr.64	d7, [r0, #120]
 776:Src/Eagle_TRT.c **** 	}
 1574              		.loc 1 776 39 view .LVU444
 1575 0098 90ED1C6B 		vldr.64	d6, [r0, #112]
 776:Src/Eagle_TRT.c **** 	}
 1576              		.loc 1 776 34 view .LVU445
 1577 009c 37EE467B 		vsub.f64	d7, d7, d6
 776:Src/Eagle_TRT.c **** 	}
 1578              		.loc 1 776 20 view .LVU446
 1579 00a0 80ED247B 		vstr.64	d7, [r0, #144]
 1580 00a4 B9E7     		b	.L108
 1581              	.L143:
 789:Src/Eagle_TRT.c **** 		}
 1582              		.loc 1 789 4 is_stmt 1 view .LVU447
ARM GAS  /tmp/cch5Qmdz.s 			page 51


 789:Src/Eagle_TRT.c **** 		}
 1583              		.loc 1 789 27 is_stmt 0 view .LVU448
 1584 00a6 9FED4A6B 		vldr.64	d6, .L144
 1585 00aa 37EE067B 		vadd.f64	d7, d7, d6
 789:Src/Eagle_TRT.c **** 		}
 1586              		.loc 1 789 21 view .LVU449
 1587 00ae 84ED247B 		vstr.64	d7, [r4, #144]
 1588              	.L112:
 802:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 1589              		.loc 1 802 2 is_stmt 1 view .LVU450
 802:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 1590              		.loc 1 802 14 is_stmt 0 view .LVU451
 1591 00b2 94ED244B 		vldr.64	d4, [r4, #144]
 802:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 1592              		.loc 1 802 28 view .LVU452
 1593 00b6 9FED467B 		vldr.64	d7, .L144
 1594 00ba 84EE076B 		vdiv.f64	d6, d4, d7
 802:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 1595              		.loc 1 802 42 view .LVU453
 1596 00be D4ED174A 		vldr.32	s9, [r4, #92]
 802:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 1597              		.loc 1 802 59 view .LVU454
 1598 00c2 B6EE007A 		vmov.f32	s14, #5.0e-1
 1599 00c6 24EE877A 		vmul.f32	s14, s9, s14
 1600 00ca B7EEC77A 		vcvt.f64.f32	d7, s14
 802:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 1601              		.loc 1 802 64 view .LVU455
 1602 00ce 9FED423B 		vldr.64	d3, .L144+8
 1603 00d2 27EE037B 		vmul.f64	d7, d7, d3
 802:Src/Eagle_TRT.c **** 	speed *= enc->frequency;
 1604              		.loc 1 802 8 view .LVU456
 1605 00d6 26EE076B 		vmul.f64	d6, d6, d7
 1606              	.LVL109:
 803:Src/Eagle_TRT.c **** 	speed *= 3.6;
 1607              		.loc 1 803 2 is_stmt 1 view .LVU457
 803:Src/Eagle_TRT.c **** 	speed *= 3.6;
 1608              		.loc 1 803 14 is_stmt 0 view .LVU458
 1609 00da 94ED197A 		vldr.32	s14, [r4, #100]
 1610 00de B7EEC77A 		vcvt.f64.f32	d7, s14
 803:Src/Eagle_TRT.c **** 	speed *= 3.6;
 1611              		.loc 1 803 8 view .LVU459
 1612 00e2 27EE067B 		vmul.f64	d7, d7, d6
 1613              	.LVL110:
 804:Src/Eagle_TRT.c **** 	speed = round((speed * 1000)) / 1000;
 1614              		.loc 1 804 2 is_stmt 1 view .LVU460
 804:Src/Eagle_TRT.c **** 	speed = round((speed * 1000)) / 1000;
 1615              		.loc 1 804 8 is_stmt 0 view .LVU461
 1616 00e6 9FED3E6B 		vldr.64	d6, .L144+16
 1617 00ea 27EE067B 		vmul.f64	d7, d7, d6
 1618              	.LVL111:
 805:Src/Eagle_TRT.c **** 
 1619              		.loc 1 805 2 is_stmt 1 view .LVU462
 805:Src/Eagle_TRT.c **** 
 1620              		.loc 1 805 23 is_stmt 0 view .LVU463
 1621 00ee 9FED3E6B 		vldr.64	d6, .L144+24
 1622 00f2 27EE067B 		vmul.f64	d7, d7, d6
 1623              	.LVL112:
ARM GAS  /tmp/cch5Qmdz.s 			page 52


 805:Src/Eagle_TRT.c **** 
 1624              		.loc 1 805 10 view .LVU464
 1625 00f6 B8FE477B 		vrinta.f64	d7, d7
 805:Src/Eagle_TRT.c **** 
 1626              		.loc 1 805 8 view .LVU465
 1627 00fa 87EE060B 		vdiv.f64	d0, d7, d6
 1628              	.LVL113:
 807:Src/Eagle_TRT.c **** 
 1629              		.loc 1 807 2 is_stmt 1 view .LVU466
 811:Src/Eagle_TRT.c **** 	{
 1630              		.loc 1 811 2 view .LVU467
 811:Src/Eagle_TRT.c **** 	{
 1631              		.loc 1 811 9 is_stmt 0 view .LVU468
 1632 00fe 94EDEE7B 		vldr.64	d7, [r4, #952]
 811:Src/Eagle_TRT.c **** 	{
 1633              		.loc 1 811 5 view .LVU469
 1634 0102 BEEE006B 		vmov.f64	d6, #-5.0e-1
 1635 0106 B4EEC67B 		vcmpe.f64	d7, d6
 1636 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1637 010e 06D4     		bmi	.L118
 811:Src/Eagle_TRT.c **** 	{
 1638              		.loc 1 811 32 discriminator 1 view .LVU470
 1639 0110 B6EE006B 		vmov.f64	d6, #5.0e-1
 1640 0114 B4EEC67B 		vcmpe.f64	d7, d6
 1641 0118 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1642 011c 4ADD     		ble	.L119
 1643              	.L118:
 813:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 1644              		.loc 1 813 3 is_stmt 1 view .LVU471
 813:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 1645              		.loc 1 813 11 is_stmt 0 view .LVU472
 1646 011e 94ED207B 		vldr.64	d7, [r4, #128]
 813:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 1647              		.loc 1 813 6 view .LVU473
 1648 0122 9FED336B 		vldr.64	d6, .L144+32
 1649 0126 B4EEC67B 		vcmpe.f64	d7, d6
 1650 012a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1651 012e 14D8     		bhi	.L121
 813:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 1652              		.loc 1 813 32 discriminator 1 view .LVU474
 1653 0130 9FED316B 		vldr.64	d6, .L144+40
 1654 0134 B4EEC67B 		vcmpe.f64	d7, d6
 1655 0138 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1656 013c 0DDD     		ble	.L121
 813:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 1657              		.loc 1 813 65 discriminator 3 view .LVU475
 1658 013e BFEE006B 		vmov.f64	d6, #-1.0e+0
 1659 0142 B4EEC65B 		vcmpe.f64	d5, d6
 1660 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1661 014a 06DB     		blt	.L121
 813:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 1662              		.loc 1 813 87 discriminator 5 view .LVU476
 1663 014c 9FED2C6B 		vldr.64	d6, .L144+48
 1664 0150 B4EEC65B 		vcmpe.f64	d5, d6
 1665 0154 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1666 0158 1BD4     		bmi	.L125
 1667              	.L121:
ARM GAS  /tmp/cch5Qmdz.s 			page 53


 813:Src/Eagle_TRT.c **** 			(enc->angle0_prec >= -1 && enc->angle0_prec < off) && (enc->angle0 <= 361 && enc->angle0 > 360 -
 1668              		.loc 1 813 109 discriminator 7 view .LVU477
 1669 015a BFEE006B 		vmov.f64	d6, #-1.0e+0
 1670 015e B4EEC67B 		vcmpe.f64	d7, d6
 1671 0162 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1672 0166 25DB     		blt	.L119
 814:Src/Eagle_TRT.c **** 		{
 1673              		.loc 1 814 28 view .LVU478
 1674 0168 9FED256B 		vldr.64	d6, .L144+48
 1675 016c B4EEC67B 		vcmpe.f64	d7, d6
 1676 0170 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1677 0174 1ED5     		bpl	.L119
 814:Src/Eagle_TRT.c **** 		{
 1678              		.loc 1 814 55 discriminator 1 view .LVU479
 1679 0176 9FED1E7B 		vldr.64	d7, .L144+32
 1680 017a B4EEC75B 		vcmpe.f64	d5, d7
 1681 017e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1682 0182 17D8     		bhi	.L119
 814:Src/Eagle_TRT.c **** 		{
 1683              		.loc 1 814 78 discriminator 2 view .LVU480
 1684 0184 9FED1C7B 		vldr.64	d7, .L144+40
 1685 0188 B4EEC75B 		vcmpe.f64	d5, d7
 1686 018c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1687 0190 10DD     		ble	.L119
 1688              	.L125:
 816:Src/Eagle_TRT.c **** 			enc->Km += (3.14 * enc->wheel_diameter);
 1689              		.loc 1 816 4 is_stmt 1 view .LVU481
 816:Src/Eagle_TRT.c **** 			enc->Km += (3.14 * enc->wheel_diameter);
 1690              		.loc 1 816 7 is_stmt 0 view .LVU482
 1691 0192 236D     		ldr	r3, [r4, #80]
 816:Src/Eagle_TRT.c **** 			enc->Km += (3.14 * enc->wheel_diameter);
 1692              		.loc 1 816 23 view .LVU483
 1693 0194 0133     		adds	r3, r3, #1
 1694 0196 2365     		str	r3, [r4, #80]
 817:Src/Eagle_TRT.c **** 		}
 1695              		.loc 1 817 4 is_stmt 1 view .LVU484
 817:Src/Eagle_TRT.c **** 		}
 1696              		.loc 1 817 26 is_stmt 0 view .LVU485
 1697 0198 B7EEE47A 		vcvt.f64.f32	d7, s9
 817:Src/Eagle_TRT.c **** 		}
 1698              		.loc 1 817 12 view .LVU486
 1699 019c 94ED156A 		vldr.32	s12, [r4, #84]
 1700 01a0 B7EEC66A 		vcvt.f64.f32	d6, s12
 1701 01a4 9FED185B 		vldr.64	d5, .L144+56
 1702 01a8 07EE056B 		vmla.f64	d6, d7, d5
 1703 01ac B7EEC67B 		vcvt.f32.f64	s14, d6
 1704 01b0 84ED157A 		vstr.32	s14, [r4, #84]
 1705              	.L119:
 822:Src/Eagle_TRT.c **** 	enc->average_speed = dynamic_average(enc->speed_array, 4);
 1706              		.loc 1 822 2 is_stmt 1 view .LVU487
 822:Src/Eagle_TRT.c **** 	enc->average_speed = dynamic_average(enc->speed_array, 4);
 1707              		.loc 1 822 17 is_stmt 0 view .LVU488
 1708 01b4 04F19805 		add	r5, r4, #152
 822:Src/Eagle_TRT.c **** 	enc->average_speed = dynamic_average(enc->speed_array, 4);
 1709              		.loc 1 822 2 view .LVU489
 1710 01b8 0421     		movs	r1, #4
 1711 01ba 2846     		mov	r0, r5
ARM GAS  /tmp/cch5Qmdz.s 			page 54


 1712              	.LVL114:
 822:Src/Eagle_TRT.c **** 	enc->average_speed = dynamic_average(enc->speed_array, 4);
 1713              		.loc 1 822 2 view .LVU490
 1714 01bc FFF7FEFF 		bl	shift_array
 1715              	.LVL115:
 823:Src/Eagle_TRT.c **** 
 1716              		.loc 1 823 2 is_stmt 1 view .LVU491
 823:Src/Eagle_TRT.c **** 
 1717              		.loc 1 823 23 is_stmt 0 view .LVU492
 1718 01c0 0421     		movs	r1, #4
 1719 01c2 2846     		mov	r0, r5
 1720 01c4 FFF7FEFF 		bl	dynamic_average
 1721              	.LVL116:
 823:Src/Eagle_TRT.c **** 
 1722              		.loc 1 823 21 view .LVU493
 1723 01c8 84EDEE0B 		vstr.64	d0, [r4, #952]
 827:Src/Eagle_TRT.c **** /*
 1724              		.loc 1 827 1 view .LVU494
 1725 01cc 38BD     		pop	{r3, r4, r5, pc}
 1726              	.LVL117:
 1727              	.L145:
 827:Src/Eagle_TRT.c **** /*
 1728              		.loc 1 827 1 view .LVU495
 1729 01ce 00BF     		.align	3
 1730              	.L144:
 1731 01d0 00000000 		.word	0
 1732 01d4 00807640 		.word	1081507840
 1733 01d8 6F1283C0 		.word	3229815407
 1734 01dc CA210940 		.word	1074340298
 1735 01e0 CDCCCCCC 		.word	3435973837
 1736 01e4 CCCC0C40 		.word	1074580684
 1737 01e8 00000000 		.word	0
 1738 01ec 00408F40 		.word	1083129856
 1739 01f0 00000000 		.word	0
 1740 01f4 00907640 		.word	1081511936
 1741 01f8 00000000 		.word	0
 1742 01fc 00407040 		.word	1081098240
 1743 0200 00000000 		.word	0
 1744 0204 00005940 		.word	1079574528
 1745 0208 1F85EB51 		.word	1374389535
 1746 020c B81E0940 		.word	1074339512
 1747 0210 0000B443 		.word	1135869952
 1748              		.cfi_endproc
 1749              	.LFE154:
 1751              		.section	.text.encoder_tim_interrupt,"ax",%progbits
 1752              		.align	1
 1753              		.global	encoder_tim_interrupt
 1754              		.syntax unified
 1755              		.thumb
 1756              		.thumb_func
 1757              		.fpu fpv5-d16
 1759              	encoder_tim_interrupt:
 1760              	.LVL118:
 1761              	.LFB153:
 718:Src/Eagle_TRT.c **** 
 1762              		.loc 1 718 1 is_stmt 1 view -0
 1763              		.cfi_startproc
ARM GAS  /tmp/cch5Qmdz.s 			page 55


 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 718:Src/Eagle_TRT.c **** 
 1766              		.loc 1 718 1 is_stmt 0 view .LVU497
 1767 0000 10B5     		push	{r4, lr}
 1768              	.LCFI21:
 1769              		.cfi_def_cfa_offset 8
 1770              		.cfi_offset 4, -8
 1771              		.cfi_offset 14, -4
 1772 0002 0446     		mov	r4, r0
 720:Src/Eagle_TRT.c **** 	{
 1773              		.loc 1 720 2 is_stmt 1 view .LVU498
 720:Src/Eagle_TRT.c **** 	{
 1774              		.loc 1 720 9 is_stmt 0 view .LVU499
 1775 0004 8368     		ldr	r3, [r0, #8]
 720:Src/Eagle_TRT.c **** 	{
 1776              		.loc 1 720 5 view .LVU500
 1777 0006 4BB1     		cbz	r3, .L157
 727:Src/Eagle_TRT.c **** 	{
 1778              		.loc 1 727 7 is_stmt 1 view .LVU501
 727:Src/Eagle_TRT.c **** 	{
 1779              		.loc 1 727 10 is_stmt 0 view .LVU502
 1780 0008 012B     		cmp	r3, #1
 1781 000a 18D0     		beq	.L158
 734:Src/Eagle_TRT.c **** 	{
 1782              		.loc 1 734 7 is_stmt 1 view .LVU503
 734:Src/Eagle_TRT.c **** 	{
 1783              		.loc 1 734 10 is_stmt 0 view .LVU504
 1784 000c 022B     		cmp	r3, #2
 1785 000e 27D0     		beq	.L159
 1786              	.LVL119:
 1787              	.L148:
 752:Src/Eagle_TRT.c **** 	{
 1788              		.loc 1 752 2 is_stmt 1 view .LVU505
 752:Src/Eagle_TRT.c **** 	{
 1789              		.loc 1 752 9 is_stmt 0 view .LVU506
 1790 0010 A368     		ldr	r3, [r4, #8]
 752:Src/Eagle_TRT.c **** 	{
 1791              		.loc 1 752 5 view .LVU507
 1792 0012 012B     		cmp	r3, #1
 1793 0014 37DD     		ble	.L152
 754:Src/Eagle_TRT.c **** 	}
 1794              		.loc 1 754 3 is_stmt 1 view .LVU508
 754:Src/Eagle_TRT.c **** 	}
 1795              		.loc 1 754 23 is_stmt 0 view .LVU509
 1796 0016 0023     		movs	r3, #0
 1797 0018 A360     		str	r3, [r4, #8]
 1798              	.L146:
 761:Src/Eagle_TRT.c **** 
 1799              		.loc 1 761 1 view .LVU510
 1800 001a 10BD     		pop	{r4, pc}
 1801              	.LVL120:
 1802              	.L157:
 723:Src/Eagle_TRT.c **** 		read_SSI(enc);
 1803              		.loc 1 723 3 is_stmt 1 view .LVU511
 723:Src/Eagle_TRT.c **** 		read_SSI(enc);
 1804              		.loc 1 723 25 is_stmt 0 view .LVU512
ARM GAS  /tmp/cch5Qmdz.s 			page 56


 1805 001c D0E91C23 		ldrd	r2, [r0, #112]
 723:Src/Eagle_TRT.c **** 		read_SSI(enc);
 1806              		.loc 1 723 20 view .LVU513
 1807 0020 C0E92023 		strd	r2, [r0, #128]
 724:Src/Eagle_TRT.c **** 		enc->angle0 = enc->converted_data / 45.5055;
 1808              		.loc 1 724 3 is_stmt 1 view .LVU514
 1809 0024 FFF7FEFF 		bl	read_SSI
 1810              	.LVL121:
 725:Src/Eagle_TRT.c **** 	}
 1811              		.loc 1 725 3 view .LVU515
 725:Src/Eagle_TRT.c **** 	}
 1812              		.loc 1 725 37 is_stmt 0 view .LVU516
 1813 0028 D4EDF07A 		vldr.32	s15, [r4, #960]	@ int
 1814 002c B8EEE77B 		vcvt.f64.s32	d7, s15
 1815 0030 9FED175B 		vldr.64	d5, .L161
 1816 0034 87EE056B 		vdiv.f64	d6, d7, d5
 725:Src/Eagle_TRT.c **** 	}
 1817              		.loc 1 725 15 view .LVU517
 1818 0038 84ED1C6B 		vstr.64	d6, [r4, #112]
 1819 003c E8E7     		b	.L148
 1820              	.LVL122:
 1821              	.L158:
 730:Src/Eagle_TRT.c **** 		read_SSI(enc);
 1822              		.loc 1 730 3 is_stmt 1 view .LVU518
 730:Src/Eagle_TRT.c **** 		read_SSI(enc);
 1823              		.loc 1 730 25 is_stmt 0 view .LVU519
 1824 003e D0E91E23 		ldrd	r2, [r0, #120]
 730:Src/Eagle_TRT.c **** 		read_SSI(enc);
 1825              		.loc 1 730 20 view .LVU520
 1826 0042 C0E92223 		strd	r2, [r0, #136]
 731:Src/Eagle_TRT.c **** 		enc->angle1 = enc->converted_data / 45.5055;
 1827              		.loc 1 731 3 is_stmt 1 view .LVU521
 1828 0046 FFF7FEFF 		bl	read_SSI
 1829              	.LVL123:
 732:Src/Eagle_TRT.c **** 	}
 1830              		.loc 1 732 3 view .LVU522
 732:Src/Eagle_TRT.c **** 	}
 1831              		.loc 1 732 37 is_stmt 0 view .LVU523
 1832 004a D4EDF07A 		vldr.32	s15, [r4, #960]	@ int
 1833 004e B8EEE77B 		vcvt.f64.s32	d7, s15
 1834 0052 9FED0F5B 		vldr.64	d5, .L161
 1835 0056 87EE056B 		vdiv.f64	d6, d7, d5
 732:Src/Eagle_TRT.c **** 	}
 1836              		.loc 1 732 15 view .LVU524
 1837 005a 84ED1E6B 		vstr.64	d6, [r4, #120]
 1838 005e D7E7     		b	.L148
 1839              	.LVL124:
 1840              	.L159:
 737:Src/Eagle_TRT.c **** 
 1841              		.loc 1 737 3 is_stmt 1 view .LVU525
 1842 0060 FFF7FEFF 		bl	get_speed_encoder
 1843              	.LVL125:
 740:Src/Eagle_TRT.c **** 		{
 1844              		.loc 1 740 3 view .LVU526
 740:Src/Eagle_TRT.c **** 		{
 1845              		.loc 1 740 10 is_stmt 0 view .LVU527
 1846 0064 94EDEE7B 		vldr.64	d7, [r4, #952]
ARM GAS  /tmp/cch5Qmdz.s 			page 57


 740:Src/Eagle_TRT.c **** 		{
 1847              		.loc 1 740 6 view .LVU528
 1848 0068 B5EEC07B 		vcmpe.f64	d7, #0
 1849 006c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1850 0070 02D4     		bmi	.L160
 747:Src/Eagle_TRT.c **** 		}
 1851              		.loc 1 747 4 is_stmt 1 view .LVU529
 747:Src/Eagle_TRT.c **** 		}
 1852              		.loc 1 747 20 is_stmt 0 view .LVU530
 1853 0072 0023     		movs	r3, #0
 1854 0074 A365     		str	r3, [r4, #88]
 1855 0076 CBE7     		b	.L148
 1856              	.L160:
 742:Src/Eagle_TRT.c **** 			enc->speed_sign = 1;
 1857              		.loc 1 742 4 is_stmt 1 view .LVU531
 742:Src/Eagle_TRT.c **** 			enc->speed_sign = 1;
 1858              		.loc 1 742 23 is_stmt 0 view .LVU532
 1859 0078 B1EE477B 		vneg.f64	d7, d7
 1860 007c 84EDEE7B 		vstr.64	d7, [r4, #952]
 743:Src/Eagle_TRT.c **** 		}
 1861              		.loc 1 743 4 is_stmt 1 view .LVU533
 743:Src/Eagle_TRT.c **** 		}
 1862              		.loc 1 743 20 is_stmt 0 view .LVU534
 1863 0080 0123     		movs	r3, #1
 1864 0082 A365     		str	r3, [r4, #88]
 1865 0084 C4E7     		b	.L148
 1866              	.L152:
 758:Src/Eagle_TRT.c **** 	}
 1867              		.loc 1 758 3 is_stmt 1 view .LVU535
 758:Src/Eagle_TRT.c **** 	}
 1868              		.loc 1 758 22 is_stmt 0 view .LVU536
 1869 0086 0133     		adds	r3, r3, #1
 1870 0088 A360     		str	r3, [r4, #8]
 761:Src/Eagle_TRT.c **** 
 1871              		.loc 1 761 1 view .LVU537
 1872 008a C6E7     		b	.L146
 1873              	.L162:
 1874 008c AFF30080 		.align	3
 1875              	.L161:
 1876 0090 62105839 		.word	962072674
 1877 0094 B4C04640 		.word	1078378676
 1878              		.cfi_endproc
 1879              	.LFE153:
 1881              		.comm	pot_3,24,4
 1882              		.comm	pot_2,24,4
 1883              		.comm	pot_1,24,4
 1884              		.comm	enc,984,8
 1885              		.global	print_q
 1886              		.section	.bss.print_q,"aw",%nobits
 1887              		.align	2
 1888              		.set	.LANCHOR0,. + 0
 1891              	print_q:
 1892 0000 00000000 		.space	224
 1892      00000000 
 1892      00000000 
 1892      00000000 
 1892      00000000 
ARM GAS  /tmp/cch5Qmdz.s 			page 58


 1893              		.text
 1894              	.Letext0:
 1895              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1896              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1897              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1898              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1899              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1900              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1901              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1902              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1903              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1904              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1905              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1906              		.file 13 "/usr/arm-none-eabi/include/sys/lock.h"
 1907              		.file 14 "/usr/arm-none-eabi/include/sys/_types.h"
 1908              		.file 15 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 1909              		.file 16 "/usr/arm-none-eabi/include/sys/reent.h"
 1910              		.file 17 "/usr/arm-none-eabi/include/stdlib.h"
 1911              		.file 18 "/usr/arm-none-eabi/include/math.h"
 1912              		.file 19 "Inc/Eagle_TRT.h"
 1913              		.file 20 "/usr/arm-none-eabi/include/string.h"
 1914              		.file 21 "/usr/arm-none-eabi/include/malloc.h"
ARM GAS  /tmp/cch5Qmdz.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Eagle_TRT.c
     /tmp/cch5Qmdz.s:17     .text.next:0000000000000000 $t
     /tmp/cch5Qmdz.s:24     .text.next:0000000000000000 next
     /tmp/cch5Qmdz.s:48     .text.emptyp:0000000000000000 $t
     /tmp/cch5Qmdz.s:54     .text.emptyp:0000000000000000 emptyp
     /tmp/cch5Qmdz.s:78     .text.fullp:0000000000000000 $t
     /tmp/cch5Qmdz.s:84     .text.fullp:0000000000000000 fullp
     /tmp/cch5Qmdz.s:119    .text.init:0000000000000000 $t
     /tmp/cch5Qmdz.s:126    .text.init:0000000000000000 init
     /tmp/cch5Qmdz.s:150    .text.push:0000000000000000 $t
     /tmp/cch5Qmdz.s:157    .text.push:0000000000000000 push
     /tmp/cch5Qmdz.s:239    .text.pop:0000000000000000 $t
     /tmp/cch5Qmdz.s:246    .text.pop:0000000000000000 pop
     /tmp/cch5Qmdz.s:328    .text.print:0000000000000000 $t
     /tmp/cch5Qmdz.s:335    .text.print:0000000000000000 print
     /tmp/cch5Qmdz.s:395    .text.print:000000000000002c $d
     /tmp/cch5Qmdz.s:400    .text.print_it:0000000000000000 $t
     /tmp/cch5Qmdz.s:407    .text.print_it:0000000000000000 print_it
     /tmp/cch5Qmdz.s:464    .text.print_it:0000000000000028 $d
     /tmp/cch5Qmdz.s:469    .text.calc_pot_value:0000000000000000 $t
     /tmp/cch5Qmdz.s:476    .text.calc_pot_value:0000000000000000 calc_pot_value
     /tmp/cch5Qmdz.s:540    .text.implausibility_check:0000000000000000 $t
     /tmp/cch5Qmdz.s:547    .text.implausibility_check:0000000000000000 implausibility_check
     /tmp/cch5Qmdz.s:651    .text.set_max:0000000000000000 $t
     /tmp/cch5Qmdz.s:658    .text.set_max:0000000000000000 set_max
     /tmp/cch5Qmdz.s:677    .text.set_min:0000000000000000 $t
     /tmp/cch5Qmdz.s:684    .text.set_min:0000000000000000 set_min
     /tmp/cch5Qmdz.s:703    .text.Power:0000000000000000 $t
     /tmp/cch5Qmdz.s:710    .text.Power:0000000000000000 Power
     /tmp/cch5Qmdz.s:764    .text.bin_dec:0000000000000000 $t
     /tmp/cch5Qmdz.s:771    .text.bin_dec:0000000000000000 bin_dec
     /tmp/cch5Qmdz.s:857    .text.read_SSI:0000000000000000 $t
     /tmp/cch5Qmdz.s:864    .text.read_SSI:0000000000000000 read_SSI
     /tmp/cch5Qmdz.s:1159   .text.shift_array:0000000000000000 $t
     /tmp/cch5Qmdz.s:1166   .text.shift_array:0000000000000000 shift_array
     /tmp/cch5Qmdz.s:1242   .text.speed_filter:0000000000000000 $t
     /tmp/cch5Qmdz.s:1249   .text.speed_filter:0000000000000000 speed_filter
     /tmp/cch5Qmdz.s:1395   .text.speed_filter:0000000000000078 $d
     /tmp/cch5Qmdz.s:1405   .text.dynamic_average:0000000000000000 $t
     /tmp/cch5Qmdz.s:1412   .text.dynamic_average:0000000000000000 dynamic_average
     /tmp/cch5Qmdz.s:1467   .text.dynamic_average:0000000000000028 $d
     /tmp/cch5Qmdz.s:1473   .text.get_speed_encoder:0000000000000000 $t
     /tmp/cch5Qmdz.s:1480   .text.get_speed_encoder:0000000000000000 get_speed_encoder
     /tmp/cch5Qmdz.s:1731   .text.get_speed_encoder:00000000000001d0 $d
     /tmp/cch5Qmdz.s:1752   .text.encoder_tim_interrupt:0000000000000000 $t
     /tmp/cch5Qmdz.s:1759   .text.encoder_tim_interrupt:0000000000000000 encoder_tim_interrupt
     /tmp/cch5Qmdz.s:1876   .text.encoder_tim_interrupt:0000000000000090 $d
                            *COM*:0000000000000018 pot_3
                            *COM*:0000000000000018 pot_2
                            *COM*:0000000000000018 pot_1
                            *COM*:00000000000003d8 enc
     /tmp/cch5Qmdz.s:1891   .bss.print_q:0000000000000000 print_q
     /tmp/cch5Qmdz.s:1887   .bss.print_q:0000000000000000 $d

UNDEFINED SYMBOLS
strlen
ARM GAS  /tmp/cch5Qmdz.s 			page 60


malloc
strcpy
free
HAL_UART_Transmit_IT
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
