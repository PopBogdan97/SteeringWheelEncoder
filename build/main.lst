ARM GAS  /tmp/ccGDZINZ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_GPIO_Init:
  25              	.LFB146:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** typedef struct
  32:Src/main.c    **** {
ARM GAS  /tmp/ccGDZINZ.s 			page 2


  33:Src/main.c    ****   int data_size;         // Bits sent from the sensor. Exclude the error flag
  34:Src/main.c    ****   int error_flag;        // Return value if the encoder has errors
  35:Src/main.c    ****   int error_data_status; // Here we save the actual signal from the encoder
  36:Src/main.c    ****   int clock_period;      // Period between each data frame readed in milliseconds
  37:Src/main.c    ****   int clock_status;      // Here the status of the clock is saved
  38:Src/main.c    ****   int data_freq_Hz;      // Reading speed of the data frame
  39:Src/main.c    ****   int data[12];          // Binary value of the data readed from the steer encoder
  40:Src/main.c    ****   int steer_zero;        // In this variable will be saved the value for the position zero
  41:Src/main.c    ****   int data_count;        // Counter used to check when the buffer is full
  42:Src/main.c    **** 
  43:Src/main.c    ****   float max_delta_angle;
  44:Src/main.c    ****   float frequency;
  45:Src/main.c    ****   int frequency_timer_Hz;
  46:Src/main.c    **** 
  47:Src/main.c    ****   int angle;          // First angle calculated
  48:Src/main.c    ****   int converted_data; // Angle data
  49:Src/main.c    **** 
  50:Src/main.c    ****   TIM_HandleTypeDef *TimerInstance; // Instance to the timer used to generate the clock to read the
  51:Src/main.c    **** 
  52:Src/main.c    ****   GPIO_TypeDef *ClockPinName;
  53:Src/main.c    ****   GPIO_TypeDef *DataPinName;
  54:Src/main.c    ****   uint16_t ClockPinNumber;
  55:Src/main.c    ****   uint16_t DataPinNumber;
  56:Src/main.c    **** 
  57:Src/main.c    **** } steer_enc;
  58:Src/main.c    **** /* USER CODE END PTD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PD */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PD */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN PM */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PM */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    **** TIM_HandleTypeDef htim6;
  73:Src/main.c    **** TIM_HandleTypeDef htim7;
  74:Src/main.c    **** 
  75:Src/main.c    **** UART_HandleTypeDef huart3;
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE BEGIN PV */
  78:Src/main.c    **** steer_enc steer;
  79:Src/main.c    **** 
  80:Src/main.c    **** char hmessage[256] = "";
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END PV */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  85:Src/main.c    **** void SystemClock_Config(void);
  86:Src/main.c    **** static void MX_GPIO_Init(void);
  87:Src/main.c    **** static void MX_TIM6_Init(void);
  88:Src/main.c    **** static void MX_TIM7_Init(void);
  89:Src/main.c    **** static void MX_USART3_UART_Init(void);
ARM GAS  /tmp/ccGDZINZ.s 			page 3


  90:Src/main.c    **** /* USER CODE BEGIN PFP */
  91:Src/main.c    **** void print(UART_HandleTypeDef *huart, char *text);
  92:Src/main.c    **** void read_steer_SSI();
  93:Src/main.c    **** void check_steer_error(steer_enc *steer);
  94:Src/main.c    **** int bin_dec(int *bin, int size);
  95:Src/main.c    **** double Power(int base, int expn);
  96:Src/main.c    **** /* USER CODE END PFP */
  97:Src/main.c    **** 
  98:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  99:Src/main.c    **** /* USER CODE BEGIN 0 */
 100:Src/main.c    **** 
 101:Src/main.c    **** /* USER CODE END 0 */
 102:Src/main.c    **** 
 103:Src/main.c    **** /**
 104:Src/main.c    ****   * @brief  The application entry point.
 105:Src/main.c    ****   * @retval int
 106:Src/main.c    ****   */
 107:Src/main.c    **** int main(void)
 108:Src/main.c    **** {
 109:Src/main.c    ****   /* USER CODE BEGIN 1 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END 1 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Src/main.c    ****   HAL_Init();
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE BEGIN Init */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END Init */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Configure the system clock */
 123:Src/main.c    ****   SystemClock_Config();
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END SysInit */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Initialize all configured peripherals */
 130:Src/main.c    ****   MX_GPIO_Init();
 131:Src/main.c    ****   MX_TIM6_Init();
 132:Src/main.c    ****   MX_TIM7_Init();
 133:Src/main.c    ****   MX_USART3_UART_Init();
 134:Src/main.c    ****   /* USER CODE BEGIN 2 */
 135:Src/main.c    ****   RCC->APB1ENR |= (RCC_APB1ENR_TIM6EN | RCC_APB1ENR_TIM7EN); //enable MCU debug module clock
 136:Src/main.c    ****   HAL_DBGMCU_EnableDBGStandbyMode();
 137:Src/main.c    ****   HAL_DBGMCU_EnableDBGStopMode();
 138:Src/main.c    ****   DBGMCU->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM6_STOP | DBGMCU_APB1_FZ_DBG_TIM7_STOP);
 139:Src/main.c    **** 
 140:Src/main.c    ****   steer.data_size = 12;
 141:Src/main.c    ****   steer.clock_period = 500;
 142:Src/main.c    ****   steer.data_freq_Hz = 1500000;
 143:Src/main.c    ****   steer.steer_zero = 0; // TO BE DEFINED
 144:Src/main.c    **** 
 145:Src/main.c    ****   steer.ClockPinName = GPIOC;
 146:Src/main.c    ****   steer.ClockPinNumber = GPIO_PIN_12;
ARM GAS  /tmp/ccGDZINZ.s 			page 4


 147:Src/main.c    ****   steer.DataPinName = GPIOD;
 148:Src/main.c    ****   steer.DataPinNumber = GPIO_PIN_2;
 149:Src/main.c    ****   HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 150:Src/main.c    ****   steer.clock_status = 1;
 151:Src/main.c    **** 
 152:Src/main.c    ****   steer.TimerInstance = &htim7;
 153:Src/main.c    **** 
 154:Src/main.c    ****   HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 155:Src/main.c    **** 
 156:Src/main.c    ****   //Enabling the Timer that gives the time between each reading
 157:Src/main.c    ****   HAL_TIM_Base_Start(&htim7);
 158:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* USER CODE END 2 */
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* Infinite loop */
 163:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 164:Src/main.c    ****   while (1)
 165:Src/main.c    ****   {
 166:Src/main.c    ****     /* USER CODE END WHILE */
 167:Src/main.c    ****     HAL_Delay(200);
 168:Src/main.c    **** 
 169:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 170:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 171:Src/main.c    **** 
 172:Src/main.c    ****     HAL_Delay(200);
 173:Src/main.c    **** 
 174:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14);
 175:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 176:Src/main.c    **** 
 177:Src/main.c    ****     HAL_Delay(200);
 178:Src/main.c    **** 
 179:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14);
 180:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 181:Src/main.c    **** 
 182:Src/main.c    ****     HAL_Delay(200);
 183:Src/main.c    **** 
 184:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 185:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 186:Src/main.c    **** 
 187:Src/main.c    ****     // sprintf(hmessage, "All working");
 188:Src/main.c    ****     // print(&huart3, hmessage);
 189:Src/main.c    ****     /* USER CODE BEGIN 3 */
 190:Src/main.c    ****   }
 191:Src/main.c    ****   /* USER CODE END 3 */
 192:Src/main.c    **** }
 193:Src/main.c    **** 
 194:Src/main.c    **** /**
 195:Src/main.c    ****   * @brief System Clock Configuration
 196:Src/main.c    ****   * @retval None
 197:Src/main.c    ****   */
 198:Src/main.c    **** void SystemClock_Config(void)
 199:Src/main.c    **** {
 200:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 201:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 202:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 203:Src/main.c    **** 
ARM GAS  /tmp/ccGDZINZ.s 			page 5


 204:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 205:Src/main.c    ****   */
 206:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 207:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 208:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 209:Src/main.c    ****   */
 210:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 211:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 212:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 218:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 219:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 220:Src/main.c    ****   {
 221:Src/main.c    ****     Error_Handler();
 222:Src/main.c    ****   }
 223:Src/main.c    ****   /** Activate the Over-Drive mode 
 224:Src/main.c    ****   */
 225:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 226:Src/main.c    ****   {
 227:Src/main.c    ****     Error_Handler();
 228:Src/main.c    ****   }
 229:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 230:Src/main.c    ****   */
 231:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 232:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 233:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 234:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 235:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 236:Src/main.c    **** 
 237:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 238:Src/main.c    ****   {
 239:Src/main.c    ****     Error_Handler();
 240:Src/main.c    ****   }
 241:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 242:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 243:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 244:Src/main.c    ****   {
 245:Src/main.c    ****     Error_Handler();
 246:Src/main.c    ****   }
 247:Src/main.c    **** }
 248:Src/main.c    **** 
 249:Src/main.c    **** /**
 250:Src/main.c    ****   * @brief TIM6 Initialization Function
 251:Src/main.c    ****   * @param None
 252:Src/main.c    ****   * @retval None
 253:Src/main.c    ****   */
 254:Src/main.c    **** static void MX_TIM6_Init(void)
 255:Src/main.c    **** {
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 258:Src/main.c    **** 
 259:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 260:Src/main.c    **** 
ARM GAS  /tmp/ccGDZINZ.s 			page 6


 261:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 266:Src/main.c    ****   htim6.Instance = TIM6;
 267:Src/main.c    ****   htim6.Init.Prescaler = 215;
 268:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 269:Src/main.c    ****   htim6.Init.Period = 3;
 270:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 271:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 272:Src/main.c    ****   {
 273:Src/main.c    ****     Error_Handler();
 274:Src/main.c    ****   }
 275:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 276:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 277:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 278:Src/main.c    ****   {
 279:Src/main.c    ****     Error_Handler();
 280:Src/main.c    ****   }
 281:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 284:Src/main.c    **** }
 285:Src/main.c    **** 
 286:Src/main.c    **** /**
 287:Src/main.c    ****   * @brief TIM7 Initialization Function
 288:Src/main.c    ****   * @param None
 289:Src/main.c    ****   * @retval None
 290:Src/main.c    ****   */
 291:Src/main.c    **** static void MX_TIM7_Init(void)
 292:Src/main.c    **** {
 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 297:Src/main.c    **** 
 298:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 299:Src/main.c    **** 
 300:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 301:Src/main.c    **** 
 302:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 303:Src/main.c    ****   htim7.Instance = TIM7;
 304:Src/main.c    ****   htim7.Init.Prescaler = 59999;
 305:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 306:Src/main.c    ****   htim7.Init.Period = 1799;
 307:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 308:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 309:Src/main.c    ****   {
 310:Src/main.c    ****     Error_Handler();
 311:Src/main.c    ****   }
 312:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 313:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 314:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 315:Src/main.c    ****   {
 316:Src/main.c    ****     Error_Handler();
 317:Src/main.c    ****   }
ARM GAS  /tmp/ccGDZINZ.s 			page 7


 318:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 319:Src/main.c    **** 
 320:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 321:Src/main.c    **** }
 322:Src/main.c    **** 
 323:Src/main.c    **** /**
 324:Src/main.c    ****   * @brief USART3 Initialization Function
 325:Src/main.c    ****   * @param None
 326:Src/main.c    ****   * @retval None
 327:Src/main.c    ****   */
 328:Src/main.c    **** static void MX_USART3_UART_Init(void)
 329:Src/main.c    **** {
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 332:Src/main.c    **** 
 333:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 334:Src/main.c    **** 
 335:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 336:Src/main.c    **** 
 337:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 338:Src/main.c    ****   huart3.Instance = USART3;
 339:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 340:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 341:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 342:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 343:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 344:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 345:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 346:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 347:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 348:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 349:Src/main.c    ****   {
 350:Src/main.c    ****     Error_Handler();
 351:Src/main.c    ****   }
 352:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 353:Src/main.c    **** 
 354:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 355:Src/main.c    **** }
 356:Src/main.c    **** 
 357:Src/main.c    **** /**
 358:Src/main.c    ****   * @brief GPIO Initialization Function
 359:Src/main.c    ****   * @param None
 360:Src/main.c    ****   * @retval None
 361:Src/main.c    ****   */
 362:Src/main.c    **** static void MX_GPIO_Init(void)
 363:Src/main.c    **** {
  27              		.loc 1 363 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
ARM GAS  /tmp/ccGDZINZ.s 			page 8


  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8DB0     		sub	sp, sp, #52
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 88
 364:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 364 3 view .LVU1
  47              		.loc 1 364 20 is_stmt 0 view .LVU2
  48 0006 0024     		movs	r4, #0
  49 0008 0794     		str	r4, [sp, #28]
  50 000a 0894     		str	r4, [sp, #32]
  51 000c 0994     		str	r4, [sp, #36]
  52 000e 0A94     		str	r4, [sp, #40]
  53 0010 0B94     		str	r4, [sp, #44]
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* GPIO Ports Clock Enable */
 367:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 367 3 is_stmt 1 view .LVU3
  55              	.LBB2:
  56              		.loc 1 367 3 view .LVU4
  57              		.loc 1 367 3 view .LVU5
  58 0012 694B     		ldr	r3, .L3
  59 0014 1A6B     		ldr	r2, [r3, #48]
  60 0016 42F00402 		orr	r2, r2, #4
  61 001a 1A63     		str	r2, [r3, #48]
  62              		.loc 1 367 3 view .LVU6
  63 001c 1A6B     		ldr	r2, [r3, #48]
  64 001e 02F00402 		and	r2, r2, #4
  65 0022 0192     		str	r2, [sp, #4]
  66              		.loc 1 367 3 view .LVU7
  67 0024 019A     		ldr	r2, [sp, #4]
  68              	.LBE2:
  69              		.loc 1 367 3 view .LVU8
 368:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 368 3 view .LVU9
  71              	.LBB3:
  72              		.loc 1 368 3 view .LVU10
  73              		.loc 1 368 3 view .LVU11
  74 0026 1A6B     		ldr	r2, [r3, #48]
  75 0028 42F08002 		orr	r2, r2, #128
  76 002c 1A63     		str	r2, [r3, #48]
  77              		.loc 1 368 3 view .LVU12
  78 002e 1A6B     		ldr	r2, [r3, #48]
  79 0030 02F08002 		and	r2, r2, #128
  80 0034 0292     		str	r2, [sp, #8]
  81              		.loc 1 368 3 view .LVU13
  82 0036 029A     		ldr	r2, [sp, #8]
  83              	.LBE3:
  84              		.loc 1 368 3 view .LVU14
 369:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  85              		.loc 1 369 3 view .LVU15
  86              	.LBB4:
  87              		.loc 1 369 3 view .LVU16
  88              		.loc 1 369 3 view .LVU17
ARM GAS  /tmp/ccGDZINZ.s 			page 9


  89 0038 1A6B     		ldr	r2, [r3, #48]
  90 003a 42F00102 		orr	r2, r2, #1
  91 003e 1A63     		str	r2, [r3, #48]
  92              		.loc 1 369 3 view .LVU18
  93 0040 1A6B     		ldr	r2, [r3, #48]
  94 0042 02F00102 		and	r2, r2, #1
  95 0046 0392     		str	r2, [sp, #12]
  96              		.loc 1 369 3 view .LVU19
  97 0048 039A     		ldr	r2, [sp, #12]
  98              	.LBE4:
  99              		.loc 1 369 3 view .LVU20
 370:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 100              		.loc 1 370 3 view .LVU21
 101              	.LBB5:
 102              		.loc 1 370 3 view .LVU22
 103              		.loc 1 370 3 view .LVU23
 104 004a 1A6B     		ldr	r2, [r3, #48]
 105 004c 42F00202 		orr	r2, r2, #2
 106 0050 1A63     		str	r2, [r3, #48]
 107              		.loc 1 370 3 view .LVU24
 108 0052 1A6B     		ldr	r2, [r3, #48]
 109 0054 02F00202 		and	r2, r2, #2
 110 0058 0492     		str	r2, [sp, #16]
 111              		.loc 1 370 3 view .LVU25
 112 005a 049A     		ldr	r2, [sp, #16]
 113              	.LBE5:
 114              		.loc 1 370 3 view .LVU26
 371:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 115              		.loc 1 371 3 view .LVU27
 116              	.LBB6:
 117              		.loc 1 371 3 view .LVU28
 118              		.loc 1 371 3 view .LVU29
 119 005c 1A6B     		ldr	r2, [r3, #48]
 120 005e 42F00802 		orr	r2, r2, #8
 121 0062 1A63     		str	r2, [r3, #48]
 122              		.loc 1 371 3 view .LVU30
 123 0064 1A6B     		ldr	r2, [r3, #48]
 124 0066 02F00802 		and	r2, r2, #8
 125 006a 0592     		str	r2, [sp, #20]
 126              		.loc 1 371 3 view .LVU31
 127 006c 059A     		ldr	r2, [sp, #20]
 128              	.LBE6:
 129              		.loc 1 371 3 view .LVU32
 372:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 130              		.loc 1 372 3 view .LVU33
 131              	.LBB7:
 132              		.loc 1 372 3 view .LVU34
 133              		.loc 1 372 3 view .LVU35
 134 006e 1A6B     		ldr	r2, [r3, #48]
 135 0070 42F04002 		orr	r2, r2, #64
 136 0074 1A63     		str	r2, [r3, #48]
 137              		.loc 1 372 3 view .LVU36
 138 0076 1B6B     		ldr	r3, [r3, #48]
 139 0078 03F04003 		and	r3, r3, #64
 140 007c 0693     		str	r3, [sp, #24]
 141              		.loc 1 372 3 view .LVU37
 142 007e 069B     		ldr	r3, [sp, #24]
ARM GAS  /tmp/ccGDZINZ.s 			page 10


 143              	.LBE7:
 144              		.loc 1 372 3 view .LVU38
 373:Src/main.c    **** 
 374:Src/main.c    ****   /*Configure GPIO pin Output Level */
 375:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin | LD3_Pin | LD2_Pin, GPIO_PIN_RESET);
 145              		.loc 1 375 3 view .LVU39
 146 0080 DFF848B1 		ldr	fp, .L3+20
 147 0084 2246     		mov	r2, r4
 148 0086 44F28101 		movw	r1, #16513
 149 008a 5846     		mov	r0, fp
 150 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL0:
 376:Src/main.c    **** 
 377:Src/main.c    ****   /*Configure GPIO pin Output Level */
 378:Src/main.c    ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 152              		.loc 1 378 3 view .LVU40
 153 0090 4A4F     		ldr	r7, .L3+4
 154 0092 2246     		mov	r2, r4
 155 0094 4021     		movs	r1, #64
 156 0096 3846     		mov	r0, r7
 157 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL1:
 379:Src/main.c    **** 
 380:Src/main.c    ****   /*Configure GPIO pin Output Level */
 381:Src/main.c    ****   HAL_GPIO_WritePin(Clock_GPIO_Port, Clock_Pin, GPIO_PIN_RESET);
 159              		.loc 1 381 3 view .LVU41
 160 009c DFF83091 		ldr	r9, .L3+24
 161 00a0 2246     		mov	r2, r4
 162 00a2 4FF48051 		mov	r1, #4096
 163 00a6 4846     		mov	r0, r9
 164 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL2:
 382:Src/main.c    **** 
 383:Src/main.c    ****   /*Configure GPIO pin : USER_Btn_Pin */
 384:Src/main.c    ****   GPIO_InitStruct.Pin = USER_Btn_Pin;
 166              		.loc 1 384 3 view .LVU42
 167              		.loc 1 384 23 is_stmt 0 view .LVU43
 168 00ac 4FF40053 		mov	r3, #8192
 169 00b0 0793     		str	r3, [sp, #28]
 385:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 170              		.loc 1 385 3 is_stmt 1 view .LVU44
 171              		.loc 1 385 24 is_stmt 0 view .LVU45
 172 00b2 434B     		ldr	r3, .L3+8
 173 00b4 0893     		str	r3, [sp, #32]
 386:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 386 3 is_stmt 1 view .LVU46
 175              		.loc 1 386 24 is_stmt 0 view .LVU47
 176 00b6 0994     		str	r4, [sp, #36]
 387:Src/main.c    ****   HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 177              		.loc 1 387 3 is_stmt 1 view .LVU48
 178 00b8 07A9     		add	r1, sp, #28
 179 00ba 4846     		mov	r0, r9
 180 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL3:
 388:Src/main.c    **** 
 389:Src/main.c    ****   /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
 390:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_MDC_Pin | RMII_RXD0_Pin | RMII_RXD1_Pin;
ARM GAS  /tmp/ccGDZINZ.s 			page 11


 182              		.loc 1 390 3 view .LVU49
 183              		.loc 1 390 23 is_stmt 0 view .LVU50
 184 00c0 3223     		movs	r3, #50
 185 00c2 0793     		str	r3, [sp, #28]
 391:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 186              		.loc 1 391 3 is_stmt 1 view .LVU51
 187              		.loc 1 391 24 is_stmt 0 view .LVU52
 188 00c4 0226     		movs	r6, #2
 189 00c6 0896     		str	r6, [sp, #32]
 392:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 392 3 is_stmt 1 view .LVU53
 191              		.loc 1 392 24 is_stmt 0 view .LVU54
 192 00c8 0994     		str	r4, [sp, #36]
 393:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 193              		.loc 1 393 3 is_stmt 1 view .LVU55
 194              		.loc 1 393 25 is_stmt 0 view .LVU56
 195 00ca 0325     		movs	r5, #3
 196 00cc 0A95     		str	r5, [sp, #40]
 394:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 197              		.loc 1 394 3 is_stmt 1 view .LVU57
 198              		.loc 1 394 29 is_stmt 0 view .LVU58
 199 00ce 4FF00B08 		mov	r8, #11
 200 00d2 CDF82C80 		str	r8, [sp, #44]
 395:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 201              		.loc 1 395 3 is_stmt 1 view .LVU59
 202 00d6 07A9     		add	r1, sp, #28
 203 00d8 4846     		mov	r0, r9
 204 00da FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL4:
 396:Src/main.c    **** 
 397:Src/main.c    ****   /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
 398:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_REF_CLK_Pin | RMII_MDIO_Pin | RMII_CRS_DV_Pin;
 206              		.loc 1 398 3 view .LVU60
 207              		.loc 1 398 23 is_stmt 0 view .LVU61
 208 00de 8623     		movs	r3, #134
 209 00e0 0793     		str	r3, [sp, #28]
 399:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 210              		.loc 1 399 3 is_stmt 1 view .LVU62
 211              		.loc 1 399 24 is_stmt 0 view .LVU63
 212 00e2 0896     		str	r6, [sp, #32]
 400:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 213              		.loc 1 400 3 is_stmt 1 view .LVU64
 214              		.loc 1 400 24 is_stmt 0 view .LVU65
 215 00e4 0994     		str	r4, [sp, #36]
 401:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 216              		.loc 1 401 3 is_stmt 1 view .LVU66
 217              		.loc 1 401 25 is_stmt 0 view .LVU67
 218 00e6 0A95     		str	r5, [sp, #40]
 402:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 219              		.loc 1 402 3 is_stmt 1 view .LVU68
 220              		.loc 1 402 29 is_stmt 0 view .LVU69
 221 00e8 CDF82C80 		str	r8, [sp, #44]
 403:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 222              		.loc 1 403 3 is_stmt 1 view .LVU70
 223 00ec 07A9     		add	r1, sp, #28
 224 00ee 3548     		ldr	r0, .L3+12
 225 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccGDZINZ.s 			page 12


 226              	.LVL5:
 404:Src/main.c    **** 
 405:Src/main.c    ****   /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
 406:Src/main.c    ****   GPIO_InitStruct.Pin = LD1_Pin | LD3_Pin | LD2_Pin;
 227              		.loc 1 406 3 view .LVU71
 228              		.loc 1 406 23 is_stmt 0 view .LVU72
 229 00f4 44F28103 		movw	r3, #16513
 230 00f8 0793     		str	r3, [sp, #28]
 407:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 231              		.loc 1 407 3 is_stmt 1 view .LVU73
 232              		.loc 1 407 24 is_stmt 0 view .LVU74
 233 00fa 4FF0010A 		mov	r10, #1
 234 00fe CDF820A0 		str	r10, [sp, #32]
 408:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 235              		.loc 1 408 3 is_stmt 1 view .LVU75
 236              		.loc 1 408 24 is_stmt 0 view .LVU76
 237 0102 0994     		str	r4, [sp, #36]
 409:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 409 3 is_stmt 1 view .LVU77
 239              		.loc 1 409 25 is_stmt 0 view .LVU78
 240 0104 0A94     		str	r4, [sp, #40]
 410:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 241              		.loc 1 410 3 is_stmt 1 view .LVU79
 242 0106 07A9     		add	r1, sp, #28
 243 0108 5846     		mov	r0, fp
 244 010a FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
 411:Src/main.c    **** 
 412:Src/main.c    ****   /*Configure GPIO pin : RMII_TXD1_Pin */
 413:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 246              		.loc 1 413 3 view .LVU80
 247              		.loc 1 413 23 is_stmt 0 view .LVU81
 248 010e 4FF40053 		mov	r3, #8192
 249 0112 0793     		str	r3, [sp, #28]
 414:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 414 3 is_stmt 1 view .LVU82
 251              		.loc 1 414 24 is_stmt 0 view .LVU83
 252 0114 0896     		str	r6, [sp, #32]
 415:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 415 3 is_stmt 1 view .LVU84
 254              		.loc 1 415 24 is_stmt 0 view .LVU85
 255 0116 0994     		str	r4, [sp, #36]
 416:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 256              		.loc 1 416 3 is_stmt 1 view .LVU86
 257              		.loc 1 416 25 is_stmt 0 view .LVU87
 258 0118 0A95     		str	r5, [sp, #40]
 417:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 259              		.loc 1 417 3 is_stmt 1 view .LVU88
 260              		.loc 1 417 29 is_stmt 0 view .LVU89
 261 011a CDF82C80 		str	r8, [sp, #44]
 418:Src/main.c    ****   HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 262              		.loc 1 418 3 is_stmt 1 view .LVU90
 263 011e 07A9     		add	r1, sp, #28
 264 0120 5846     		mov	r0, fp
 265 0122 FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL7:
 419:Src/main.c    **** 
ARM GAS  /tmp/ccGDZINZ.s 			page 13


 420:Src/main.c    ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 421:Src/main.c    ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 267              		.loc 1 421 3 view .LVU91
 268              		.loc 1 421 23 is_stmt 0 view .LVU92
 269 0126 4023     		movs	r3, #64
 270 0128 0793     		str	r3, [sp, #28]
 422:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 271              		.loc 1 422 3 is_stmt 1 view .LVU93
 272              		.loc 1 422 24 is_stmt 0 view .LVU94
 273 012a CDF820A0 		str	r10, [sp, #32]
 423:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 274              		.loc 1 423 3 is_stmt 1 view .LVU95
 275              		.loc 1 423 24 is_stmt 0 view .LVU96
 276 012e 0994     		str	r4, [sp, #36]
 424:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 277              		.loc 1 424 3 is_stmt 1 view .LVU97
 278              		.loc 1 424 25 is_stmt 0 view .LVU98
 279 0130 0A94     		str	r4, [sp, #40]
 425:Src/main.c    ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 280              		.loc 1 425 3 is_stmt 1 view .LVU99
 281 0132 07A9     		add	r1, sp, #28
 282 0134 3846     		mov	r0, r7
 283 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 284              	.LVL8:
 426:Src/main.c    **** 
 427:Src/main.c    ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 428:Src/main.c    ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 285              		.loc 1 428 3 view .LVU100
 286              		.loc 1 428 23 is_stmt 0 view .LVU101
 287 013a 8023     		movs	r3, #128
 288 013c 0793     		str	r3, [sp, #28]
 429:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 289              		.loc 1 429 3 is_stmt 1 view .LVU102
 290              		.loc 1 429 24 is_stmt 0 view .LVU103
 291 013e 0894     		str	r4, [sp, #32]
 430:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 292              		.loc 1 430 3 is_stmt 1 view .LVU104
 293              		.loc 1 430 24 is_stmt 0 view .LVU105
 294 0140 0994     		str	r4, [sp, #36]
 431:Src/main.c    ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 431 3 is_stmt 1 view .LVU106
 296 0142 07A9     		add	r1, sp, #28
 297 0144 3846     		mov	r0, r7
 298 0146 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL9:
 432:Src/main.c    **** 
 433:Src/main.c    ****   /*Configure GPIO pins : USB_SOF_Pin USB_ID_Pin USB_DM_Pin USB_DP_Pin */
 434:Src/main.c    ****   GPIO_InitStruct.Pin = USB_SOF_Pin | USB_ID_Pin | USB_DM_Pin | USB_DP_Pin;
 300              		.loc 1 434 3 view .LVU107
 301              		.loc 1 434 23 is_stmt 0 view .LVU108
 302 014a 4FF4E853 		mov	r3, #7424
 303 014e 0793     		str	r3, [sp, #28]
 435:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 304              		.loc 1 435 3 is_stmt 1 view .LVU109
 305              		.loc 1 435 24 is_stmt 0 view .LVU110
 306 0150 0896     		str	r6, [sp, #32]
 436:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccGDZINZ.s 			page 14


 307              		.loc 1 436 3 is_stmt 1 view .LVU111
 308              		.loc 1 436 24 is_stmt 0 view .LVU112
 309 0152 0994     		str	r4, [sp, #36]
 437:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 310              		.loc 1 437 3 is_stmt 1 view .LVU113
 311              		.loc 1 437 25 is_stmt 0 view .LVU114
 312 0154 0A95     		str	r5, [sp, #40]
 438:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 313              		.loc 1 438 3 is_stmt 1 view .LVU115
 314              		.loc 1 438 29 is_stmt 0 view .LVU116
 315 0156 0A23     		movs	r3, #10
 316 0158 0B93     		str	r3, [sp, #44]
 439:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 317              		.loc 1 439 3 is_stmt 1 view .LVU117
 318 015a 07A9     		add	r1, sp, #28
 319 015c 1948     		ldr	r0, .L3+12
 320 015e FFF7FEFF 		bl	HAL_GPIO_Init
 321              	.LVL10:
 440:Src/main.c    **** 
 441:Src/main.c    ****   /*Configure GPIO pin : USB_VBUS_Pin */
 442:Src/main.c    ****   GPIO_InitStruct.Pin = USB_VBUS_Pin;
 322              		.loc 1 442 3 view .LVU118
 323              		.loc 1 442 23 is_stmt 0 view .LVU119
 324 0162 4FF40073 		mov	r3, #512
 325 0166 0793     		str	r3, [sp, #28]
 443:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 326              		.loc 1 443 3 is_stmt 1 view .LVU120
 327              		.loc 1 443 24 is_stmt 0 view .LVU121
 328 0168 0894     		str	r4, [sp, #32]
 444:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 329              		.loc 1 444 3 is_stmt 1 view .LVU122
 330              		.loc 1 444 24 is_stmt 0 view .LVU123
 331 016a 0994     		str	r4, [sp, #36]
 445:Src/main.c    ****   HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
 332              		.loc 1 445 3 is_stmt 1 view .LVU124
 333 016c 07A9     		add	r1, sp, #28
 334 016e 1548     		ldr	r0, .L3+12
 335 0170 FFF7FEFF 		bl	HAL_GPIO_Init
 336              	.LVL11:
 446:Src/main.c    **** 
 447:Src/main.c    ****   /*Configure GPIO pin : Clock_Pin */
 448:Src/main.c    ****   GPIO_InitStruct.Pin = Clock_Pin;
 337              		.loc 1 448 3 view .LVU125
 338              		.loc 1 448 23 is_stmt 0 view .LVU126
 339 0174 4FF48053 		mov	r3, #4096
 340 0178 0793     		str	r3, [sp, #28]
 449:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 341              		.loc 1 449 3 is_stmt 1 view .LVU127
 342              		.loc 1 449 24 is_stmt 0 view .LVU128
 343 017a CDF820A0 		str	r10, [sp, #32]
 450:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 344              		.loc 1 450 3 is_stmt 1 view .LVU129
 345              		.loc 1 450 24 is_stmt 0 view .LVU130
 346 017e 0994     		str	r4, [sp, #36]
 451:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 347              		.loc 1 451 3 is_stmt 1 view .LVU131
 348              		.loc 1 451 25 is_stmt 0 view .LVU132
ARM GAS  /tmp/ccGDZINZ.s 			page 15


 349 0180 0A95     		str	r5, [sp, #40]
 452:Src/main.c    ****   HAL_GPIO_Init(Clock_GPIO_Port, &GPIO_InitStruct);
 350              		.loc 1 452 3 is_stmt 1 view .LVU133
 351 0182 07A9     		add	r1, sp, #28
 352 0184 4846     		mov	r0, r9
 353 0186 FFF7FEFF 		bl	HAL_GPIO_Init
 354              	.LVL12:
 453:Src/main.c    **** 
 454:Src/main.c    ****   /*Configure GPIO pin : Data_Pin */
 455:Src/main.c    ****   GPIO_InitStruct.Pin = Data_Pin;
 355              		.loc 1 455 3 view .LVU134
 356              		.loc 1 455 23 is_stmt 0 view .LVU135
 357 018a 0423     		movs	r3, #4
 358 018c 0793     		str	r3, [sp, #28]
 456:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 456 3 is_stmt 1 view .LVU136
 360              		.loc 1 456 24 is_stmt 0 view .LVU137
 361 018e 0894     		str	r4, [sp, #32]
 457:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 362              		.loc 1 457 3 is_stmt 1 view .LVU138
 363              		.loc 1 457 24 is_stmt 0 view .LVU139
 364 0190 0994     		str	r4, [sp, #36]
 458:Src/main.c    ****   HAL_GPIO_Init(Data_GPIO_Port, &GPIO_InitStruct);
 365              		.loc 1 458 3 is_stmt 1 view .LVU140
 366 0192 07A9     		add	r1, sp, #28
 367 0194 0C48     		ldr	r0, .L3+16
 368 0196 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL13:
 459:Src/main.c    **** 
 460:Src/main.c    ****   /*Configure GPIO pins : RMII_TX_EN_Pin RMII_TXD0_Pin */
 461:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_TX_EN_Pin | RMII_TXD0_Pin;
 370              		.loc 1 461 3 view .LVU141
 371              		.loc 1 461 23 is_stmt 0 view .LVU142
 372 019a 4FF42053 		mov	r3, #10240
 373 019e 0793     		str	r3, [sp, #28]
 462:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 374              		.loc 1 462 3 is_stmt 1 view .LVU143
 375              		.loc 1 462 24 is_stmt 0 view .LVU144
 376 01a0 0896     		str	r6, [sp, #32]
 463:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 377              		.loc 1 463 3 is_stmt 1 view .LVU145
 378              		.loc 1 463 24 is_stmt 0 view .LVU146
 379 01a2 0994     		str	r4, [sp, #36]
 464:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 380              		.loc 1 464 3 is_stmt 1 view .LVU147
 381              		.loc 1 464 25 is_stmt 0 view .LVU148
 382 01a4 0A95     		str	r5, [sp, #40]
 465:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 383              		.loc 1 465 3 is_stmt 1 view .LVU149
 384              		.loc 1 465 29 is_stmt 0 view .LVU150
 385 01a6 CDF82C80 		str	r8, [sp, #44]
 466:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 386              		.loc 1 466 3 is_stmt 1 view .LVU151
 387 01aa 07A9     		add	r1, sp, #28
 388 01ac 3846     		mov	r0, r7
 389 01ae FFF7FEFF 		bl	HAL_GPIO_Init
 390              	.LVL14:
ARM GAS  /tmp/ccGDZINZ.s 			page 16


 467:Src/main.c    **** }
 391              		.loc 1 467 1 is_stmt 0 view .LVU152
 392 01b2 0DB0     		add	sp, sp, #52
 393              	.LCFI2:
 394              		.cfi_def_cfa_offset 36
 395              		@ sp needed
 396 01b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 397              	.L4:
 398              		.align	2
 399              	.L3:
 400 01b8 00380240 		.word	1073887232
 401 01bc 00180240 		.word	1073879040
 402 01c0 00001110 		.word	269549568
 403 01c4 00000240 		.word	1073872896
 404 01c8 000C0240 		.word	1073875968
 405 01cc 00040240 		.word	1073873920
 406 01d0 00080240 		.word	1073874944
 407              		.cfi_endproc
 408              	.LFE146:
 410              		.section	.text.MX_TIM6_Init,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu fpv5-d16
 417              	MX_TIM6_Init:
 418              	.LFB143:
 255:Src/main.c    **** 
 419              		.loc 1 255 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 16
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 30B5     		push	{r4, r5, lr}
 424              	.LCFI3:
 425              		.cfi_def_cfa_offset 12
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 5, -8
 428              		.cfi_offset 14, -4
 429 0002 85B0     		sub	sp, sp, #20
 430              	.LCFI4:
 431              		.cfi_def_cfa_offset 32
 261:Src/main.c    **** 
 432              		.loc 1 261 3 view .LVU154
 261:Src/main.c    **** 
 433              		.loc 1 261 27 is_stmt 0 view .LVU155
 434 0004 0025     		movs	r5, #0
 435 0006 0195     		str	r5, [sp, #4]
 436 0008 0295     		str	r5, [sp, #8]
 437 000a 0395     		str	r5, [sp, #12]
 266:Src/main.c    ****   htim6.Init.Prescaler = 215;
 438              		.loc 1 266 3 is_stmt 1 view .LVU156
 266:Src/main.c    ****   htim6.Init.Prescaler = 215;
 439              		.loc 1 266 18 is_stmt 0 view .LVU157
 440 000c 0A4C     		ldr	r4, .L7
 441 000e 0B4B     		ldr	r3, .L7+4
 442 0010 2360     		str	r3, [r4]
 267:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccGDZINZ.s 			page 17


 443              		.loc 1 267 3 is_stmt 1 view .LVU158
 267:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 267 24 is_stmt 0 view .LVU159
 445 0012 D723     		movs	r3, #215
 446 0014 6360     		str	r3, [r4, #4]
 268:Src/main.c    ****   htim6.Init.Period = 3;
 447              		.loc 1 268 3 is_stmt 1 view .LVU160
 268:Src/main.c    ****   htim6.Init.Period = 3;
 448              		.loc 1 268 26 is_stmt 0 view .LVU161
 449 0016 A560     		str	r5, [r4, #8]
 269:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 450              		.loc 1 269 3 is_stmt 1 view .LVU162
 269:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 451              		.loc 1 269 21 is_stmt 0 view .LVU163
 452 0018 0323     		movs	r3, #3
 453 001a E360     		str	r3, [r4, #12]
 270:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 454              		.loc 1 270 3 is_stmt 1 view .LVU164
 270:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 455              		.loc 1 270 32 is_stmt 0 view .LVU165
 456 001c 8023     		movs	r3, #128
 457 001e A361     		str	r3, [r4, #24]
 271:Src/main.c    ****   {
 458              		.loc 1 271 3 is_stmt 1 view .LVU166
 271:Src/main.c    ****   {
 459              		.loc 1 271 7 is_stmt 0 view .LVU167
 460 0020 2046     		mov	r0, r4
 461 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 462              	.LVL15:
 275:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 463              		.loc 1 275 3 is_stmt 1 view .LVU168
 275:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 464              		.loc 1 275 37 is_stmt 0 view .LVU169
 465 0026 0195     		str	r5, [sp, #4]
 276:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 466              		.loc 1 276 3 is_stmt 1 view .LVU170
 276:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 467              		.loc 1 276 33 is_stmt 0 view .LVU171
 468 0028 0395     		str	r5, [sp, #12]
 277:Src/main.c    ****   {
 469              		.loc 1 277 3 is_stmt 1 view .LVU172
 277:Src/main.c    ****   {
 470              		.loc 1 277 7 is_stmt 0 view .LVU173
 471 002a 01A9     		add	r1, sp, #4
 472 002c 2046     		mov	r0, r4
 473 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 474              	.LVL16:
 284:Src/main.c    **** 
 475              		.loc 1 284 1 view .LVU174
 476 0032 05B0     		add	sp, sp, #20
 477              	.LCFI5:
 478              		.cfi_def_cfa_offset 12
 479              		@ sp needed
 480 0034 30BD     		pop	{r4, r5, pc}
 481              	.L8:
 482 0036 00BF     		.align	2
 483              	.L7:
ARM GAS  /tmp/ccGDZINZ.s 			page 18


 484 0038 00000000 		.word	htim6
 485 003c 00100040 		.word	1073745920
 486              		.cfi_endproc
 487              	.LFE143:
 489              		.section	.text.MX_TIM7_Init,"ax",%progbits
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-d16
 496              	MX_TIM7_Init:
 497              	.LFB144:
 292:Src/main.c    **** 
 498              		.loc 1 292 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 16
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 30B5     		push	{r4, r5, lr}
 503              	.LCFI6:
 504              		.cfi_def_cfa_offset 12
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 508 0002 85B0     		sub	sp, sp, #20
 509              	.LCFI7:
 510              		.cfi_def_cfa_offset 32
 298:Src/main.c    **** 
 511              		.loc 1 298 3 view .LVU176
 298:Src/main.c    **** 
 512              		.loc 1 298 27 is_stmt 0 view .LVU177
 513 0004 0025     		movs	r5, #0
 514 0006 0195     		str	r5, [sp, #4]
 515 0008 0295     		str	r5, [sp, #8]
 516 000a 0395     		str	r5, [sp, #12]
 303:Src/main.c    ****   htim7.Init.Prescaler = 59999;
 517              		.loc 1 303 3 is_stmt 1 view .LVU178
 303:Src/main.c    ****   htim7.Init.Prescaler = 59999;
 518              		.loc 1 303 18 is_stmt 0 view .LVU179
 519 000c 0A4C     		ldr	r4, .L11
 520 000e 0B4B     		ldr	r3, .L11+4
 521 0010 2360     		str	r3, [r4]
 304:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 522              		.loc 1 304 3 is_stmt 1 view .LVU180
 304:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 523              		.loc 1 304 24 is_stmt 0 view .LVU181
 524 0012 4EF65F23 		movw	r3, #59999
 525 0016 6360     		str	r3, [r4, #4]
 305:Src/main.c    ****   htim7.Init.Period = 1799;
 526              		.loc 1 305 3 is_stmt 1 view .LVU182
 305:Src/main.c    ****   htim7.Init.Period = 1799;
 527              		.loc 1 305 26 is_stmt 0 view .LVU183
 528 0018 A560     		str	r5, [r4, #8]
 306:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 529              		.loc 1 306 3 is_stmt 1 view .LVU184
 306:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 530              		.loc 1 306 21 is_stmt 0 view .LVU185
 531 001a 40F20773 		movw	r3, #1799
ARM GAS  /tmp/ccGDZINZ.s 			page 19


 532 001e E360     		str	r3, [r4, #12]
 307:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 533              		.loc 1 307 3 is_stmt 1 view .LVU186
 307:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 534              		.loc 1 307 32 is_stmt 0 view .LVU187
 535 0020 A561     		str	r5, [r4, #24]
 308:Src/main.c    ****   {
 536              		.loc 1 308 3 is_stmt 1 view .LVU188
 308:Src/main.c    ****   {
 537              		.loc 1 308 7 is_stmt 0 view .LVU189
 538 0022 2046     		mov	r0, r4
 539 0024 FFF7FEFF 		bl	HAL_TIM_Base_Init
 540              	.LVL17:
 312:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 541              		.loc 1 312 3 is_stmt 1 view .LVU190
 312:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 542              		.loc 1 312 37 is_stmt 0 view .LVU191
 543 0028 0195     		str	r5, [sp, #4]
 313:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 544              		.loc 1 313 3 is_stmt 1 view .LVU192
 313:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 545              		.loc 1 313 33 is_stmt 0 view .LVU193
 546 002a 0395     		str	r5, [sp, #12]
 314:Src/main.c    ****   {
 547              		.loc 1 314 3 is_stmt 1 view .LVU194
 314:Src/main.c    ****   {
 548              		.loc 1 314 7 is_stmt 0 view .LVU195
 549 002c 01A9     		add	r1, sp, #4
 550 002e 2046     		mov	r0, r4
 551 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 552              	.LVL18:
 321:Src/main.c    **** 
 553              		.loc 1 321 1 view .LVU196
 554 0034 05B0     		add	sp, sp, #20
 555              	.LCFI8:
 556              		.cfi_def_cfa_offset 12
 557              		@ sp needed
 558 0036 30BD     		pop	{r4, r5, pc}
 559              	.L12:
 560              		.align	2
 561              	.L11:
 562 0038 00000000 		.word	htim7
 563 003c 00140040 		.word	1073746944
 564              		.cfi_endproc
 565              	.LFE144:
 567              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv5-d16
 574              	MX_USART3_UART_Init:
 575              	.LFB145:
 329:Src/main.c    **** 
 576              		.loc 1 329 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccGDZINZ.s 			page 20


 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580 0000 08B5     		push	{r3, lr}
 581              	.LCFI9:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 3, -8
 584              		.cfi_offset 14, -4
 338:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 585              		.loc 1 338 3 view .LVU198
 338:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 586              		.loc 1 338 19 is_stmt 0 view .LVU199
 587 0002 0948     		ldr	r0, .L15
 588 0004 094B     		ldr	r3, .L15+4
 589 0006 0360     		str	r3, [r0]
 339:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 590              		.loc 1 339 3 is_stmt 1 view .LVU200
 339:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 591              		.loc 1 339 24 is_stmt 0 view .LVU201
 592 0008 4FF4E133 		mov	r3, #115200
 593 000c 4360     		str	r3, [r0, #4]
 340:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 594              		.loc 1 340 3 is_stmt 1 view .LVU202
 340:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 595              		.loc 1 340 26 is_stmt 0 view .LVU203
 596 000e 0023     		movs	r3, #0
 597 0010 8360     		str	r3, [r0, #8]
 341:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 598              		.loc 1 341 3 is_stmt 1 view .LVU204
 341:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 599              		.loc 1 341 24 is_stmt 0 view .LVU205
 600 0012 C360     		str	r3, [r0, #12]
 342:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 601              		.loc 1 342 3 is_stmt 1 view .LVU206
 342:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 602              		.loc 1 342 22 is_stmt 0 view .LVU207
 603 0014 0361     		str	r3, [r0, #16]
 343:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 604              		.loc 1 343 3 is_stmt 1 view .LVU208
 343:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 605              		.loc 1 343 20 is_stmt 0 view .LVU209
 606 0016 0C22     		movs	r2, #12
 607 0018 4261     		str	r2, [r0, #20]
 344:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 608              		.loc 1 344 3 is_stmt 1 view .LVU210
 344:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 609              		.loc 1 344 25 is_stmt 0 view .LVU211
 610 001a 8361     		str	r3, [r0, #24]
 345:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 611              		.loc 1 345 3 is_stmt 1 view .LVU212
 345:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 612              		.loc 1 345 28 is_stmt 0 view .LVU213
 613 001c C361     		str	r3, [r0, #28]
 346:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 614              		.loc 1 346 3 is_stmt 1 view .LVU214
 346:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 615              		.loc 1 346 30 is_stmt 0 view .LVU215
 616 001e 0362     		str	r3, [r0, #32]
 347:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
ARM GAS  /tmp/ccGDZINZ.s 			page 21


 617              		.loc 1 347 3 is_stmt 1 view .LVU216
 347:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 618              		.loc 1 347 38 is_stmt 0 view .LVU217
 619 0020 4362     		str	r3, [r0, #36]
 348:Src/main.c    ****   {
 620              		.loc 1 348 3 is_stmt 1 view .LVU218
 348:Src/main.c    ****   {
 621              		.loc 1 348 7 is_stmt 0 view .LVU219
 622 0022 FFF7FEFF 		bl	HAL_UART_Init
 623              	.LVL19:
 355:Src/main.c    **** 
 624              		.loc 1 355 1 view .LVU220
 625 0026 08BD     		pop	{r3, pc}
 626              	.L16:
 627              		.align	2
 628              	.L15:
 629 0028 00000000 		.word	huart3
 630 002c 00480040 		.word	1073760256
 631              		.cfi_endproc
 632              	.LFE145:
 634              		.section	.text.SystemClock_Config,"ax",%progbits
 635              		.align	1
 636              		.global	SystemClock_Config
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv5-d16
 642              	SystemClock_Config:
 643              	.LFB142:
 199:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 644              		.loc 1 199 1 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 224
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648 0000 30B5     		push	{r4, r5, lr}
 649              	.LCFI10:
 650              		.cfi_def_cfa_offset 12
 651              		.cfi_offset 4, -12
 652              		.cfi_offset 5, -8
 653              		.cfi_offset 14, -4
 654 0002 B9B0     		sub	sp, sp, #228
 655              	.LCFI11:
 656              		.cfi_def_cfa_offset 240
 200:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 657              		.loc 1 200 3 view .LVU222
 200:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 658              		.loc 1 200 22 is_stmt 0 view .LVU223
 659 0004 3422     		movs	r2, #52
 660 0006 0021     		movs	r1, #0
 661 0008 2BA8     		add	r0, sp, #172
 662 000a FFF7FEFF 		bl	memset
 663              	.LVL20:
 201:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 664              		.loc 1 201 3 is_stmt 1 view .LVU224
 201:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 665              		.loc 1 201 22 is_stmt 0 view .LVU225
 666 000e 0024     		movs	r4, #0
ARM GAS  /tmp/ccGDZINZ.s 			page 22


 667 0010 2694     		str	r4, [sp, #152]
 668 0012 2794     		str	r4, [sp, #156]
 669 0014 2894     		str	r4, [sp, #160]
 670 0016 2994     		str	r4, [sp, #164]
 671 0018 2A94     		str	r4, [sp, #168]
 202:Src/main.c    **** 
 672              		.loc 1 202 3 is_stmt 1 view .LVU226
 202:Src/main.c    **** 
 673              		.loc 1 202 28 is_stmt 0 view .LVU227
 674 001a 9022     		movs	r2, #144
 675 001c 2146     		mov	r1, r4
 676 001e 02A8     		add	r0, sp, #8
 677 0020 FFF7FEFF 		bl	memset
 678              	.LVL21:
 206:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 679              		.loc 1 206 3 is_stmt 1 view .LVU228
 680              	.LBB8:
 206:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 681              		.loc 1 206 3 view .LVU229
 206:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 682              		.loc 1 206 3 view .LVU230
 683 0024 1E4B     		ldr	r3, .L19
 684 0026 1A6C     		ldr	r2, [r3, #64]
 685 0028 42F08052 		orr	r2, r2, #268435456
 686 002c 1A64     		str	r2, [r3, #64]
 206:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 687              		.loc 1 206 3 view .LVU231
 688 002e 1B6C     		ldr	r3, [r3, #64]
 689 0030 03F08053 		and	r3, r3, #268435456
 690 0034 0093     		str	r3, [sp]
 206:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 691              		.loc 1 206 3 view .LVU232
 692 0036 009B     		ldr	r3, [sp]
 693              	.LBE8:
 206:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 694              		.loc 1 206 3 view .LVU233
 207:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 695              		.loc 1 207 3 view .LVU234
 696              	.LBB9:
 207:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 697              		.loc 1 207 3 view .LVU235
 207:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 698              		.loc 1 207 3 view .LVU236
 699 0038 1A4B     		ldr	r3, .L19+4
 700 003a 1A68     		ldr	r2, [r3]
 701 003c 42F44042 		orr	r2, r2, #49152
 702 0040 1A60     		str	r2, [r3]
 207:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 703              		.loc 1 207 3 view .LVU237
 704 0042 1B68     		ldr	r3, [r3]
 705 0044 03F44043 		and	r3, r3, #49152
 706 0048 0193     		str	r3, [sp, #4]
 207:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 707              		.loc 1 207 3 view .LVU238
 708 004a 019B     		ldr	r3, [sp, #4]
 709              	.LBE9:
 207:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccGDZINZ.s 			page 23


 710              		.loc 1 207 3 view .LVU239
 210:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 711              		.loc 1 210 3 view .LVU240
 210:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 712              		.loc 1 210 36 is_stmt 0 view .LVU241
 713 004c 0225     		movs	r5, #2
 714 004e 2B95     		str	r5, [sp, #172]
 211:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 715              		.loc 1 211 3 is_stmt 1 view .LVU242
 211:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 716              		.loc 1 211 30 is_stmt 0 view .LVU243
 717 0050 0123     		movs	r3, #1
 718 0052 2E93     		str	r3, [sp, #184]
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 719              		.loc 1 212 3 is_stmt 1 view .LVU244
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 720              		.loc 1 212 41 is_stmt 0 view .LVU245
 721 0054 1023     		movs	r3, #16
 722 0056 2F93     		str	r3, [sp, #188]
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 723              		.loc 1 213 3 is_stmt 1 view .LVU246
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 724              		.loc 1 213 34 is_stmt 0 view .LVU247
 725 0058 3195     		str	r5, [sp, #196]
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 726              		.loc 1 214 3 is_stmt 1 view .LVU248
 214:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 727              		.loc 1 214 35 is_stmt 0 view .LVU249
 728 005a 3294     		str	r4, [sp, #200]
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 729              		.loc 1 215 3 is_stmt 1 view .LVU250
 215:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 730              		.loc 1 215 30 is_stmt 0 view .LVU251
 731 005c 0823     		movs	r3, #8
 732 005e 3393     		str	r3, [sp, #204]
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 733              		.loc 1 216 3 is_stmt 1 view .LVU252
 216:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 734              		.loc 1 216 30 is_stmt 0 view .LVU253
 735 0060 D823     		movs	r3, #216
 736 0062 3493     		str	r3, [sp, #208]
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 737              		.loc 1 217 3 is_stmt 1 view .LVU254
 217:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 738              		.loc 1 217 30 is_stmt 0 view .LVU255
 739 0064 3595     		str	r5, [sp, #212]
 218:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 740              		.loc 1 218 3 is_stmt 1 view .LVU256
 218:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 741              		.loc 1 218 30 is_stmt 0 view .LVU257
 742 0066 3695     		str	r5, [sp, #216]
 219:Src/main.c    ****   {
 743              		.loc 1 219 3 is_stmt 1 view .LVU258
 219:Src/main.c    ****   {
 744              		.loc 1 219 7 is_stmt 0 view .LVU259
 745 0068 2BA8     		add	r0, sp, #172
 746 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /tmp/ccGDZINZ.s 			page 24


 747              	.LVL22:
 225:Src/main.c    ****   {
 748              		.loc 1 225 3 is_stmt 1 view .LVU260
 225:Src/main.c    ****   {
 749              		.loc 1 225 7 is_stmt 0 view .LVU261
 750 006e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 751              	.LVL23:
 231:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 752              		.loc 1 231 3 is_stmt 1 view .LVU262
 231:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 753              		.loc 1 231 31 is_stmt 0 view .LVU263
 754 0072 0F23     		movs	r3, #15
 755 0074 2693     		str	r3, [sp, #152]
 232:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 756              		.loc 1 232 3 is_stmt 1 view .LVU264
 232:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 757              		.loc 1 232 34 is_stmt 0 view .LVU265
 758 0076 2795     		str	r5, [sp, #156]
 233:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 759              		.loc 1 233 3 is_stmt 1 view .LVU266
 233:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 760              		.loc 1 233 35 is_stmt 0 view .LVU267
 761 0078 2894     		str	r4, [sp, #160]
 234:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 762              		.loc 1 234 3 is_stmt 1 view .LVU268
 234:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 763              		.loc 1 234 36 is_stmt 0 view .LVU269
 764 007a 4FF4A053 		mov	r3, #5120
 765 007e 2993     		str	r3, [sp, #164]
 235:Src/main.c    **** 
 766              		.loc 1 235 3 is_stmt 1 view .LVU270
 235:Src/main.c    **** 
 767              		.loc 1 235 36 is_stmt 0 view .LVU271
 768 0080 4FF48053 		mov	r3, #4096
 769 0084 2A93     		str	r3, [sp, #168]
 237:Src/main.c    ****   {
 770              		.loc 1 237 3 is_stmt 1 view .LVU272
 237:Src/main.c    ****   {
 771              		.loc 1 237 7 is_stmt 0 view .LVU273
 772 0086 0721     		movs	r1, #7
 773 0088 26A8     		add	r0, sp, #152
 774 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 775              	.LVL24:
 241:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 776              		.loc 1 241 3 is_stmt 1 view .LVU274
 241:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 777              		.loc 1 241 44 is_stmt 0 view .LVU275
 778 008e 4FF48073 		mov	r3, #256
 779 0092 0293     		str	r3, [sp, #8]
 242:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 780              		.loc 1 242 3 is_stmt 1 view .LVU276
 242:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 781              		.loc 1 242 44 is_stmt 0 view .LVU277
 782 0094 1594     		str	r4, [sp, #84]
 243:Src/main.c    ****   {
 783              		.loc 1 243 3 is_stmt 1 view .LVU278
 243:Src/main.c    ****   {
ARM GAS  /tmp/ccGDZINZ.s 			page 25


 784              		.loc 1 243 7 is_stmt 0 view .LVU279
 785 0096 02A8     		add	r0, sp, #8
 786 0098 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 787              	.LVL25:
 247:Src/main.c    **** 
 788              		.loc 1 247 1 view .LVU280
 789 009c 39B0     		add	sp, sp, #228
 790              	.LCFI12:
 791              		.cfi_def_cfa_offset 12
 792              		@ sp needed
 793 009e 30BD     		pop	{r4, r5, pc}
 794              	.L20:
 795              		.align	2
 796              	.L19:
 797 00a0 00380240 		.word	1073887232
 798 00a4 00700040 		.word	1073770496
 799              		.cfi_endproc
 800              	.LFE142:
 802              		.section	.text.main,"ax",%progbits
 803              		.align	1
 804              		.global	main
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv5-d16
 810              	main:
 811              	.LFB141:
 108:Src/main.c    ****   /* USER CODE BEGIN 1 */
 812              		.loc 1 108 1 is_stmt 1 view -0
 813              		.cfi_startproc
 814              		@ Volatile: function does not return.
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817 0000 08B5     		push	{r3, lr}
 818              	.LCFI13:
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 3, -8
 821              		.cfi_offset 14, -4
 116:Src/main.c    **** 
 822              		.loc 1 116 3 view .LVU282
 823 0002 FFF7FEFF 		bl	HAL_Init
 824              	.LVL26:
 123:Src/main.c    **** 
 825              		.loc 1 123 3 view .LVU283
 826 0006 FFF7FEFF 		bl	SystemClock_Config
 827              	.LVL27:
 130:Src/main.c    ****   MX_TIM6_Init();
 828              		.loc 1 130 3 view .LVU284
 829 000a FFF7FEFF 		bl	MX_GPIO_Init
 830              	.LVL28:
 131:Src/main.c    ****   MX_TIM7_Init();
 831              		.loc 1 131 3 view .LVU285
 832 000e FFF7FEFF 		bl	MX_TIM6_Init
 833              	.LVL29:
 132:Src/main.c    ****   MX_USART3_UART_Init();
 834              		.loc 1 132 3 view .LVU286
 835 0012 FFF7FEFF 		bl	MX_TIM7_Init
ARM GAS  /tmp/ccGDZINZ.s 			page 26


 836              	.LVL30:
 133:Src/main.c    ****   /* USER CODE BEGIN 2 */
 837              		.loc 1 133 3 view .LVU287
 838 0016 FFF7FEFF 		bl	MX_USART3_UART_Init
 839              	.LVL31:
 135:Src/main.c    ****   HAL_DBGMCU_EnableDBGStandbyMode();
 840              		.loc 1 135 3 view .LVU288
 135:Src/main.c    ****   HAL_DBGMCU_EnableDBGStandbyMode();
 841              		.loc 1 135 16 is_stmt 0 view .LVU289
 842 001a 314A     		ldr	r2, .L24
 843 001c 136C     		ldr	r3, [r2, #64]
 844 001e 43F03003 		orr	r3, r3, #48
 845 0022 1364     		str	r3, [r2, #64]
 136:Src/main.c    ****   HAL_DBGMCU_EnableDBGStopMode();
 846              		.loc 1 136 3 is_stmt 1 view .LVU290
 847 0024 FFF7FEFF 		bl	HAL_DBGMCU_EnableDBGStandbyMode
 848              	.LVL32:
 137:Src/main.c    ****   DBGMCU->APB1FZ |= (DBGMCU_APB1_FZ_DBG_TIM6_STOP | DBGMCU_APB1_FZ_DBG_TIM7_STOP);
 849              		.loc 1 137 3 view .LVU291
 850 0028 FFF7FEFF 		bl	HAL_DBGMCU_EnableDBGStopMode
 851              	.LVL33:
 138:Src/main.c    **** 
 852              		.loc 1 138 3 view .LVU292
 138:Src/main.c    **** 
 853              		.loc 1 138 18 is_stmt 0 view .LVU293
 854 002c 2D4A     		ldr	r2, .L24+4
 855 002e 9368     		ldr	r3, [r2, #8]
 856 0030 43F03003 		orr	r3, r3, #48
 857 0034 9360     		str	r3, [r2, #8]
 140:Src/main.c    ****   steer.clock_period = 500;
 858              		.loc 1 140 3 is_stmt 1 view .LVU294
 140:Src/main.c    ****   steer.clock_period = 500;
 859              		.loc 1 140 19 is_stmt 0 view .LVU295
 860 0036 2C4C     		ldr	r4, .L24+8
 861 0038 0C21     		movs	r1, #12
 862 003a 2160     		str	r1, [r4]
 141:Src/main.c    ****   steer.data_freq_Hz = 1500000;
 863              		.loc 1 141 3 is_stmt 1 view .LVU296
 141:Src/main.c    ****   steer.data_freq_Hz = 1500000;
 864              		.loc 1 141 22 is_stmt 0 view .LVU297
 865 003c 4FF4FA73 		mov	r3, #500
 866 0040 E360     		str	r3, [r4, #12]
 142:Src/main.c    ****   steer.steer_zero = 0; // TO BE DEFINED
 867              		.loc 1 142 3 is_stmt 1 view .LVU298
 142:Src/main.c    ****   steer.steer_zero = 0; // TO BE DEFINED
 868              		.loc 1 142 22 is_stmt 0 view .LVU299
 869 0042 2A4B     		ldr	r3, .L24+12
 870 0044 6361     		str	r3, [r4, #20]
 143:Src/main.c    **** 
 871              		.loc 1 143 3 is_stmt 1 view .LVU300
 143:Src/main.c    **** 
 872              		.loc 1 143 20 is_stmt 0 view .LVU301
 873 0046 0023     		movs	r3, #0
 874 0048 A364     		str	r3, [r4, #72]
 145:Src/main.c    ****   steer.ClockPinNumber = GPIO_PIN_12;
 875              		.loc 1 145 3 is_stmt 1 view .LVU302
 145:Src/main.c    ****   steer.ClockPinNumber = GPIO_PIN_12;
ARM GAS  /tmp/ccGDZINZ.s 			page 27


 876              		.loc 1 145 22 is_stmt 0 view .LVU303
 877 004a 2948     		ldr	r0, .L24+16
 878 004c A066     		str	r0, [r4, #104]
 146:Src/main.c    ****   steer.DataPinName = GPIOD;
 879              		.loc 1 146 3 is_stmt 1 view .LVU304
 146:Src/main.c    ****   steer.DataPinName = GPIOD;
 880              		.loc 1 146 24 is_stmt 0 view .LVU305
 881 004e 4FF48053 		mov	r3, #4096
 882 0052 A4F87030 		strh	r3, [r4, #112]	@ movhi
 147:Src/main.c    ****   steer.DataPinNumber = GPIO_PIN_2;
 883              		.loc 1 147 3 is_stmt 1 view .LVU306
 147:Src/main.c    ****   steer.DataPinNumber = GPIO_PIN_2;
 884              		.loc 1 147 21 is_stmt 0 view .LVU307
 885 0056 274B     		ldr	r3, .L24+20
 886 0058 E366     		str	r3, [r4, #108]
 148:Src/main.c    ****   HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 887              		.loc 1 148 3 is_stmt 1 view .LVU308
 148:Src/main.c    ****   HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 888              		.loc 1 148 23 is_stmt 0 view .LVU309
 889 005a 0423     		movs	r3, #4
 890 005c A4F87230 		strh	r3, [r4, #114]	@ movhi
 149:Src/main.c    ****   steer.clock_status = 1;
 891              		.loc 1 149 3 is_stmt 1 view .LVU310
 892 0060 0122     		movs	r2, #1
 893 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 894              	.LVL34:
 150:Src/main.c    **** 
 895              		.loc 1 150 3 view .LVU311
 150:Src/main.c    **** 
 896              		.loc 1 150 22 is_stmt 0 view .LVU312
 897 0066 0121     		movs	r1, #1
 898 0068 2161     		str	r1, [r4, #16]
 152:Src/main.c    **** 
 899              		.loc 1 152 3 is_stmt 1 view .LVU313
 152:Src/main.c    **** 
 900              		.loc 1 152 23 is_stmt 0 view .LVU314
 901 006a 234D     		ldr	r5, .L24+24
 902 006c 6566     		str	r5, [r4, #100]
 154:Src/main.c    **** 
 903              		.loc 1 154 3 is_stmt 1 view .LVU315
 904 006e 2348     		ldr	r0, .L24+28
 905 0070 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 906              	.LVL35:
 157:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 907              		.loc 1 157 3 view .LVU316
 908 0074 2846     		mov	r0, r5
 909 0076 FFF7FEFF 		bl	HAL_TIM_Base_Start
 910              	.LVL36:
 158:Src/main.c    **** 
 911              		.loc 1 158 3 view .LVU317
 912 007a 2846     		mov	r0, r5
 913 007c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 914              	.LVL37:
 915              	.L22:
 164:Src/main.c    ****   {
 916              		.loc 1 164 3 discriminator 1 view .LVU318
 167:Src/main.c    **** 
ARM GAS  /tmp/ccGDZINZ.s 			page 28


 917              		.loc 1 167 5 discriminator 1 view .LVU319
 918 0080 C820     		movs	r0, #200
 919 0082 FFF7FEFF 		bl	HAL_Delay
 920              	.LVL38:
 169:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 921              		.loc 1 169 5 discriminator 1 view .LVU320
 922 0086 1D4C     		ldr	r4, .L24+28
 923 0088 8021     		movs	r1, #128
 924 008a 2046     		mov	r0, r4
 925 008c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 926              	.LVL39:
 170:Src/main.c    **** 
 927              		.loc 1 170 5 discriminator 1 view .LVU321
 928 0090 0121     		movs	r1, #1
 929 0092 2046     		mov	r0, r4
 930 0094 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 931              	.LVL40:
 172:Src/main.c    **** 
 932              		.loc 1 172 5 discriminator 1 view .LVU322
 933 0098 C820     		movs	r0, #200
 934 009a FFF7FEFF 		bl	HAL_Delay
 935              	.LVL41:
 174:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 936              		.loc 1 174 5 discriminator 1 view .LVU323
 937 009e 4FF48041 		mov	r1, #16384
 938 00a2 2046     		mov	r0, r4
 939 00a4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 940              	.LVL42:
 175:Src/main.c    **** 
 941              		.loc 1 175 5 discriminator 1 view .LVU324
 942 00a8 8021     		movs	r1, #128
 943 00aa 2046     		mov	r0, r4
 944 00ac FFF7FEFF 		bl	HAL_GPIO_TogglePin
 945              	.LVL43:
 177:Src/main.c    **** 
 946              		.loc 1 177 5 discriminator 1 view .LVU325
 947 00b0 C820     		movs	r0, #200
 948 00b2 FFF7FEFF 		bl	HAL_Delay
 949              	.LVL44:
 179:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 950              		.loc 1 179 5 discriminator 1 view .LVU326
 951 00b6 4FF48041 		mov	r1, #16384
 952 00ba 2046     		mov	r0, r4
 953 00bc FFF7FEFF 		bl	HAL_GPIO_TogglePin
 954              	.LVL45:
 180:Src/main.c    **** 
 955              		.loc 1 180 5 discriminator 1 view .LVU327
 956 00c0 8021     		movs	r1, #128
 957 00c2 2046     		mov	r0, r4
 958 00c4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 959              	.LVL46:
 182:Src/main.c    **** 
 960              		.loc 1 182 5 discriminator 1 view .LVU328
 961 00c8 C820     		movs	r0, #200
 962 00ca FFF7FEFF 		bl	HAL_Delay
 963              	.LVL47:
 184:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
ARM GAS  /tmp/ccGDZINZ.s 			page 29


 964              		.loc 1 184 5 discriminator 1 view .LVU329
 965 00ce 8021     		movs	r1, #128
 966 00d0 2046     		mov	r0, r4
 967 00d2 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 968              	.LVL48:
 185:Src/main.c    **** 
 969              		.loc 1 185 5 discriminator 1 view .LVU330
 970 00d6 0121     		movs	r1, #1
 971 00d8 2046     		mov	r0, r4
 972 00da FFF7FEFF 		bl	HAL_GPIO_TogglePin
 973              	.LVL49:
 164:Src/main.c    ****   {
 974              		.loc 1 164 9 discriminator 1 view .LVU331
 975 00de CFE7     		b	.L22
 976              	.L25:
 977              		.align	2
 978              	.L24:
 979 00e0 00380240 		.word	1073887232
 980 00e4 002004E0 		.word	-536600576
 981 00e8 00000000 		.word	steer
 982 00ec 60E31600 		.word	1500000
 983 00f0 00080240 		.word	1073874944
 984 00f4 000C0240 		.word	1073875968
 985 00f8 00000000 		.word	htim7
 986 00fc 00040240 		.word	1073873920
 987              		.cfi_endproc
 988              	.LFE141:
 990              		.section	.text.print,"ax",%progbits
 991              		.align	1
 992              		.global	print
 993              		.syntax unified
 994              		.thumb
 995              		.thumb_func
 996              		.fpu fpv5-d16
 998              	print:
 999              	.LVL50:
 1000              	.LFB147:
 468:Src/main.c    **** 
 469:Src/main.c    **** /* USER CODE BEGIN 4 */
 470:Src/main.c    **** // print on uart
 471:Src/main.c    **** void print(UART_HandleTypeDef *huart, char *text)
 472:Src/main.c    **** {
 1001              		.loc 1 472 1 view -0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              		.loc 1 472 1 is_stmt 0 view .LVU333
 1006 0000 38B5     		push	{r3, r4, r5, lr}
 1007              	.LCFI14:
 1008              		.cfi_def_cfa_offset 16
 1009              		.cfi_offset 3, -16
 1010              		.cfi_offset 4, -12
 1011              		.cfi_offset 5, -8
 1012              		.cfi_offset 14, -4
 1013 0002 0546     		mov	r5, r0
 1014 0004 0C46     		mov	r4, r1
 473:Src/main.c    ****   HAL_UART_Transmit(huart, (uint8_t *)text, strlen(text), 0xFFFF);
ARM GAS  /tmp/ccGDZINZ.s 			page 30


 1015              		.loc 1 473 3 is_stmt 1 view .LVU334
 1016              		.loc 1 473 45 is_stmt 0 view .LVU335
 1017 0006 0846     		mov	r0, r1
 1018              	.LVL51:
 1019              		.loc 1 473 45 view .LVU336
 1020 0008 FFF7FEFF 		bl	strlen
 1021              	.LVL52:
 1022              		.loc 1 473 3 view .LVU337
 1023 000c 4FF6FF73 		movw	r3, #65535
 1024 0010 82B2     		uxth	r2, r0
 1025 0012 2146     		mov	r1, r4
 1026 0014 2846     		mov	r0, r5
 1027 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 1028              	.LVL53:
 474:Src/main.c    **** }
 1029              		.loc 1 474 1 view .LVU338
 1030 001a 38BD     		pop	{r3, r4, r5, pc}
 1031              		.loc 1 474 1 view .LVU339
 1032              		.cfi_endproc
 1033              	.LFE147:
 1035              		.section	.rodata.check_steer_error.str1.4,"aMS",%progbits,1
 1036              		.align	2
 1037              	.LC0:
 1038 0000 0A457272 		.ascii	"\012Error during the SSI reading!\012\000"
 1038      6F722064 
 1038      7572696E 
 1038      67207468 
 1038      65205353 
 1039              		.section	.text.check_steer_error,"ax",%progbits
 1040              		.align	1
 1041              		.global	check_steer_error
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv5-d16
 1047              	check_steer_error:
 1048              	.LVL54:
 1049              	.LFB150:
 475:Src/main.c    **** 
 476:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 477:Src/main.c    **** {
 478:Src/main.c    ****   char mes[200] = "";
 479:Src/main.c    ****   int val = -1;
 480:Src/main.c    ****   int val2 = -1;
 481:Src/main.c    **** 
 482:Src/main.c    ****   val = __HAL_TIM_GET_COUNTER(&htim6);
 483:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 484:Src/main.c    ****   sprintf(mes, "\r\n TIM6 = %d -- TIM7 = %d", val, val2);
 485:Src/main.c    ****   print(&huart3, mes);
 486:Src/main.c    ****   /**
 487:Src/main.c    ****    * This interrupt is used to start the clock to retrieve the data frame from the encoder
 488:Src/main.c    ****   */
 489:Src/main.c    ****   if (htim == &htim7)
 490:Src/main.c    ****   {
 491:Src/main.c    ****     HAL_TIM_Base_Stop(&htim7);
 492:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 493:Src/main.c    ****     __HAL_TIM_SET_COUNTER(&htim7, 0);
ARM GAS  /tmp/ccGDZINZ.s 			page 31


 494:Src/main.c    ****     HAL_TIM_Base_Start(&htim6);
 495:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim6);
 496:Src/main.c    ****   }
 497:Src/main.c    **** 
 498:Src/main.c    ****   if (htim == &htim6)
 499:Src/main.c    ****   {
 500:Src/main.c    ****     read_steer_SSI();
 501:Src/main.c    ****   }
 502:Src/main.c    **** }
 503:Src/main.c    **** 
 504:Src/main.c    **** void read_steer_SSI()
 505:Src/main.c    **** {
 506:Src/main.c    ****   char message[256] = "";
 507:Src/main.c    ****   char message2[256] = "";
 508:Src/main.c    ****   char mes[200] = "";
 509:Src/main.c    ****   int val = -1;
 510:Src/main.c    ****   int val2 = -1;
 511:Src/main.c    **** 
 512:Src/main.c    ****   sprintf(message, "\r\n data_count = %u -- clock_status = %u", steer.data_count, steer.clock_statu
 513:Src/main.c    ****   // sprintf(message2, "\r\nSpeed1 = %f -- Speed2 = %f", wheel_speed, wheel_speed2);
 514:Src/main.c    ****   print(&huart3, message);
 515:Src/main.c    ****   // print(&huart3, message2);
 516:Src/main.c    ****   val = __HAL_TIM_GET_COUNTER(&htim6);
 517:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 518:Src/main.c    ****   sprintf(mes, "\r\n Inside the SSI  =>  TIM6 = %d -- TIM7 = %d", val, val2);
 519:Src/main.c    ****   print(&huart3, mes);
 520:Src/main.c    ****   // check if the status of clock given as input for the encoder
 521:Src/main.c    ****   if (steer.data_count < steer.data_size)
 522:Src/main.c    ****   {
 523:Src/main.c    **** 
 524:Src/main.c    ****     if (steer.clock_status)
 525:Src/main.c    ****     {
 526:Src/main.c    ****       // In this case the clock is falling, so we are in the middle of the bit sent by the encoder
 527:Src/main.c    ****       // so, we can read the bit and be sure that it is correct
 528:Src/main.c    ****       steer.clock_status = 0;
 529:Src/main.c    ****       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_RESET);
 530:Src/main.c    ****       // In the first falling there is no data, so we start reading only from the second falling
 531:Src/main.c    ****       if (steer.data_count > 0)
 532:Src/main.c    ****       {
 533:Src/main.c    ****         steer.data[steer.data_count] = HAL_GPIO_ReadPin(steer.DataPinName, steer.DataPinNumber);
 534:Src/main.c    ****       }
 535:Src/main.c    ****     }
 536:Src/main.c    ****     else
 537:Src/main.c    ****     {
 538:Src/main.c    ****       /* In this case the clock is rising and the encoder is giving us the next bit to read */
 539:Src/main.c    ****       steer.clock_status = 1;
 540:Src/main.c    ****       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 541:Src/main.c    ****       steer.data_count++;
 542:Src/main.c    ****     }
 543:Src/main.c    ****   }
 544:Src/main.c    ****   else if (steer.data_count = steer.data_size)
 545:Src/main.c    ****   {
 546:Src/main.c    ****     /**
 547:Src/main.c    ****      * Now we can start to convert the binary number and get the angle of the steering.
 548:Src/main.c    ****      * Then we are going to restart the timer 7 in order to get another data frame
 549:Src/main.c    ****     */
 550:Src/main.c    **** 
ARM GAS  /tmp/ccGDZINZ.s 			page 32


 551:Src/main.c    ****     steer.converted_data = bin_dec(steer.data, steer.data_size);
 552:Src/main.c    **** 
 553:Src/main.c    ****     char resolution_mes[256] = "";
 554:Src/main.c    ****     sprintf(resolution_mes, "\r\nresolution = %u \n", steer.converted_data);
 555:Src/main.c    ****     print(&huart3, resolution_mes);
 556:Src/main.c    **** 
 557:Src/main.c    ****     // stop the timer 6 and restart the timer 7
 558:Src/main.c    ****     HAL_TIM_Base_Stop(&htim6);
 559:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 560:Src/main.c    ****     __HAL_TIM_SET_COUNTER(&htim6, 0);
 561:Src/main.c    **** 
 562:Src/main.c    ****     HAL_TIM_Base_Start(&htim7);
 563:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim7);
 564:Src/main.c    ****   }
 565:Src/main.c    ****   else
 566:Src/main.c    ****   {
 567:Src/main.c    ****     /* in this case we have an error */
 568:Src/main.c    ****     check_steer_error(&steer);
 569:Src/main.c    ****   }
 570:Src/main.c    **** }
 571:Src/main.c    **** 
 572:Src/main.c    **** void check_steer_error(steer_enc *steer)
 573:Src/main.c    **** {
 1050              		.loc 1 573 1 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              		.loc 1 573 1 is_stmt 0 view .LVU341
 1055 0000 10B5     		push	{r4, lr}
 1056              	.LCFI15:
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 4, -8
 1059              		.cfi_offset 14, -4
 1060 0002 0446     		mov	r4, r0
 574:Src/main.c    ****   steer->error_flag = 1;
 1061              		.loc 1 574 3 is_stmt 1 view .LVU342
 1062              		.loc 1 574 21 is_stmt 0 view .LVU343
 1063 0004 0123     		movs	r3, #1
 1064 0006 4360     		str	r3, [r0, #4]
 575:Src/main.c    ****   steer->error_data_status = HAL_GPIO_ReadPin(steer->DataPinName, steer->DataPinNumber);
 1065              		.loc 1 575 3 is_stmt 1 view .LVU344
 1066              		.loc 1 575 30 is_stmt 0 view .LVU345
 1067 0008 B0F87210 		ldrh	r1, [r0, #114]
 1068 000c C06E     		ldr	r0, [r0, #108]
 1069              	.LVL55:
 1070              		.loc 1 575 30 view .LVU346
 1071 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1072              	.LVL56:
 1073              		.loc 1 575 28 view .LVU347
 1074 0012 A060     		str	r0, [r4, #8]
 576:Src/main.c    ****   print(&huart3, "\nError during the SSI reading!\n");
 1075              		.loc 1 576 3 is_stmt 1 view .LVU348
 1076 0014 0249     		ldr	r1, .L30
 1077 0016 0348     		ldr	r0, .L30+4
 1078 0018 FFF7FEFF 		bl	print
 1079              	.LVL57:
 577:Src/main.c    **** }
ARM GAS  /tmp/ccGDZINZ.s 			page 33


 1080              		.loc 1 577 1 is_stmt 0 view .LVU349
 1081 001c 10BD     		pop	{r4, pc}
 1082              	.LVL58:
 1083              	.L31:
 1084              		.loc 1 577 1 view .LVU350
 1085 001e 00BF     		.align	2
 1086              	.L30:
 1087 0020 00000000 		.word	.LC0
 1088 0024 00000000 		.word	huart3
 1089              		.cfi_endproc
 1090              	.LFE150:
 1092              		.section	.text.Power,"ax",%progbits
 1093              		.align	1
 1094              		.global	Power
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu fpv5-d16
 1100              	Power:
 1101              	.LVL59:
 1102              	.LFB152:
 578:Src/main.c    **** 
 579:Src/main.c    **** //function to calculate the decimal value from MSB binary array
 580:Src/main.c    **** //bin = pointer to binary array
 581:Src/main.c    **** //max = size of the array
 582:Src/main.c    **** int bin_dec(int *bin, int size)
 583:Src/main.c    **** {
 584:Src/main.c    **** 
 585:Src/main.c    ****   int dec = 0;
 586:Src/main.c    **** 
 587:Src/main.c    ****   for (int i = 0; i < size; i++)
 588:Src/main.c    ****   {
 589:Src/main.c    ****     if (bin[i] == 1)
 590:Src/main.c    ****     {
 591:Src/main.c    ****       dec += Power(2, size - i - 1);
 592:Src/main.c    ****     }
 593:Src/main.c    ****   }
 594:Src/main.c    ****   return dec;
 595:Src/main.c    **** }
 596:Src/main.c    **** 
 597:Src/main.c    **** //function to calculate the power of a given number
 598:Src/main.c    **** double Power(int base, int expn)
 599:Src/main.c    **** {
 1103              		.loc 1 599 1 is_stmt 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107              		@ link register save eliminated.
 1108              		.loc 1 599 1 is_stmt 0 view .LVU352
 1109 0000 06EE900A 		vmov	s13, r0	@ int
 600:Src/main.c    **** 
 601:Src/main.c    ****   double result = 1;
 1110              		.loc 1 601 3 is_stmt 1 view .LVU353
 1111              	.LVL60:
 602:Src/main.c    **** 
 603:Src/main.c    ****   if (expn != 0)
 1112              		.loc 1 603 3 view .LVU354
ARM GAS  /tmp/ccGDZINZ.s 			page 34


 1113              		.loc 1 603 6 is_stmt 0 view .LVU355
 1114 0004 0A46     		mov	r2, r1
 1115 0006 11B9     		cbnz	r1, .L36
 601:Src/main.c    **** 
 1116              		.loc 1 601 10 view .LVU356
 1117 0008 B7EE000B 		vmov.f64	d0, #1.0e+0
 1118 000c 7047     		bx	lr
 1119              	.L36:
 1120              	.LBB10:
 604:Src/main.c    ****   {
 605:Src/main.c    ****     for (int j = 0; j < expn; j++)
 1121              		.loc 1 605 14 view .LVU357
 1122 000e 0023     		movs	r3, #0
 1123              	.LBE10:
 601:Src/main.c    **** 
 1124              		.loc 1 601 10 view .LVU358
 1125 0010 B7EE000B 		vmov.f64	d0, #1.0e+0
 1126              	.LVL61:
 1127              	.L33:
 1128              	.LBB11:
 1129              		.loc 1 605 21 is_stmt 1 discriminator 1 view .LVU359
 1130              		.loc 1 605 5 is_stmt 0 discriminator 1 view .LVU360
 1131 0014 9342     		cmp	r3, r2
 1132 0016 05DA     		bge	.L37
 606:Src/main.c    ****     {
 607:Src/main.c    ****       result = result * base;
 1133              		.loc 1 607 7 is_stmt 1 discriminator 3 view .LVU361
 1134              		.loc 1 607 23 is_stmt 0 discriminator 3 view .LVU362
 1135 0018 B8EEE67B 		vcvt.f64.s32	d7, s13
 1136              		.loc 1 607 14 discriminator 3 view .LVU363
 1137 001c 20EE070B 		vmul.f64	d0, d0, d7
 1138              	.LVL62:
 605:Src/main.c    ****     {
 1139              		.loc 1 605 31 is_stmt 1 discriminator 3 view .LVU364
 605:Src/main.c    ****     {
 1140              		.loc 1 605 32 is_stmt 0 discriminator 3 view .LVU365
 1141 0020 0133     		adds	r3, r3, #1
 1142              	.LVL63:
 605:Src/main.c    ****     {
 1143              		.loc 1 605 32 discriminator 3 view .LVU366
 1144 0022 F7E7     		b	.L33
 1145              	.L37:
 605:Src/main.c    ****     {
 1146              		.loc 1 605 32 discriminator 3 view .LVU367
 1147              	.LBE11:
 608:Src/main.c    ****     }
 609:Src/main.c    ****   }
 610:Src/main.c    **** 
 611:Src/main.c    ****   return result;
 612:Src/main.c    **** }
 1148              		.loc 1 612 1 view .LVU368
 1149 0024 7047     		bx	lr
 1150              		.cfi_endproc
 1151              	.LFE152:
 1153              		.section	.text.bin_dec,"ax",%progbits
 1154              		.align	1
 1155              		.global	bin_dec
ARM GAS  /tmp/ccGDZINZ.s 			page 35


 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu fpv5-d16
 1161              	bin_dec:
 1162              	.LVL64:
 1163              	.LFB151:
 583:Src/main.c    **** 
 1164              		.loc 1 583 1 is_stmt 1 view -0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 583:Src/main.c    **** 
 1168              		.loc 1 583 1 is_stmt 0 view .LVU370
 1169 0000 70B5     		push	{r4, r5, r6, lr}
 1170              	.LCFI16:
 1171              		.cfi_def_cfa_offset 16
 1172              		.cfi_offset 4, -16
 1173              		.cfi_offset 5, -12
 1174              		.cfi_offset 6, -8
 1175              		.cfi_offset 14, -4
 1176 0002 2DED028B 		vpush.64	{d8}
 1177              	.LCFI17:
 1178              		.cfi_def_cfa_offset 24
 1179              		.cfi_offset 80, -24
 1180              		.cfi_offset 81, -20
 1181 0006 0646     		mov	r6, r0
 1182 0008 0D46     		mov	r5, r1
 585:Src/main.c    **** 
 1183              		.loc 1 585 3 is_stmt 1 view .LVU371
 1184              	.LVL65:
 587:Src/main.c    ****   {
 1185              		.loc 1 587 3 view .LVU372
 1186              	.LBB12:
 587:Src/main.c    ****   {
 1187              		.loc 1 587 8 view .LVU373
 587:Src/main.c    ****   {
 1188              		.loc 1 587 12 is_stmt 0 view .LVU374
 1189 000a 0024     		movs	r4, #0
 1190              	.LBE12:
 585:Src/main.c    **** 
 1191              		.loc 1 585 7 view .LVU375
 1192 000c 08EE104A 		vmov	s16, r4	@ int
 1193              	.LBB13:
 587:Src/main.c    ****   {
 1194              		.loc 1 587 3 view .LVU376
 1195 0010 00E0     		b	.L39
 1196              	.LVL66:
 1197              	.L40:
 587:Src/main.c    ****   {
 1198              		.loc 1 587 29 is_stmt 1 discriminator 2 view .LVU377
 587:Src/main.c    ****   {
 1199              		.loc 1 587 30 is_stmt 0 discriminator 2 view .LVU378
 1200 0012 0134     		adds	r4, r4, #1
 1201              	.LVL67:
 1202              	.L39:
 587:Src/main.c    ****   {
ARM GAS  /tmp/ccGDZINZ.s 			page 36


 1203              		.loc 1 587 19 is_stmt 1 discriminator 1 view .LVU379
 587:Src/main.c    ****   {
 1204              		.loc 1 587 3 is_stmt 0 discriminator 1 view .LVU380
 1205 0014 AC42     		cmp	r4, r5
 1206 0016 0FDA     		bge	.L43
 589:Src/main.c    ****     {
 1207              		.loc 1 589 5 is_stmt 1 view .LVU381
 589:Src/main.c    ****     {
 1208              		.loc 1 589 12 is_stmt 0 view .LVU382
 1209 0018 56F82430 		ldr	r3, [r6, r4, lsl #2]
 589:Src/main.c    ****     {
 1210              		.loc 1 589 8 view .LVU383
 1211 001c 012B     		cmp	r3, #1
 1212 001e F8D1     		bne	.L40
 591:Src/main.c    ****     }
 1213              		.loc 1 591 7 is_stmt 1 view .LVU384
 591:Src/main.c    ****     }
 1214              		.loc 1 591 28 is_stmt 0 view .LVU385
 1215 0020 291B     		subs	r1, r5, r4
 591:Src/main.c    ****     }
 1216              		.loc 1 591 14 view .LVU386
 1217 0022 0139     		subs	r1, r1, #1
 1218 0024 0220     		movs	r0, #2
 1219 0026 FFF7FEFF 		bl	Power
 1220              	.LVL68:
 591:Src/main.c    ****     }
 1221              		.loc 1 591 11 view .LVU387
 1222 002a B8EEC87B 		vcvt.f64.s32	d7, s16
 1223 002e 37EE007B 		vadd.f64	d7, d7, d0
 1224 0032 BDEEC78B 		vcvt.s32.f64	s16, d7
 1225              	.LVL69:
 591:Src/main.c    ****     }
 1226              		.loc 1 591 11 view .LVU388
 1227 0036 ECE7     		b	.L40
 1228              	.L43:
 591:Src/main.c    ****     }
 1229              		.loc 1 591 11 view .LVU389
 1230              	.LBE13:
 594:Src/main.c    **** }
 1231              		.loc 1 594 3 is_stmt 1 view .LVU390
 595:Src/main.c    **** 
 1232              		.loc 1 595 1 is_stmt 0 view .LVU391
 1233 0038 18EE100A 		vmov	r0, s16	@ int
 1234 003c BDEC028B 		vldm	sp!, {d8}
 1235              	.LCFI18:
 1236              		.cfi_restore 80
 1237              		.cfi_restore 81
 1238              		.cfi_def_cfa_offset 16
 1239              	.LVL70:
 595:Src/main.c    **** 
 1240              		.loc 1 595 1 view .LVU392
 1241 0040 70BD     		pop	{r4, r5, r6, pc}
 595:Src/main.c    **** 
 1242              		.loc 1 595 1 view .LVU393
 1243              		.cfi_endproc
 1244              	.LFE151:
 1246              		.section	.rodata.read_steer_SSI.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccGDZINZ.s 			page 37


 1247              		.align	2
 1248              	.LC1:
 1249 0000 0D0A2064 		.ascii	"\015\012 data_count = %u -- clock_status = %u\000"
 1249      6174615F 
 1249      636F756E 
 1249      74203D20 
 1249      2575202D 
 1250              		.align	2
 1251              	.LC2:
 1252 0028 0D0A2049 		.ascii	"\015\012 Inside the SSI  =>  TIM6 = %d -- TIM7 = %d"
 1252      6E736964 
 1252      65207468 
 1252      65205353 
 1252      4920203D 
 1253 0055 00       		.ascii	"\000"
 1254 0056 0000     		.align	2
 1255              	.LC3:
 1256 0058 0D0A7265 		.ascii	"\015\012resolution = %u \012\000"
 1256      736F6C75 
 1256      74696F6E 
 1256      203D2025 
 1256      75200A00 
 1257              		.section	.text.read_steer_SSI,"ax",%progbits
 1258              		.align	1
 1259              		.global	read_steer_SSI
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv5-d16
 1265              	read_steer_SSI:
 1266              	.LFB149:
 505:Src/main.c    ****   char message[256] = "";
 1267              		.loc 1 505 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 712
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 30B5     		push	{r4, r5, lr}
 1272              	.LCFI19:
 1273              		.cfi_def_cfa_offset 12
 1274              		.cfi_offset 4, -12
 1275              		.cfi_offset 5, -8
 1276              		.cfi_offset 14, -4
 1277 0002 ADF5337D 		sub	sp, sp, #716
 1278              	.LCFI20:
 1279              		.cfi_def_cfa_offset 728
 506:Src/main.c    ****   char message2[256] = "";
 1280              		.loc 1 506 3 view .LVU395
 506:Src/main.c    ****   char message2[256] = "";
 1281              		.loc 1 506 8 is_stmt 0 view .LVU396
 1282 0006 0024     		movs	r4, #0
 1283 0008 7294     		str	r4, [sp, #456]
 1284 000a FC22     		movs	r2, #252
 1285 000c 2146     		mov	r1, r4
 1286 000e 73A8     		add	r0, sp, #460
 1287 0010 FFF7FEFF 		bl	memset
 1288              	.LVL71:
 507:Src/main.c    ****   char mes[200] = "";
ARM GAS  /tmp/ccGDZINZ.s 			page 38


 1289              		.loc 1 507 3 is_stmt 1 view .LVU397
 508:Src/main.c    ****   int val = -1;
 1290              		.loc 1 508 3 view .LVU398
 508:Src/main.c    ****   int val = -1;
 1291              		.loc 1 508 8 is_stmt 0 view .LVU399
 1292 0014 4094     		str	r4, [sp, #256]
 1293 0016 C422     		movs	r2, #196
 1294 0018 2146     		mov	r1, r4
 1295 001a 41A8     		add	r0, sp, #260
 1296 001c FFF7FEFF 		bl	memset
 1297              	.LVL72:
 509:Src/main.c    ****   int val2 = -1;
 1298              		.loc 1 509 3 is_stmt 1 view .LVU400
 510:Src/main.c    **** 
 1299              		.loc 1 510 3 view .LVU401
 512:Src/main.c    ****   // sprintf(message2, "\r\nSpeed1 = %f -- Speed2 = %f", wheel_speed, wheel_speed2);
 1300              		.loc 1 512 3 view .LVU402
 1301 0020 354C     		ldr	r4, .L50
 1302 0022 2369     		ldr	r3, [r4, #16]
 1303 0024 E26C     		ldr	r2, [r4, #76]
 1304 0026 3549     		ldr	r1, .L50+4
 1305 0028 72A8     		add	r0, sp, #456
 1306 002a FFF7FEFF 		bl	sprintf
 1307              	.LVL73:
 514:Src/main.c    ****   // print(&huart3, message2);
 1308              		.loc 1 514 3 view .LVU403
 1309 002e 344D     		ldr	r5, .L50+8
 1310 0030 72A9     		add	r1, sp, #456
 1311 0032 2846     		mov	r0, r5
 1312 0034 FFF7FEFF 		bl	print
 1313              	.LVL74:
 516:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 1314              		.loc 1 516 3 view .LVU404
 516:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 1315              		.loc 1 516 9 is_stmt 0 view .LVU405
 1316 0038 324B     		ldr	r3, .L50+12
 1317 003a 1B68     		ldr	r3, [r3]
 1318 003c 5A6A     		ldr	r2, [r3, #36]
 1319              	.LVL75:
 517:Src/main.c    ****   sprintf(mes, "\r\n Inside the SSI  =>  TIM6 = %d -- TIM7 = %d", val, val2);
 1320              		.loc 1 517 3 is_stmt 1 view .LVU406
 517:Src/main.c    ****   sprintf(mes, "\r\n Inside the SSI  =>  TIM6 = %d -- TIM7 = %d", val, val2);
 1321              		.loc 1 517 10 is_stmt 0 view .LVU407
 1322 003e 324B     		ldr	r3, .L50+16
 1323 0040 1B68     		ldr	r3, [r3]
 1324 0042 5B6A     		ldr	r3, [r3, #36]
 1325              	.LVL76:
 518:Src/main.c    ****   print(&huart3, mes);
 1326              		.loc 1 518 3 is_stmt 1 view .LVU408
 1327 0044 3149     		ldr	r1, .L50+20
 1328 0046 40A8     		add	r0, sp, #256
 1329 0048 FFF7FEFF 		bl	sprintf
 1330              	.LVL77:
 519:Src/main.c    ****   // check if the status of clock given as input for the encoder
 1331              		.loc 1 519 3 view .LVU409
 1332 004c 40A9     		add	r1, sp, #256
 1333 004e 2846     		mov	r0, r5
ARM GAS  /tmp/ccGDZINZ.s 			page 39


 1334 0050 FFF7FEFF 		bl	print
 1335              	.LVL78:
 521:Src/main.c    ****   {
 1336              		.loc 1 521 3 view .LVU410
 521:Src/main.c    ****   {
 1337              		.loc 1 521 12 is_stmt 0 view .LVU411
 1338 0054 E36C     		ldr	r3, [r4, #76]
 521:Src/main.c    ****   {
 1339              		.loc 1 521 31 view .LVU412
 1340 0056 2168     		ldr	r1, [r4]
 521:Src/main.c    ****   {
 1341              		.loc 1 521 6 view .LVU413
 1342 0058 8B42     		cmp	r3, r1
 1343 005a 21DA     		bge	.L45
 524:Src/main.c    ****     {
 1344              		.loc 1 524 5 is_stmt 1 view .LVU414
 524:Src/main.c    ****     {
 1345              		.loc 1 524 14 is_stmt 0 view .LVU415
 1346 005c 2369     		ldr	r3, [r4, #16]
 524:Src/main.c    ****     {
 1347              		.loc 1 524 8 view .LVU416
 1348 005e 93B1     		cbz	r3, .L46
 528:Src/main.c    ****       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_RESET);
 1349              		.loc 1 528 7 is_stmt 1 view .LVU417
 528:Src/main.c    ****       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_RESET);
 1350              		.loc 1 528 26 is_stmt 0 view .LVU418
 1351 0060 0022     		movs	r2, #0
 1352 0062 2261     		str	r2, [r4, #16]
 529:Src/main.c    ****       // In the first falling there is no data, so we start reading only from the second falling
 1353              		.loc 1 529 7 is_stmt 1 view .LVU419
 1354 0064 89B2     		uxth	r1, r1
 1355 0066 A06E     		ldr	r0, [r4, #104]
 1356 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1357              	.LVL79:
 531:Src/main.c    ****       {
 1358              		.loc 1 531 7 view .LVU420
 531:Src/main.c    ****       {
 1359              		.loc 1 531 16 is_stmt 0 view .LVU421
 1360 006c E36C     		ldr	r3, [r4, #76]
 531:Src/main.c    ****       {
 1361              		.loc 1 531 10 view .LVU422
 1362 006e 002B     		cmp	r3, #0
 1363 0070 13DD     		ble	.L44
 533:Src/main.c    ****       }
 1364              		.loc 1 533 9 is_stmt 1 view .LVU423
 533:Src/main.c    ****       }
 1365              		.loc 1 533 40 is_stmt 0 view .LVU424
 1366 0072 B4F87210 		ldrh	r1, [r4, #114]
 1367 0076 E06E     		ldr	r0, [r4, #108]
 1368 0078 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1369              	.LVL80:
 533:Src/main.c    ****       }
 1370              		.loc 1 533 25 view .LVU425
 1371 007c E36C     		ldr	r3, [r4, #76]
 533:Src/main.c    ****       }
 1372              		.loc 1 533 38 view .LVU426
 1373 007e 0633     		adds	r3, r3, #6
ARM GAS  /tmp/ccGDZINZ.s 			page 40


 1374 0080 44F82300 		str	r0, [r4, r3, lsl #2]
 1375 0084 09E0     		b	.L44
 1376              	.L46:
 539:Src/main.c    ****       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 1377              		.loc 1 539 7 is_stmt 1 view .LVU427
 539:Src/main.c    ****       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 1378              		.loc 1 539 26 is_stmt 0 view .LVU428
 1379 0086 1C4C     		ldr	r4, .L50
 1380 0088 0122     		movs	r2, #1
 1381 008a 2261     		str	r2, [r4, #16]
 540:Src/main.c    ****       steer.data_count++;
 1382              		.loc 1 540 7 is_stmt 1 view .LVU429
 1383 008c 89B2     		uxth	r1, r1
 1384 008e A06E     		ldr	r0, [r4, #104]
 1385 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1386              	.LVL81:
 541:Src/main.c    ****     }
 1387              		.loc 1 541 7 view .LVU430
 541:Src/main.c    ****     }
 1388              		.loc 1 541 12 is_stmt 0 view .LVU431
 1389 0094 E36C     		ldr	r3, [r4, #76]
 541:Src/main.c    ****     }
 1390              		.loc 1 541 23 view .LVU432
 1391 0096 0133     		adds	r3, r3, #1
 1392 0098 E364     		str	r3, [r4, #76]
 1393              	.L44:
 570:Src/main.c    **** 
 1394              		.loc 1 570 1 view .LVU433
 1395 009a 0DF5337D 		add	sp, sp, #716
 1396              	.LCFI21:
 1397              		.cfi_remember_state
 1398              		.cfi_def_cfa_offset 12
 1399              		@ sp needed
 1400 009e 30BD     		pop	{r4, r5, pc}
 1401              	.L45:
 1402              	.LCFI22:
 1403              		.cfi_restore_state
 544:Src/main.c    ****   {
 1404              		.loc 1 544 8 is_stmt 1 view .LVU434
 544:Src/main.c    ****   {
 1405              		.loc 1 544 29 is_stmt 0 view .LVU435
 1406 00a0 154B     		ldr	r3, .L50
 1407 00a2 D964     		str	r1, [r3, #76]
 544:Src/main.c    ****   {
 1408              		.loc 1 544 11 view .LVU436
 1409 00a4 21B3     		cbz	r1, .L48
 1410              	.LBB14:
 551:Src/main.c    **** 
 1411              		.loc 1 551 5 is_stmt 1 discriminator 3 view .LVU437
 551:Src/main.c    **** 
 1412              		.loc 1 551 28 is_stmt 0 discriminator 3 view .LVU438
 1413 00a6 03F11805 		add	r5, r3, #24
 1414 00aa 2846     		mov	r0, r5
 1415 00ac FFF7FEFF 		bl	bin_dec
 1416              	.LVL82:
 1417 00b0 0446     		mov	r4, r0
 551:Src/main.c    **** 
ARM GAS  /tmp/ccGDZINZ.s 			page 41


 1418              		.loc 1 551 26 discriminator 3 view .LVU439
 1419 00b2 A864     		str	r0, [r5, #72]
 553:Src/main.c    ****     sprintf(resolution_mes, "\r\nresolution = %u \n", steer.converted_data);
 1420              		.loc 1 553 5 is_stmt 1 discriminator 3 view .LVU440
 553:Src/main.c    ****     sprintf(resolution_mes, "\r\nresolution = %u \n", steer.converted_data);
 1421              		.loc 1 553 10 is_stmt 0 discriminator 3 view .LVU441
 1422 00b4 0025     		movs	r5, #0
 1423 00b6 0095     		str	r5, [sp]
 1424 00b8 FC22     		movs	r2, #252
 1425 00ba 2946     		mov	r1, r5
 1426 00bc 01A8     		add	r0, sp, #4
 1427 00be FFF7FEFF 		bl	memset
 1428              	.LVL83:
 554:Src/main.c    ****     print(&huart3, resolution_mes);
 1429              		.loc 1 554 5 is_stmt 1 discriminator 3 view .LVU442
 1430 00c2 2246     		mov	r2, r4
 1431 00c4 1249     		ldr	r1, .L50+24
 1432 00c6 6846     		mov	r0, sp
 1433 00c8 FFF7FEFF 		bl	sprintf
 1434              	.LVL84:
 555:Src/main.c    **** 
 1435              		.loc 1 555 5 discriminator 3 view .LVU443
 1436 00cc 6946     		mov	r1, sp
 1437 00ce 0C48     		ldr	r0, .L50+8
 1438 00d0 FFF7FEFF 		bl	print
 1439              	.LVL85:
 558:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 1440              		.loc 1 558 5 discriminator 3 view .LVU444
 1441 00d4 0B4C     		ldr	r4, .L50+12
 1442 00d6 2046     		mov	r0, r4
 1443 00d8 FFF7FEFF 		bl	HAL_TIM_Base_Stop
 1444              	.LVL86:
 560:Src/main.c    **** 
 1445              		.loc 1 560 5 discriminator 3 view .LVU445
 1446 00dc 2368     		ldr	r3, [r4]
 1447 00de 5D62     		str	r5, [r3, #36]
 562:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim7);
 1448              		.loc 1 562 5 discriminator 3 view .LVU446
 1449 00e0 094C     		ldr	r4, .L50+16
 1450 00e2 2046     		mov	r0, r4
 1451 00e4 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1452              	.LVL87:
 563:Src/main.c    ****   }
 1453              		.loc 1 563 5 discriminator 3 view .LVU447
 1454 00e8 2046     		mov	r0, r4
 1455 00ea FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1456              	.LVL88:
 1457              	.LBE14:
 1458 00ee D4E7     		b	.L44
 1459              	.L48:
 568:Src/main.c    ****   }
 1460              		.loc 1 568 5 view .LVU448
 1461 00f0 0148     		ldr	r0, .L50
 1462 00f2 FFF7FEFF 		bl	check_steer_error
 1463              	.LVL89:
 570:Src/main.c    **** 
 1464              		.loc 1 570 1 is_stmt 0 view .LVU449
ARM GAS  /tmp/ccGDZINZ.s 			page 42


 1465 00f6 D0E7     		b	.L44
 1466              	.L51:
 1467              		.align	2
 1468              	.L50:
 1469 00f8 00000000 		.word	steer
 1470 00fc 00000000 		.word	.LC1
 1471 0100 00000000 		.word	huart3
 1472 0104 00000000 		.word	htim6
 1473 0108 00000000 		.word	htim7
 1474 010c 28000000 		.word	.LC2
 1475 0110 58000000 		.word	.LC3
 1476              		.cfi_endproc
 1477              	.LFE149:
 1479              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 1480              		.align	2
 1481              	.LC4:
 1482 0000 0D0A2054 		.ascii	"\015\012 TIM6 = %d -- TIM7 = %d\000"
 1482      494D3620 
 1482      3D202564 
 1482      202D2D20 
 1482      54494D37 
 1483              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1484              		.align	1
 1485              		.global	HAL_TIM_PeriodElapsedCallback
 1486              		.syntax unified
 1487              		.thumb
 1488              		.thumb_func
 1489              		.fpu fpv5-d16
 1491              	HAL_TIM_PeriodElapsedCallback:
 1492              	.LVL90:
 1493              	.LFB148:
 477:Src/main.c    ****   char mes[200] = "";
 1494              		.loc 1 477 1 is_stmt 1 view -0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 200
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 477:Src/main.c    ****   char mes[200] = "";
 1498              		.loc 1 477 1 is_stmt 0 view .LVU451
 1499 0000 30B5     		push	{r4, r5, lr}
 1500              	.LCFI23:
 1501              		.cfi_def_cfa_offset 12
 1502              		.cfi_offset 4, -12
 1503              		.cfi_offset 5, -8
 1504              		.cfi_offset 14, -4
 1505 0002 B3B0     		sub	sp, sp, #204
 1506              	.LCFI24:
 1507              		.cfi_def_cfa_offset 216
 1508 0004 0446     		mov	r4, r0
 478:Src/main.c    ****   int val = -1;
 1509              		.loc 1 478 3 is_stmt 1 view .LVU452
 478:Src/main.c    ****   int val = -1;
 1510              		.loc 1 478 8 is_stmt 0 view .LVU453
 1511 0006 0021     		movs	r1, #0
 1512 0008 0091     		str	r1, [sp]
 1513 000a C422     		movs	r2, #196
 1514 000c 01A8     		add	r0, sp, #4
 1515              	.LVL91:
ARM GAS  /tmp/ccGDZINZ.s 			page 43


 478:Src/main.c    ****   int val = -1;
 1516              		.loc 1 478 8 view .LVU454
 1517 000e FFF7FEFF 		bl	memset
 1518              	.LVL92:
 479:Src/main.c    ****   int val2 = -1;
 1519              		.loc 1 479 3 is_stmt 1 view .LVU455
 480:Src/main.c    **** 
 1520              		.loc 1 480 3 view .LVU456
 482:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 1521              		.loc 1 482 3 view .LVU457
 482:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 1522              		.loc 1 482 9 is_stmt 0 view .LVU458
 1523 0012 134B     		ldr	r3, .L58
 1524 0014 1B68     		ldr	r3, [r3]
 1525 0016 5A6A     		ldr	r2, [r3, #36]
 1526              	.LVL93:
 483:Src/main.c    ****   sprintf(mes, "\r\n TIM6 = %d -- TIM7 = %d", val, val2);
 1527              		.loc 1 483 3 is_stmt 1 view .LVU459
 483:Src/main.c    ****   sprintf(mes, "\r\n TIM6 = %d -- TIM7 = %d", val, val2);
 1528              		.loc 1 483 10 is_stmt 0 view .LVU460
 1529 0018 124D     		ldr	r5, .L58+4
 1530 001a 2B68     		ldr	r3, [r5]
 1531 001c 5B6A     		ldr	r3, [r3, #36]
 1532              	.LVL94:
 484:Src/main.c    ****   print(&huart3, mes);
 1533              		.loc 1 484 3 is_stmt 1 view .LVU461
 1534 001e 1249     		ldr	r1, .L58+8
 1535 0020 6846     		mov	r0, sp
 1536 0022 FFF7FEFF 		bl	sprintf
 1537              	.LVL95:
 485:Src/main.c    ****   /**
 1538              		.loc 1 485 3 view .LVU462
 1539 0026 6946     		mov	r1, sp
 1540 0028 1048     		ldr	r0, .L58+12
 1541 002a FFF7FEFF 		bl	print
 1542              	.LVL96:
 489:Src/main.c    ****   {
 1543              		.loc 1 489 3 view .LVU463
 489:Src/main.c    ****   {
 1544              		.loc 1 489 6 is_stmt 0 view .LVU464
 1545 002e AC42     		cmp	r4, r5
 1546 0030 04D0     		beq	.L56
 1547              	.L53:
 498:Src/main.c    ****   {
 1548              		.loc 1 498 3 is_stmt 1 view .LVU465
 498:Src/main.c    ****   {
 1549              		.loc 1 498 6 is_stmt 0 view .LVU466
 1550 0032 0B4B     		ldr	r3, .L58
 1551 0034 9C42     		cmp	r4, r3
 1552 0036 0FD0     		beq	.L57
 1553              	.L52:
 502:Src/main.c    **** 
 1554              		.loc 1 502 1 view .LVU467
 1555 0038 33B0     		add	sp, sp, #204
 1556              	.LCFI25:
 1557              		.cfi_remember_state
 1558              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccGDZINZ.s 			page 44


 1559              		@ sp needed
 1560 003a 30BD     		pop	{r4, r5, pc}
 1561              	.LVL97:
 1562              	.L56:
 1563              	.LCFI26:
 1564              		.cfi_restore_state
 491:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 1565              		.loc 1 491 5 is_stmt 1 view .LVU468
 1566 003c 2846     		mov	r0, r5
 1567 003e FFF7FEFF 		bl	HAL_TIM_Base_Stop
 1568              	.LVL98:
 493:Src/main.c    ****     HAL_TIM_Base_Start(&htim6);
 1569              		.loc 1 493 5 view .LVU469
 1570 0042 2B68     		ldr	r3, [r5]
 1571 0044 0022     		movs	r2, #0
 1572 0046 5A62     		str	r2, [r3, #36]
 494:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim6);
 1573              		.loc 1 494 5 view .LVU470
 1574 0048 054D     		ldr	r5, .L58
 1575 004a 2846     		mov	r0, r5
 1576 004c FFF7FEFF 		bl	HAL_TIM_Base_Start
 1577              	.LVL99:
 495:Src/main.c    ****   }
 1578              		.loc 1 495 5 view .LVU471
 1579 0050 2846     		mov	r0, r5
 1580 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1581              	.LVL100:
 1582 0056 ECE7     		b	.L53
 1583              	.L57:
 500:Src/main.c    ****   }
 1584              		.loc 1 500 5 view .LVU472
 1585 0058 FFF7FEFF 		bl	read_steer_SSI
 1586              	.LVL101:
 502:Src/main.c    **** 
 1587              		.loc 1 502 1 is_stmt 0 view .LVU473
 1588 005c ECE7     		b	.L52
 1589              	.L59:
 1590 005e 00BF     		.align	2
 1591              	.L58:
 1592 0060 00000000 		.word	htim6
 1593 0064 00000000 		.word	htim7
 1594 0068 00000000 		.word	.LC4
 1595 006c 00000000 		.word	huart3
 1596              		.cfi_endproc
 1597              	.LFE148:
 1599              		.section	.text.Error_Handler,"ax",%progbits
 1600              		.align	1
 1601              		.global	Error_Handler
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1605              		.fpu fpv5-d16
 1607              	Error_Handler:
 1608              	.LFB153:
 613:Src/main.c    **** 
 614:Src/main.c    **** /* USER CODE END 4 */
 615:Src/main.c    **** 
ARM GAS  /tmp/ccGDZINZ.s 			page 45


 616:Src/main.c    **** /**
 617:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 618:Src/main.c    ****   * @retval None
 619:Src/main.c    ****   */
 620:Src/main.c    **** void Error_Handler(void)
 621:Src/main.c    **** {
 1609              		.loc 1 621 1 is_stmt 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              		@ link register save eliminated.
 622:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 623:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 624:Src/main.c    **** 
 625:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 626:Src/main.c    **** }
 1614              		.loc 1 626 1 view .LVU475
 1615 0000 7047     		bx	lr
 1616              		.cfi_endproc
 1617              	.LFE153:
 1619              		.global	hmessage
 1620              		.comm	steer,116,4
 1621              		.comm	huart3,128,4
 1622              		.comm	htim7,64,4
 1623              		.comm	htim6,64,4
 1624              		.section	.bss.hmessage,"aw",%nobits
 1625              		.align	2
 1628              	hmessage:
 1629 0000 00000000 		.space	256
 1629      00000000 
 1629      00000000 
 1629      00000000 
 1629      00000000 
 1630              		.text
 1631              	.Letext0:
 1632              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1633              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1634              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1635              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1636              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1637              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1638              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1639              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1640              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1641              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1642              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1643              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1644              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1645              		.file 15 "<built-in>"
 1646              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1647              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
ARM GAS  /tmp/ccGDZINZ.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccGDZINZ.s:17     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccGDZINZ.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccGDZINZ.s:400    .text.MX_GPIO_Init:00000000000001b8 $d
     /tmp/ccGDZINZ.s:411    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccGDZINZ.s:417    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccGDZINZ.s:484    .text.MX_TIM6_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccGDZINZ.s:490    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccGDZINZ.s:496    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccGDZINZ.s:562    .text.MX_TIM7_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim7
     /tmp/ccGDZINZ.s:568    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccGDZINZ.s:574    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccGDZINZ.s:629    .text.MX_USART3_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart3
     /tmp/ccGDZINZ.s:635    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccGDZINZ.s:642    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccGDZINZ.s:797    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccGDZINZ.s:803    .text.main:0000000000000000 $t
     /tmp/ccGDZINZ.s:810    .text.main:0000000000000000 main
     /tmp/ccGDZINZ.s:979    .text.main:00000000000000e0 $d
                            *COM*:0000000000000074 steer
     /tmp/ccGDZINZ.s:991    .text.print:0000000000000000 $t
     /tmp/ccGDZINZ.s:998    .text.print:0000000000000000 print
     /tmp/ccGDZINZ.s:1036   .rodata.check_steer_error.str1.4:0000000000000000 $d
     /tmp/ccGDZINZ.s:1040   .text.check_steer_error:0000000000000000 $t
     /tmp/ccGDZINZ.s:1047   .text.check_steer_error:0000000000000000 check_steer_error
     /tmp/ccGDZINZ.s:1087   .text.check_steer_error:0000000000000020 $d
     /tmp/ccGDZINZ.s:1093   .text.Power:0000000000000000 $t
     /tmp/ccGDZINZ.s:1100   .text.Power:0000000000000000 Power
     /tmp/ccGDZINZ.s:1154   .text.bin_dec:0000000000000000 $t
     /tmp/ccGDZINZ.s:1161   .text.bin_dec:0000000000000000 bin_dec
     /tmp/ccGDZINZ.s:1247   .rodata.read_steer_SSI.str1.4:0000000000000000 $d
     /tmp/ccGDZINZ.s:1258   .text.read_steer_SSI:0000000000000000 $t
     /tmp/ccGDZINZ.s:1265   .text.read_steer_SSI:0000000000000000 read_steer_SSI
     /tmp/ccGDZINZ.s:1469   .text.read_steer_SSI:00000000000000f8 $d
     /tmp/ccGDZINZ.s:1480   .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/ccGDZINZ.s:1484   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccGDZINZ.s:1491   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccGDZINZ.s:1592   .text.HAL_TIM_PeriodElapsedCallback:0000000000000060 $d
     /tmp/ccGDZINZ.s:1600   .text.Error_Handler:0000000000000000 $t
     /tmp/ccGDZINZ.s:1607   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccGDZINZ.s:1628   .bss.hmessage:0000000000000000 hmessage
     /tmp/ccGDZINZ.s:1625   .bss.hmessage:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
ARM GAS  /tmp/ccGDZINZ.s 			page 47


HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_DBGMCU_EnableDBGStandbyMode
HAL_DBGMCU_EnableDBGStopMode
HAL_GPIO_TogglePin
HAL_TIM_Base_Start
HAL_TIM_Base_Start_IT
HAL_Delay
strlen
HAL_UART_Transmit
HAL_GPIO_ReadPin
sprintf
HAL_TIM_Base_Stop
