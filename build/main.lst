ARM GAS  /tmp/ccs4PBQh.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_GPIO_Init:
  25              	.LFB146:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** typedef struct
  32:Src/main.c    **** {
ARM GAS  /tmp/ccs4PBQh.s 			page 2


  33:Src/main.c    ****   int data_size;         // Bits sent from the sensor. Exclude the error flag
  34:Src/main.c    ****   int error_flag;        // Return value if the encoder has errors
  35:Src/main.c    ****   int error_data_status; // Here we save the actual signal from the encoder
  36:Src/main.c    ****   int clock_period;      // Period between each data frame readed in milliseconds
  37:Src/main.c    ****   int clock_status;      // Here the status of the clock is saved
  38:Src/main.c    ****   int data_freq_Hz;      // Reading speed of the data frame
  39:Src/main.c    ****   int data[12];          // Binary value of the data readed from the steer encoder
  40:Src/main.c    ****   int steer_zero;        // In this variable will be saved the value for the position zero
  41:Src/main.c    ****   int data_count;        // Counter used to check when the buffer is full
  42:Src/main.c    **** 
  43:Src/main.c    ****   float max_delta_angle;
  44:Src/main.c    ****   float frequency;
  45:Src/main.c    ****   int frequency_timer_Hz;
  46:Src/main.c    **** 
  47:Src/main.c    ****   int angle;          // First angle calculated
  48:Src/main.c    ****   int converted_data; // Angle data
  49:Src/main.c    **** 
  50:Src/main.c    ****   TIM_HandleTypeDef *TimerInstance; // Instance to the timer used to generate the clock to read the
  51:Src/main.c    **** 
  52:Src/main.c    ****   GPIO_TypeDef *ClockPinName;
  53:Src/main.c    ****   GPIO_TypeDef *DataPinName;
  54:Src/main.c    ****   uint16_t ClockPinNumber;
  55:Src/main.c    ****   uint16_t DataPinNumber;
  56:Src/main.c    **** 
  57:Src/main.c    **** } steer_enc;
  58:Src/main.c    **** /* USER CODE END PTD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PD */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PD */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN PM */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PM */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    **** TIM_HandleTypeDef htim6;
  73:Src/main.c    **** TIM_HandleTypeDef htim7;
  74:Src/main.c    **** 
  75:Src/main.c    **** UART_HandleTypeDef huart3;
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE BEGIN PV */
  78:Src/main.c    **** steer_enc steer;
  79:Src/main.c    **** 
  80:Src/main.c    **** char hmessage[256] = "";
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END PV */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  85:Src/main.c    **** void SystemClock_Config(void);
  86:Src/main.c    **** static void MX_GPIO_Init(void);
  87:Src/main.c    **** static void MX_TIM6_Init(void);
  88:Src/main.c    **** static void MX_TIM7_Init(void);
  89:Src/main.c    **** static void MX_USART3_UART_Init(void);
ARM GAS  /tmp/ccs4PBQh.s 			page 3


  90:Src/main.c    **** /* USER CODE BEGIN PFP */
  91:Src/main.c    **** void print(UART_HandleTypeDef *huart, char *text);
  92:Src/main.c    **** void read_steer_SSI(steer_enc *steer);
  93:Src/main.c    **** void check_steer_error(steer_enc *steer);
  94:Src/main.c    **** int bin_dec(int *bin, int size);
  95:Src/main.c    **** double Power(int base, int expn);
  96:Src/main.c    **** /* USER CODE END PFP */
  97:Src/main.c    **** 
  98:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  99:Src/main.c    **** /* USER CODE BEGIN 0 */
 100:Src/main.c    **** 
 101:Src/main.c    **** /* USER CODE END 0 */
 102:Src/main.c    **** 
 103:Src/main.c    **** /**
 104:Src/main.c    ****   * @brief  The application entry point.
 105:Src/main.c    ****   * @retval int
 106:Src/main.c    ****   */
 107:Src/main.c    **** int main(void)
 108:Src/main.c    **** {
 109:Src/main.c    ****   /* USER CODE BEGIN 1 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END 1 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Src/main.c    ****   HAL_Init();
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE BEGIN Init */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END Init */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Configure the system clock */
 123:Src/main.c    ****   SystemClock_Config();
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE END SysInit */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Initialize all configured peripherals */
 130:Src/main.c    ****   MX_GPIO_Init();
 131:Src/main.c    ****   MX_TIM6_Init();
 132:Src/main.c    ****   MX_TIM7_Init();
 133:Src/main.c    ****   MX_USART3_UART_Init();
 134:Src/main.c    ****   /* USER CODE BEGIN 2 */
 135:Src/main.c    ****   steer.data_size = 12;
 136:Src/main.c    ****   steer.clock_period = 500;
 137:Src/main.c    ****   steer.data_freq_Hz = 1500000;
 138:Src/main.c    ****   steer.steer_zero = 0; // TO BE DEFINED
 139:Src/main.c    **** 
 140:Src/main.c    ****   steer.ClockPinName = GPIOC;
 141:Src/main.c    ****   steer.ClockPinNumber = GPIO_PIN_12;
 142:Src/main.c    ****   steer.DataPinName = GPIOD;
 143:Src/main.c    ****   steer.DataPinNumber = GPIO_PIN_2;
 144:Src/main.c    ****   HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 145:Src/main.c    ****   steer.clock_status = 1;
 146:Src/main.c    **** 
ARM GAS  /tmp/ccs4PBQh.s 			page 4


 147:Src/main.c    ****   steer.TimerInstance = &htim7;
 148:Src/main.c    **** 
 149:Src/main.c    ****   HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 150:Src/main.c    **** 
 151:Src/main.c    ****   //Enabling the Timer that gives the time between each reading
 152:Src/main.c    ****   HAL_TIM_Base_Start(&htim7);
 153:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* USER CODE END 2 */
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* Infinite loop */
 158:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 159:Src/main.c    ****   while (1)
 160:Src/main.c    ****   {
 161:Src/main.c    ****     /* USER CODE END WHILE */
 162:Src/main.c    ****     HAL_Delay(200);
 163:Src/main.c    **** 
 164:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 165:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 166:Src/main.c    **** 
 167:Src/main.c    ****     HAL_Delay(200);
 168:Src/main.c    **** 
 169:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14);
 170:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 171:Src/main.c    **** 
 172:Src/main.c    ****     HAL_Delay(200);
 173:Src/main.c    **** 
 174:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_14);
 175:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 176:Src/main.c    **** 
 177:Src/main.c    ****     HAL_Delay(200);
 178:Src/main.c    **** 
 179:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 180:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 181:Src/main.c    **** 
 182:Src/main.c    ****     // sprintf(hmessage, "All working");
 183:Src/main.c    ****     // print(&huart3, hmessage);
 184:Src/main.c    ****     /* USER CODE BEGIN 3 */
 185:Src/main.c    ****   }
 186:Src/main.c    ****   /* USER CODE END 3 */
 187:Src/main.c    **** }
 188:Src/main.c    **** 
 189:Src/main.c    **** /**
 190:Src/main.c    ****   * @brief System Clock Configuration
 191:Src/main.c    ****   * @retval None
 192:Src/main.c    ****   */
 193:Src/main.c    **** void SystemClock_Config(void)
 194:Src/main.c    **** {
 195:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 196:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 197:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 198:Src/main.c    **** 
 199:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 200:Src/main.c    ****   */
 201:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 202:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 203:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccs4PBQh.s 			page 5


 204:Src/main.c    ****   */
 205:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 206:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 207:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 213:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 214:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 215:Src/main.c    ****   {
 216:Src/main.c    ****     Error_Handler();
 217:Src/main.c    ****   }
 218:Src/main.c    ****   /** Activate the Over-Drive mode 
 219:Src/main.c    ****   */
 220:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 221:Src/main.c    ****   {
 222:Src/main.c    ****     Error_Handler();
 223:Src/main.c    ****   }
 224:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 225:Src/main.c    ****   */
 226:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 227:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 228:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 229:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 230:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 231:Src/main.c    **** 
 232:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     Error_Handler();
 235:Src/main.c    ****   }
 236:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 237:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 238:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     Error_Handler();
 241:Src/main.c    ****   }
 242:Src/main.c    **** }
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief TIM6 Initialization Function
 246:Src/main.c    ****   * @param None
 247:Src/main.c    ****   * @retval None
 248:Src/main.c    ****   */
 249:Src/main.c    **** static void MX_TIM6_Init(void)
 250:Src/main.c    **** {
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 255:Src/main.c    **** 
 256:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 257:Src/main.c    **** 
 258:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 259:Src/main.c    **** 
 260:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
ARM GAS  /tmp/ccs4PBQh.s 			page 6


 261:Src/main.c    ****   htim6.Instance = TIM6;
 262:Src/main.c    ****   htim6.Init.Prescaler = 215;
 263:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 264:Src/main.c    ****   htim6.Init.Period = 3;
 265:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 266:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 267:Src/main.c    ****   {
 268:Src/main.c    ****     Error_Handler();
 269:Src/main.c    ****   }
 270:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 271:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 272:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 273:Src/main.c    ****   {
 274:Src/main.c    ****     Error_Handler();
 275:Src/main.c    ****   }
 276:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 279:Src/main.c    **** }
 280:Src/main.c    **** 
 281:Src/main.c    **** /**
 282:Src/main.c    ****   * @brief TIM7 Initialization Function
 283:Src/main.c    ****   * @param None
 284:Src/main.c    ****   * @retval None
 285:Src/main.c    ****   */
 286:Src/main.c    **** static void MX_TIM7_Init(void)
 287:Src/main.c    **** {
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 292:Src/main.c    **** 
 293:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 294:Src/main.c    **** 
 295:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
 298:Src/main.c    ****   htim7.Instance = TIM7;
 299:Src/main.c    ****   htim7.Init.Prescaler = 59999;
 300:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 301:Src/main.c    ****   htim7.Init.Period = 1799;
 302:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 303:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 304:Src/main.c    ****   {
 305:Src/main.c    ****     Error_Handler();
 306:Src/main.c    ****   }
 307:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 308:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 309:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 310:Src/main.c    ****   {
 311:Src/main.c    ****     Error_Handler();
 312:Src/main.c    ****   }
 313:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 316:Src/main.c    **** }
 317:Src/main.c    **** 
ARM GAS  /tmp/ccs4PBQh.s 			page 7


 318:Src/main.c    **** /**
 319:Src/main.c    ****   * @brief USART3 Initialization Function
 320:Src/main.c    ****   * @param None
 321:Src/main.c    ****   * @retval None
 322:Src/main.c    ****   */
 323:Src/main.c    **** static void MX_USART3_UART_Init(void)
 324:Src/main.c    **** {
 325:Src/main.c    **** 
 326:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 333:Src/main.c    ****   huart3.Instance = USART3;
 334:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 335:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 336:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 337:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 338:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 339:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 340:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 341:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 342:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 343:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 344:Src/main.c    ****   {
 345:Src/main.c    ****     Error_Handler();
 346:Src/main.c    ****   }
 347:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 350:Src/main.c    **** }
 351:Src/main.c    **** 
 352:Src/main.c    **** /**
 353:Src/main.c    ****   * @brief GPIO Initialization Function
 354:Src/main.c    ****   * @param None
 355:Src/main.c    ****   * @retval None
 356:Src/main.c    ****   */
 357:Src/main.c    **** static void MX_GPIO_Init(void)
 358:Src/main.c    **** {
  27              		.loc 1 358 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
ARM GAS  /tmp/ccs4PBQh.s 			page 8


  43 0004 8DB0     		sub	sp, sp, #52
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 88
 359:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 359 3 view .LVU1
  47              		.loc 1 359 20 is_stmt 0 view .LVU2
  48 0006 0024     		movs	r4, #0
  49 0008 0794     		str	r4, [sp, #28]
  50 000a 0894     		str	r4, [sp, #32]
  51 000c 0994     		str	r4, [sp, #36]
  52 000e 0A94     		str	r4, [sp, #40]
  53 0010 0B94     		str	r4, [sp, #44]
 360:Src/main.c    **** 
 361:Src/main.c    ****   /* GPIO Ports Clock Enable */
 362:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 362 3 is_stmt 1 view .LVU3
  55              	.LBB2:
  56              		.loc 1 362 3 view .LVU4
  57              		.loc 1 362 3 view .LVU5
  58 0012 694B     		ldr	r3, .L3
  59 0014 1A6B     		ldr	r2, [r3, #48]
  60 0016 42F00402 		orr	r2, r2, #4
  61 001a 1A63     		str	r2, [r3, #48]
  62              		.loc 1 362 3 view .LVU6
  63 001c 1A6B     		ldr	r2, [r3, #48]
  64 001e 02F00402 		and	r2, r2, #4
  65 0022 0192     		str	r2, [sp, #4]
  66              		.loc 1 362 3 view .LVU7
  67 0024 019A     		ldr	r2, [sp, #4]
  68              	.LBE2:
  69              		.loc 1 362 3 view .LVU8
 363:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 363 3 view .LVU9
  71              	.LBB3:
  72              		.loc 1 363 3 view .LVU10
  73              		.loc 1 363 3 view .LVU11
  74 0026 1A6B     		ldr	r2, [r3, #48]
  75 0028 42F08002 		orr	r2, r2, #128
  76 002c 1A63     		str	r2, [r3, #48]
  77              		.loc 1 363 3 view .LVU12
  78 002e 1A6B     		ldr	r2, [r3, #48]
  79 0030 02F08002 		and	r2, r2, #128
  80 0034 0292     		str	r2, [sp, #8]
  81              		.loc 1 363 3 view .LVU13
  82 0036 029A     		ldr	r2, [sp, #8]
  83              	.LBE3:
  84              		.loc 1 363 3 view .LVU14
 364:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  85              		.loc 1 364 3 view .LVU15
  86              	.LBB4:
  87              		.loc 1 364 3 view .LVU16
  88              		.loc 1 364 3 view .LVU17
  89 0038 1A6B     		ldr	r2, [r3, #48]
  90 003a 42F00102 		orr	r2, r2, #1
  91 003e 1A63     		str	r2, [r3, #48]
  92              		.loc 1 364 3 view .LVU18
  93 0040 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccs4PBQh.s 			page 9


  94 0042 02F00102 		and	r2, r2, #1
  95 0046 0392     		str	r2, [sp, #12]
  96              		.loc 1 364 3 view .LVU19
  97 0048 039A     		ldr	r2, [sp, #12]
  98              	.LBE4:
  99              		.loc 1 364 3 view .LVU20
 365:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 100              		.loc 1 365 3 view .LVU21
 101              	.LBB5:
 102              		.loc 1 365 3 view .LVU22
 103              		.loc 1 365 3 view .LVU23
 104 004a 1A6B     		ldr	r2, [r3, #48]
 105 004c 42F00202 		orr	r2, r2, #2
 106 0050 1A63     		str	r2, [r3, #48]
 107              		.loc 1 365 3 view .LVU24
 108 0052 1A6B     		ldr	r2, [r3, #48]
 109 0054 02F00202 		and	r2, r2, #2
 110 0058 0492     		str	r2, [sp, #16]
 111              		.loc 1 365 3 view .LVU25
 112 005a 049A     		ldr	r2, [sp, #16]
 113              	.LBE5:
 114              		.loc 1 365 3 view .LVU26
 366:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 115              		.loc 1 366 3 view .LVU27
 116              	.LBB6:
 117              		.loc 1 366 3 view .LVU28
 118              		.loc 1 366 3 view .LVU29
 119 005c 1A6B     		ldr	r2, [r3, #48]
 120 005e 42F00802 		orr	r2, r2, #8
 121 0062 1A63     		str	r2, [r3, #48]
 122              		.loc 1 366 3 view .LVU30
 123 0064 1A6B     		ldr	r2, [r3, #48]
 124 0066 02F00802 		and	r2, r2, #8
 125 006a 0592     		str	r2, [sp, #20]
 126              		.loc 1 366 3 view .LVU31
 127 006c 059A     		ldr	r2, [sp, #20]
 128              	.LBE6:
 129              		.loc 1 366 3 view .LVU32
 367:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 130              		.loc 1 367 3 view .LVU33
 131              	.LBB7:
 132              		.loc 1 367 3 view .LVU34
 133              		.loc 1 367 3 view .LVU35
 134 006e 1A6B     		ldr	r2, [r3, #48]
 135 0070 42F04002 		orr	r2, r2, #64
 136 0074 1A63     		str	r2, [r3, #48]
 137              		.loc 1 367 3 view .LVU36
 138 0076 1B6B     		ldr	r3, [r3, #48]
 139 0078 03F04003 		and	r3, r3, #64
 140 007c 0693     		str	r3, [sp, #24]
 141              		.loc 1 367 3 view .LVU37
 142 007e 069B     		ldr	r3, [sp, #24]
 143              	.LBE7:
 144              		.loc 1 367 3 view .LVU38
 368:Src/main.c    **** 
 369:Src/main.c    ****   /*Configure GPIO pin Output Level */
 370:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin | LD3_Pin | LD2_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/ccs4PBQh.s 			page 10


 145              		.loc 1 370 3 view .LVU39
 146 0080 DFF848B1 		ldr	fp, .L3+20
 147 0084 2246     		mov	r2, r4
 148 0086 44F28101 		movw	r1, #16513
 149 008a 5846     		mov	r0, fp
 150 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL0:
 371:Src/main.c    **** 
 372:Src/main.c    ****   /*Configure GPIO pin Output Level */
 373:Src/main.c    ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 152              		.loc 1 373 3 view .LVU40
 153 0090 4A4F     		ldr	r7, .L3+4
 154 0092 2246     		mov	r2, r4
 155 0094 4021     		movs	r1, #64
 156 0096 3846     		mov	r0, r7
 157 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL1:
 374:Src/main.c    **** 
 375:Src/main.c    ****   /*Configure GPIO pin Output Level */
 376:Src/main.c    ****   HAL_GPIO_WritePin(Clock_GPIO_Port, Clock_Pin, GPIO_PIN_RESET);
 159              		.loc 1 376 3 view .LVU41
 160 009c DFF83091 		ldr	r9, .L3+24
 161 00a0 2246     		mov	r2, r4
 162 00a2 4FF48051 		mov	r1, #4096
 163 00a6 4846     		mov	r0, r9
 164 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL2:
 377:Src/main.c    **** 
 378:Src/main.c    ****   /*Configure GPIO pin : USER_Btn_Pin */
 379:Src/main.c    ****   GPIO_InitStruct.Pin = USER_Btn_Pin;
 166              		.loc 1 379 3 view .LVU42
 167              		.loc 1 379 23 is_stmt 0 view .LVU43
 168 00ac 4FF40053 		mov	r3, #8192
 169 00b0 0793     		str	r3, [sp, #28]
 380:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 170              		.loc 1 380 3 is_stmt 1 view .LVU44
 171              		.loc 1 380 24 is_stmt 0 view .LVU45
 172 00b2 434B     		ldr	r3, .L3+8
 173 00b4 0893     		str	r3, [sp, #32]
 381:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 381 3 is_stmt 1 view .LVU46
 175              		.loc 1 381 24 is_stmt 0 view .LVU47
 176 00b6 0994     		str	r4, [sp, #36]
 382:Src/main.c    ****   HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 177              		.loc 1 382 3 is_stmt 1 view .LVU48
 178 00b8 07A9     		add	r1, sp, #28
 179 00ba 4846     		mov	r0, r9
 180 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL3:
 383:Src/main.c    **** 
 384:Src/main.c    ****   /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
 385:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_MDC_Pin | RMII_RXD0_Pin | RMII_RXD1_Pin;
 182              		.loc 1 385 3 view .LVU49
 183              		.loc 1 385 23 is_stmt 0 view .LVU50
 184 00c0 3223     		movs	r3, #50
 185 00c2 0793     		str	r3, [sp, #28]
 386:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccs4PBQh.s 			page 11


 186              		.loc 1 386 3 is_stmt 1 view .LVU51
 187              		.loc 1 386 24 is_stmt 0 view .LVU52
 188 00c4 0226     		movs	r6, #2
 189 00c6 0896     		str	r6, [sp, #32]
 387:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 387 3 is_stmt 1 view .LVU53
 191              		.loc 1 387 24 is_stmt 0 view .LVU54
 192 00c8 0994     		str	r4, [sp, #36]
 388:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 193              		.loc 1 388 3 is_stmt 1 view .LVU55
 194              		.loc 1 388 25 is_stmt 0 view .LVU56
 195 00ca 0325     		movs	r5, #3
 196 00cc 0A95     		str	r5, [sp, #40]
 389:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 197              		.loc 1 389 3 is_stmt 1 view .LVU57
 198              		.loc 1 389 29 is_stmt 0 view .LVU58
 199 00ce 4FF00B08 		mov	r8, #11
 200 00d2 CDF82C80 		str	r8, [sp, #44]
 390:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 201              		.loc 1 390 3 is_stmt 1 view .LVU59
 202 00d6 07A9     		add	r1, sp, #28
 203 00d8 4846     		mov	r0, r9
 204 00da FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL4:
 391:Src/main.c    **** 
 392:Src/main.c    ****   /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
 393:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_REF_CLK_Pin | RMII_MDIO_Pin | RMII_CRS_DV_Pin;
 206              		.loc 1 393 3 view .LVU60
 207              		.loc 1 393 23 is_stmt 0 view .LVU61
 208 00de 8623     		movs	r3, #134
 209 00e0 0793     		str	r3, [sp, #28]
 394:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 210              		.loc 1 394 3 is_stmt 1 view .LVU62
 211              		.loc 1 394 24 is_stmt 0 view .LVU63
 212 00e2 0896     		str	r6, [sp, #32]
 395:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 213              		.loc 1 395 3 is_stmt 1 view .LVU64
 214              		.loc 1 395 24 is_stmt 0 view .LVU65
 215 00e4 0994     		str	r4, [sp, #36]
 396:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 216              		.loc 1 396 3 is_stmt 1 view .LVU66
 217              		.loc 1 396 25 is_stmt 0 view .LVU67
 218 00e6 0A95     		str	r5, [sp, #40]
 397:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 219              		.loc 1 397 3 is_stmt 1 view .LVU68
 220              		.loc 1 397 29 is_stmt 0 view .LVU69
 221 00e8 CDF82C80 		str	r8, [sp, #44]
 398:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 222              		.loc 1 398 3 is_stmt 1 view .LVU70
 223 00ec 07A9     		add	r1, sp, #28
 224 00ee 3548     		ldr	r0, .L3+12
 225 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 226              	.LVL5:
 399:Src/main.c    **** 
 400:Src/main.c    ****   /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
 401:Src/main.c    ****   GPIO_InitStruct.Pin = LD1_Pin | LD3_Pin | LD2_Pin;
 227              		.loc 1 401 3 view .LVU71
ARM GAS  /tmp/ccs4PBQh.s 			page 12


 228              		.loc 1 401 23 is_stmt 0 view .LVU72
 229 00f4 44F28103 		movw	r3, #16513
 230 00f8 0793     		str	r3, [sp, #28]
 402:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 231              		.loc 1 402 3 is_stmt 1 view .LVU73
 232              		.loc 1 402 24 is_stmt 0 view .LVU74
 233 00fa 4FF0010A 		mov	r10, #1
 234 00fe CDF820A0 		str	r10, [sp, #32]
 403:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 235              		.loc 1 403 3 is_stmt 1 view .LVU75
 236              		.loc 1 403 24 is_stmt 0 view .LVU76
 237 0102 0994     		str	r4, [sp, #36]
 404:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 404 3 is_stmt 1 view .LVU77
 239              		.loc 1 404 25 is_stmt 0 view .LVU78
 240 0104 0A94     		str	r4, [sp, #40]
 405:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 241              		.loc 1 405 3 is_stmt 1 view .LVU79
 242 0106 07A9     		add	r1, sp, #28
 243 0108 5846     		mov	r0, fp
 244 010a FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
 406:Src/main.c    **** 
 407:Src/main.c    ****   /*Configure GPIO pin : RMII_TXD1_Pin */
 408:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 246              		.loc 1 408 3 view .LVU80
 247              		.loc 1 408 23 is_stmt 0 view .LVU81
 248 010e 4FF40053 		mov	r3, #8192
 249 0112 0793     		str	r3, [sp, #28]
 409:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 409 3 is_stmt 1 view .LVU82
 251              		.loc 1 409 24 is_stmt 0 view .LVU83
 252 0114 0896     		str	r6, [sp, #32]
 410:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 410 3 is_stmt 1 view .LVU84
 254              		.loc 1 410 24 is_stmt 0 view .LVU85
 255 0116 0994     		str	r4, [sp, #36]
 411:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 256              		.loc 1 411 3 is_stmt 1 view .LVU86
 257              		.loc 1 411 25 is_stmt 0 view .LVU87
 258 0118 0A95     		str	r5, [sp, #40]
 412:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 259              		.loc 1 412 3 is_stmt 1 view .LVU88
 260              		.loc 1 412 29 is_stmt 0 view .LVU89
 261 011a CDF82C80 		str	r8, [sp, #44]
 413:Src/main.c    ****   HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 262              		.loc 1 413 3 is_stmt 1 view .LVU90
 263 011e 07A9     		add	r1, sp, #28
 264 0120 5846     		mov	r0, fp
 265 0122 FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL7:
 414:Src/main.c    **** 
 415:Src/main.c    ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 416:Src/main.c    ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 267              		.loc 1 416 3 view .LVU91
 268              		.loc 1 416 23 is_stmt 0 view .LVU92
 269 0126 4023     		movs	r3, #64
ARM GAS  /tmp/ccs4PBQh.s 			page 13


 270 0128 0793     		str	r3, [sp, #28]
 417:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 271              		.loc 1 417 3 is_stmt 1 view .LVU93
 272              		.loc 1 417 24 is_stmt 0 view .LVU94
 273 012a CDF820A0 		str	r10, [sp, #32]
 418:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 274              		.loc 1 418 3 is_stmt 1 view .LVU95
 275              		.loc 1 418 24 is_stmt 0 view .LVU96
 276 012e 0994     		str	r4, [sp, #36]
 419:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 277              		.loc 1 419 3 is_stmt 1 view .LVU97
 278              		.loc 1 419 25 is_stmt 0 view .LVU98
 279 0130 0A94     		str	r4, [sp, #40]
 420:Src/main.c    ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 280              		.loc 1 420 3 is_stmt 1 view .LVU99
 281 0132 07A9     		add	r1, sp, #28
 282 0134 3846     		mov	r0, r7
 283 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 284              	.LVL8:
 421:Src/main.c    **** 
 422:Src/main.c    ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 423:Src/main.c    ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 285              		.loc 1 423 3 view .LVU100
 286              		.loc 1 423 23 is_stmt 0 view .LVU101
 287 013a 8023     		movs	r3, #128
 288 013c 0793     		str	r3, [sp, #28]
 424:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 289              		.loc 1 424 3 is_stmt 1 view .LVU102
 290              		.loc 1 424 24 is_stmt 0 view .LVU103
 291 013e 0894     		str	r4, [sp, #32]
 425:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 292              		.loc 1 425 3 is_stmt 1 view .LVU104
 293              		.loc 1 425 24 is_stmt 0 view .LVU105
 294 0140 0994     		str	r4, [sp, #36]
 426:Src/main.c    ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 295              		.loc 1 426 3 is_stmt 1 view .LVU106
 296 0142 07A9     		add	r1, sp, #28
 297 0144 3846     		mov	r0, r7
 298 0146 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL9:
 427:Src/main.c    **** 
 428:Src/main.c    ****   /*Configure GPIO pins : USB_SOF_Pin USB_ID_Pin USB_DM_Pin USB_DP_Pin */
 429:Src/main.c    ****   GPIO_InitStruct.Pin = USB_SOF_Pin | USB_ID_Pin | USB_DM_Pin | USB_DP_Pin;
 300              		.loc 1 429 3 view .LVU107
 301              		.loc 1 429 23 is_stmt 0 view .LVU108
 302 014a 4FF4E853 		mov	r3, #7424
 303 014e 0793     		str	r3, [sp, #28]
 430:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 304              		.loc 1 430 3 is_stmt 1 view .LVU109
 305              		.loc 1 430 24 is_stmt 0 view .LVU110
 306 0150 0896     		str	r6, [sp, #32]
 431:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 307              		.loc 1 431 3 is_stmt 1 view .LVU111
 308              		.loc 1 431 24 is_stmt 0 view .LVU112
 309 0152 0994     		str	r4, [sp, #36]
 432:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 310              		.loc 1 432 3 is_stmt 1 view .LVU113
ARM GAS  /tmp/ccs4PBQh.s 			page 14


 311              		.loc 1 432 25 is_stmt 0 view .LVU114
 312 0154 0A95     		str	r5, [sp, #40]
 433:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 313              		.loc 1 433 3 is_stmt 1 view .LVU115
 314              		.loc 1 433 29 is_stmt 0 view .LVU116
 315 0156 0A23     		movs	r3, #10
 316 0158 0B93     		str	r3, [sp, #44]
 434:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 317              		.loc 1 434 3 is_stmt 1 view .LVU117
 318 015a 07A9     		add	r1, sp, #28
 319 015c 1948     		ldr	r0, .L3+12
 320 015e FFF7FEFF 		bl	HAL_GPIO_Init
 321              	.LVL10:
 435:Src/main.c    **** 
 436:Src/main.c    ****   /*Configure GPIO pin : USB_VBUS_Pin */
 437:Src/main.c    ****   GPIO_InitStruct.Pin = USB_VBUS_Pin;
 322              		.loc 1 437 3 view .LVU118
 323              		.loc 1 437 23 is_stmt 0 view .LVU119
 324 0162 4FF40073 		mov	r3, #512
 325 0166 0793     		str	r3, [sp, #28]
 438:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 326              		.loc 1 438 3 is_stmt 1 view .LVU120
 327              		.loc 1 438 24 is_stmt 0 view .LVU121
 328 0168 0894     		str	r4, [sp, #32]
 439:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 329              		.loc 1 439 3 is_stmt 1 view .LVU122
 330              		.loc 1 439 24 is_stmt 0 view .LVU123
 331 016a 0994     		str	r4, [sp, #36]
 440:Src/main.c    ****   HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
 332              		.loc 1 440 3 is_stmt 1 view .LVU124
 333 016c 07A9     		add	r1, sp, #28
 334 016e 1548     		ldr	r0, .L3+12
 335 0170 FFF7FEFF 		bl	HAL_GPIO_Init
 336              	.LVL11:
 441:Src/main.c    **** 
 442:Src/main.c    ****   /*Configure GPIO pin : Clock_Pin */
 443:Src/main.c    ****   GPIO_InitStruct.Pin = Clock_Pin;
 337              		.loc 1 443 3 view .LVU125
 338              		.loc 1 443 23 is_stmt 0 view .LVU126
 339 0174 4FF48053 		mov	r3, #4096
 340 0178 0793     		str	r3, [sp, #28]
 444:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 341              		.loc 1 444 3 is_stmt 1 view .LVU127
 342              		.loc 1 444 24 is_stmt 0 view .LVU128
 343 017a CDF820A0 		str	r10, [sp, #32]
 445:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 344              		.loc 1 445 3 is_stmt 1 view .LVU129
 345              		.loc 1 445 24 is_stmt 0 view .LVU130
 346 017e 0994     		str	r4, [sp, #36]
 446:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 347              		.loc 1 446 3 is_stmt 1 view .LVU131
 348              		.loc 1 446 25 is_stmt 0 view .LVU132
 349 0180 0A95     		str	r5, [sp, #40]
 447:Src/main.c    ****   HAL_GPIO_Init(Clock_GPIO_Port, &GPIO_InitStruct);
 350              		.loc 1 447 3 is_stmt 1 view .LVU133
 351 0182 07A9     		add	r1, sp, #28
 352 0184 4846     		mov	r0, r9
ARM GAS  /tmp/ccs4PBQh.s 			page 15


 353 0186 FFF7FEFF 		bl	HAL_GPIO_Init
 354              	.LVL12:
 448:Src/main.c    **** 
 449:Src/main.c    ****   /*Configure GPIO pin : Data_Pin */
 450:Src/main.c    ****   GPIO_InitStruct.Pin = Data_Pin;
 355              		.loc 1 450 3 view .LVU134
 356              		.loc 1 450 23 is_stmt 0 view .LVU135
 357 018a 0423     		movs	r3, #4
 358 018c 0793     		str	r3, [sp, #28]
 451:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 451 3 is_stmt 1 view .LVU136
 360              		.loc 1 451 24 is_stmt 0 view .LVU137
 361 018e 0894     		str	r4, [sp, #32]
 452:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 362              		.loc 1 452 3 is_stmt 1 view .LVU138
 363              		.loc 1 452 24 is_stmt 0 view .LVU139
 364 0190 0994     		str	r4, [sp, #36]
 453:Src/main.c    ****   HAL_GPIO_Init(Data_GPIO_Port, &GPIO_InitStruct);
 365              		.loc 1 453 3 is_stmt 1 view .LVU140
 366 0192 07A9     		add	r1, sp, #28
 367 0194 0C48     		ldr	r0, .L3+16
 368 0196 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL13:
 454:Src/main.c    **** 
 455:Src/main.c    ****   /*Configure GPIO pins : RMII_TX_EN_Pin RMII_TXD0_Pin */
 456:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_TX_EN_Pin | RMII_TXD0_Pin;
 370              		.loc 1 456 3 view .LVU141
 371              		.loc 1 456 23 is_stmt 0 view .LVU142
 372 019a 4FF42053 		mov	r3, #10240
 373 019e 0793     		str	r3, [sp, #28]
 457:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 374              		.loc 1 457 3 is_stmt 1 view .LVU143
 375              		.loc 1 457 24 is_stmt 0 view .LVU144
 376 01a0 0896     		str	r6, [sp, #32]
 458:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 377              		.loc 1 458 3 is_stmt 1 view .LVU145
 378              		.loc 1 458 24 is_stmt 0 view .LVU146
 379 01a2 0994     		str	r4, [sp, #36]
 459:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 380              		.loc 1 459 3 is_stmt 1 view .LVU147
 381              		.loc 1 459 25 is_stmt 0 view .LVU148
 382 01a4 0A95     		str	r5, [sp, #40]
 460:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 383              		.loc 1 460 3 is_stmt 1 view .LVU149
 384              		.loc 1 460 29 is_stmt 0 view .LVU150
 385 01a6 CDF82C80 		str	r8, [sp, #44]
 461:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 386              		.loc 1 461 3 is_stmt 1 view .LVU151
 387 01aa 07A9     		add	r1, sp, #28
 388 01ac 3846     		mov	r0, r7
 389 01ae FFF7FEFF 		bl	HAL_GPIO_Init
 390              	.LVL14:
 462:Src/main.c    **** }
 391              		.loc 1 462 1 is_stmt 0 view .LVU152
 392 01b2 0DB0     		add	sp, sp, #52
 393              	.LCFI2:
 394              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/ccs4PBQh.s 			page 16


 395              		@ sp needed
 396 01b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 397              	.L4:
 398              		.align	2
 399              	.L3:
 400 01b8 00380240 		.word	1073887232
 401 01bc 00180240 		.word	1073879040
 402 01c0 00001110 		.word	269549568
 403 01c4 00000240 		.word	1073872896
 404 01c8 000C0240 		.word	1073875968
 405 01cc 00040240 		.word	1073873920
 406 01d0 00080240 		.word	1073874944
 407              		.cfi_endproc
 408              	.LFE146:
 410              		.section	.text.MX_TIM6_Init,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu fpv5-d16
 417              	MX_TIM6_Init:
 418              	.LFB143:
 250:Src/main.c    **** 
 419              		.loc 1 250 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 16
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 30B5     		push	{r4, r5, lr}
 424              	.LCFI3:
 425              		.cfi_def_cfa_offset 12
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 5, -8
 428              		.cfi_offset 14, -4
 429 0002 85B0     		sub	sp, sp, #20
 430              	.LCFI4:
 431              		.cfi_def_cfa_offset 32
 256:Src/main.c    **** 
 432              		.loc 1 256 3 view .LVU154
 256:Src/main.c    **** 
 433              		.loc 1 256 27 is_stmt 0 view .LVU155
 434 0004 0025     		movs	r5, #0
 435 0006 0195     		str	r5, [sp, #4]
 436 0008 0295     		str	r5, [sp, #8]
 437 000a 0395     		str	r5, [sp, #12]
 261:Src/main.c    ****   htim6.Init.Prescaler = 215;
 438              		.loc 1 261 3 is_stmt 1 view .LVU156
 261:Src/main.c    ****   htim6.Init.Prescaler = 215;
 439              		.loc 1 261 18 is_stmt 0 view .LVU157
 440 000c 0A4C     		ldr	r4, .L7
 441 000e 0B4B     		ldr	r3, .L7+4
 442 0010 2360     		str	r3, [r4]
 262:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 443              		.loc 1 262 3 is_stmt 1 view .LVU158
 262:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 262 24 is_stmt 0 view .LVU159
 445 0012 D723     		movs	r3, #215
 446 0014 6360     		str	r3, [r4, #4]
ARM GAS  /tmp/ccs4PBQh.s 			page 17


 263:Src/main.c    ****   htim6.Init.Period = 3;
 447              		.loc 1 263 3 is_stmt 1 view .LVU160
 263:Src/main.c    ****   htim6.Init.Period = 3;
 448              		.loc 1 263 26 is_stmt 0 view .LVU161
 449 0016 A560     		str	r5, [r4, #8]
 264:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 450              		.loc 1 264 3 is_stmt 1 view .LVU162
 264:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 451              		.loc 1 264 21 is_stmt 0 view .LVU163
 452 0018 0323     		movs	r3, #3
 453 001a E360     		str	r3, [r4, #12]
 265:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 454              		.loc 1 265 3 is_stmt 1 view .LVU164
 265:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 455              		.loc 1 265 32 is_stmt 0 view .LVU165
 456 001c 8023     		movs	r3, #128
 457 001e A361     		str	r3, [r4, #24]
 266:Src/main.c    ****   {
 458              		.loc 1 266 3 is_stmt 1 view .LVU166
 266:Src/main.c    ****   {
 459              		.loc 1 266 7 is_stmt 0 view .LVU167
 460 0020 2046     		mov	r0, r4
 461 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 462              	.LVL15:
 270:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 463              		.loc 1 270 3 is_stmt 1 view .LVU168
 270:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 464              		.loc 1 270 37 is_stmt 0 view .LVU169
 465 0026 0195     		str	r5, [sp, #4]
 271:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 466              		.loc 1 271 3 is_stmt 1 view .LVU170
 271:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 467              		.loc 1 271 33 is_stmt 0 view .LVU171
 468 0028 0395     		str	r5, [sp, #12]
 272:Src/main.c    ****   {
 469              		.loc 1 272 3 is_stmt 1 view .LVU172
 272:Src/main.c    ****   {
 470              		.loc 1 272 7 is_stmt 0 view .LVU173
 471 002a 01A9     		add	r1, sp, #4
 472 002c 2046     		mov	r0, r4
 473 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 474              	.LVL16:
 279:Src/main.c    **** 
 475              		.loc 1 279 1 view .LVU174
 476 0032 05B0     		add	sp, sp, #20
 477              	.LCFI5:
 478              		.cfi_def_cfa_offset 12
 479              		@ sp needed
 480 0034 30BD     		pop	{r4, r5, pc}
 481              	.L8:
 482 0036 00BF     		.align	2
 483              	.L7:
 484 0038 00000000 		.word	htim6
 485 003c 00100040 		.word	1073745920
 486              		.cfi_endproc
 487              	.LFE143:
 489              		.section	.text.MX_TIM7_Init,"ax",%progbits
ARM GAS  /tmp/ccs4PBQh.s 			page 18


 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-d16
 496              	MX_TIM7_Init:
 497              	.LFB144:
 287:Src/main.c    **** 
 498              		.loc 1 287 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 16
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 30B5     		push	{r4, r5, lr}
 503              	.LCFI6:
 504              		.cfi_def_cfa_offset 12
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 508 0002 85B0     		sub	sp, sp, #20
 509              	.LCFI7:
 510              		.cfi_def_cfa_offset 32
 293:Src/main.c    **** 
 511              		.loc 1 293 3 view .LVU176
 293:Src/main.c    **** 
 512              		.loc 1 293 27 is_stmt 0 view .LVU177
 513 0004 0025     		movs	r5, #0
 514 0006 0195     		str	r5, [sp, #4]
 515 0008 0295     		str	r5, [sp, #8]
 516 000a 0395     		str	r5, [sp, #12]
 298:Src/main.c    ****   htim7.Init.Prescaler = 59999;
 517              		.loc 1 298 3 is_stmt 1 view .LVU178
 298:Src/main.c    ****   htim7.Init.Prescaler = 59999;
 518              		.loc 1 298 18 is_stmt 0 view .LVU179
 519 000c 0A4C     		ldr	r4, .L11
 520 000e 0B4B     		ldr	r3, .L11+4
 521 0010 2360     		str	r3, [r4]
 299:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 522              		.loc 1 299 3 is_stmt 1 view .LVU180
 299:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 523              		.loc 1 299 24 is_stmt 0 view .LVU181
 524 0012 4EF65F23 		movw	r3, #59999
 525 0016 6360     		str	r3, [r4, #4]
 300:Src/main.c    ****   htim7.Init.Period = 1799;
 526              		.loc 1 300 3 is_stmt 1 view .LVU182
 300:Src/main.c    ****   htim7.Init.Period = 1799;
 527              		.loc 1 300 26 is_stmt 0 view .LVU183
 528 0018 A560     		str	r5, [r4, #8]
 301:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 529              		.loc 1 301 3 is_stmt 1 view .LVU184
 301:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 530              		.loc 1 301 21 is_stmt 0 view .LVU185
 531 001a 40F20773 		movw	r3, #1799
 532 001e E360     		str	r3, [r4, #12]
 302:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 533              		.loc 1 302 3 is_stmt 1 view .LVU186
 302:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 534              		.loc 1 302 32 is_stmt 0 view .LVU187
ARM GAS  /tmp/ccs4PBQh.s 			page 19


 535 0020 A561     		str	r5, [r4, #24]
 303:Src/main.c    ****   {
 536              		.loc 1 303 3 is_stmt 1 view .LVU188
 303:Src/main.c    ****   {
 537              		.loc 1 303 7 is_stmt 0 view .LVU189
 538 0022 2046     		mov	r0, r4
 539 0024 FFF7FEFF 		bl	HAL_TIM_Base_Init
 540              	.LVL17:
 307:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 541              		.loc 1 307 3 is_stmt 1 view .LVU190
 307:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 542              		.loc 1 307 37 is_stmt 0 view .LVU191
 543 0028 0195     		str	r5, [sp, #4]
 308:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 544              		.loc 1 308 3 is_stmt 1 view .LVU192
 308:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 545              		.loc 1 308 33 is_stmt 0 view .LVU193
 546 002a 0395     		str	r5, [sp, #12]
 309:Src/main.c    ****   {
 547              		.loc 1 309 3 is_stmt 1 view .LVU194
 309:Src/main.c    ****   {
 548              		.loc 1 309 7 is_stmt 0 view .LVU195
 549 002c 01A9     		add	r1, sp, #4
 550 002e 2046     		mov	r0, r4
 551 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 552              	.LVL18:
 316:Src/main.c    **** 
 553              		.loc 1 316 1 view .LVU196
 554 0034 05B0     		add	sp, sp, #20
 555              	.LCFI8:
 556              		.cfi_def_cfa_offset 12
 557              		@ sp needed
 558 0036 30BD     		pop	{r4, r5, pc}
 559              	.L12:
 560              		.align	2
 561              	.L11:
 562 0038 00000000 		.word	htim7
 563 003c 00140040 		.word	1073746944
 564              		.cfi_endproc
 565              	.LFE144:
 567              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv5-d16
 574              	MX_USART3_UART_Init:
 575              	.LFB145:
 324:Src/main.c    **** 
 576              		.loc 1 324 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580 0000 08B5     		push	{r3, lr}
 581              	.LCFI9:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 3, -8
ARM GAS  /tmp/ccs4PBQh.s 			page 20


 584              		.cfi_offset 14, -4
 333:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 585              		.loc 1 333 3 view .LVU198
 333:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 586              		.loc 1 333 19 is_stmt 0 view .LVU199
 587 0002 0948     		ldr	r0, .L15
 588 0004 094B     		ldr	r3, .L15+4
 589 0006 0360     		str	r3, [r0]
 334:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 590              		.loc 1 334 3 is_stmt 1 view .LVU200
 334:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 591              		.loc 1 334 24 is_stmt 0 view .LVU201
 592 0008 4FF4E133 		mov	r3, #115200
 593 000c 4360     		str	r3, [r0, #4]
 335:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 594              		.loc 1 335 3 is_stmt 1 view .LVU202
 335:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 595              		.loc 1 335 26 is_stmt 0 view .LVU203
 596 000e 0023     		movs	r3, #0
 597 0010 8360     		str	r3, [r0, #8]
 336:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 598              		.loc 1 336 3 is_stmt 1 view .LVU204
 336:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 599              		.loc 1 336 24 is_stmt 0 view .LVU205
 600 0012 C360     		str	r3, [r0, #12]
 337:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 601              		.loc 1 337 3 is_stmt 1 view .LVU206
 337:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 602              		.loc 1 337 22 is_stmt 0 view .LVU207
 603 0014 0361     		str	r3, [r0, #16]
 338:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 604              		.loc 1 338 3 is_stmt 1 view .LVU208
 338:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 605              		.loc 1 338 20 is_stmt 0 view .LVU209
 606 0016 0C22     		movs	r2, #12
 607 0018 4261     		str	r2, [r0, #20]
 339:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 608              		.loc 1 339 3 is_stmt 1 view .LVU210
 339:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 609              		.loc 1 339 25 is_stmt 0 view .LVU211
 610 001a 8361     		str	r3, [r0, #24]
 340:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 611              		.loc 1 340 3 is_stmt 1 view .LVU212
 340:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 612              		.loc 1 340 28 is_stmt 0 view .LVU213
 613 001c C361     		str	r3, [r0, #28]
 341:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 614              		.loc 1 341 3 is_stmt 1 view .LVU214
 341:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 615              		.loc 1 341 30 is_stmt 0 view .LVU215
 616 001e 0362     		str	r3, [r0, #32]
 342:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 617              		.loc 1 342 3 is_stmt 1 view .LVU216
 342:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 618              		.loc 1 342 38 is_stmt 0 view .LVU217
 619 0020 4362     		str	r3, [r0, #36]
 343:Src/main.c    ****   {
ARM GAS  /tmp/ccs4PBQh.s 			page 21


 620              		.loc 1 343 3 is_stmt 1 view .LVU218
 343:Src/main.c    ****   {
 621              		.loc 1 343 7 is_stmt 0 view .LVU219
 622 0022 FFF7FEFF 		bl	HAL_UART_Init
 623              	.LVL19:
 350:Src/main.c    **** 
 624              		.loc 1 350 1 view .LVU220
 625 0026 08BD     		pop	{r3, pc}
 626              	.L16:
 627              		.align	2
 628              	.L15:
 629 0028 00000000 		.word	huart3
 630 002c 00480040 		.word	1073760256
 631              		.cfi_endproc
 632              	.LFE145:
 634              		.section	.text.SystemClock_Config,"ax",%progbits
 635              		.align	1
 636              		.global	SystemClock_Config
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv5-d16
 642              	SystemClock_Config:
 643              	.LFB142:
 194:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 644              		.loc 1 194 1 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 224
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648 0000 30B5     		push	{r4, r5, lr}
 649              	.LCFI10:
 650              		.cfi_def_cfa_offset 12
 651              		.cfi_offset 4, -12
 652              		.cfi_offset 5, -8
 653              		.cfi_offset 14, -4
 654 0002 B9B0     		sub	sp, sp, #228
 655              	.LCFI11:
 656              		.cfi_def_cfa_offset 240
 195:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 657              		.loc 1 195 3 view .LVU222
 195:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 658              		.loc 1 195 22 is_stmt 0 view .LVU223
 659 0004 3422     		movs	r2, #52
 660 0006 0021     		movs	r1, #0
 661 0008 2BA8     		add	r0, sp, #172
 662 000a FFF7FEFF 		bl	memset
 663              	.LVL20:
 196:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 664              		.loc 1 196 3 is_stmt 1 view .LVU224
 196:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 665              		.loc 1 196 22 is_stmt 0 view .LVU225
 666 000e 0024     		movs	r4, #0
 667 0010 2694     		str	r4, [sp, #152]
 668 0012 2794     		str	r4, [sp, #156]
 669 0014 2894     		str	r4, [sp, #160]
 670 0016 2994     		str	r4, [sp, #164]
 671 0018 2A94     		str	r4, [sp, #168]
ARM GAS  /tmp/ccs4PBQh.s 			page 22


 197:Src/main.c    **** 
 672              		.loc 1 197 3 is_stmt 1 view .LVU226
 197:Src/main.c    **** 
 673              		.loc 1 197 28 is_stmt 0 view .LVU227
 674 001a 9022     		movs	r2, #144
 675 001c 2146     		mov	r1, r4
 676 001e 02A8     		add	r0, sp, #8
 677 0020 FFF7FEFF 		bl	memset
 678              	.LVL21:
 201:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 679              		.loc 1 201 3 is_stmt 1 view .LVU228
 680              	.LBB8:
 201:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 681              		.loc 1 201 3 view .LVU229
 201:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 682              		.loc 1 201 3 view .LVU230
 683 0024 1E4B     		ldr	r3, .L19
 684 0026 1A6C     		ldr	r2, [r3, #64]
 685 0028 42F08052 		orr	r2, r2, #268435456
 686 002c 1A64     		str	r2, [r3, #64]
 201:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 687              		.loc 1 201 3 view .LVU231
 688 002e 1B6C     		ldr	r3, [r3, #64]
 689 0030 03F08053 		and	r3, r3, #268435456
 690 0034 0093     		str	r3, [sp]
 201:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 691              		.loc 1 201 3 view .LVU232
 692 0036 009B     		ldr	r3, [sp]
 693              	.LBE8:
 201:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 694              		.loc 1 201 3 view .LVU233
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 695              		.loc 1 202 3 view .LVU234
 696              	.LBB9:
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 697              		.loc 1 202 3 view .LVU235
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 698              		.loc 1 202 3 view .LVU236
 699 0038 1A4B     		ldr	r3, .L19+4
 700 003a 1A68     		ldr	r2, [r3]
 701 003c 42F44042 		orr	r2, r2, #49152
 702 0040 1A60     		str	r2, [r3]
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 703              		.loc 1 202 3 view .LVU237
 704 0042 1B68     		ldr	r3, [r3]
 705 0044 03F44043 		and	r3, r3, #49152
 706 0048 0193     		str	r3, [sp, #4]
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 707              		.loc 1 202 3 view .LVU238
 708 004a 019B     		ldr	r3, [sp, #4]
 709              	.LBE9:
 202:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 710              		.loc 1 202 3 view .LVU239
 205:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 711              		.loc 1 205 3 view .LVU240
 205:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 712              		.loc 1 205 36 is_stmt 0 view .LVU241
ARM GAS  /tmp/ccs4PBQh.s 			page 23


 713 004c 0225     		movs	r5, #2
 714 004e 2B95     		str	r5, [sp, #172]
 206:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 715              		.loc 1 206 3 is_stmt 1 view .LVU242
 206:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 716              		.loc 1 206 30 is_stmt 0 view .LVU243
 717 0050 0123     		movs	r3, #1
 718 0052 2E93     		str	r3, [sp, #184]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 719              		.loc 1 207 3 is_stmt 1 view .LVU244
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 720              		.loc 1 207 41 is_stmt 0 view .LVU245
 721 0054 1023     		movs	r3, #16
 722 0056 2F93     		str	r3, [sp, #188]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 723              		.loc 1 208 3 is_stmt 1 view .LVU246
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 724              		.loc 1 208 34 is_stmt 0 view .LVU247
 725 0058 3195     		str	r5, [sp, #196]
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 726              		.loc 1 209 3 is_stmt 1 view .LVU248
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 727              		.loc 1 209 35 is_stmt 0 view .LVU249
 728 005a 3294     		str	r4, [sp, #200]
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 729              		.loc 1 210 3 is_stmt 1 view .LVU250
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 730              		.loc 1 210 30 is_stmt 0 view .LVU251
 731 005c 0823     		movs	r3, #8
 732 005e 3393     		str	r3, [sp, #204]
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 733              		.loc 1 211 3 is_stmt 1 view .LVU252
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 734              		.loc 1 211 30 is_stmt 0 view .LVU253
 735 0060 D823     		movs	r3, #216
 736 0062 3493     		str	r3, [sp, #208]
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 737              		.loc 1 212 3 is_stmt 1 view .LVU254
 212:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 738              		.loc 1 212 30 is_stmt 0 view .LVU255
 739 0064 3595     		str	r5, [sp, #212]
 213:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 740              		.loc 1 213 3 is_stmt 1 view .LVU256
 213:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 741              		.loc 1 213 30 is_stmt 0 view .LVU257
 742 0066 3695     		str	r5, [sp, #216]
 214:Src/main.c    ****   {
 743              		.loc 1 214 3 is_stmt 1 view .LVU258
 214:Src/main.c    ****   {
 744              		.loc 1 214 7 is_stmt 0 view .LVU259
 745 0068 2BA8     		add	r0, sp, #172
 746 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 747              	.LVL22:
 220:Src/main.c    ****   {
 748              		.loc 1 220 3 is_stmt 1 view .LVU260
 220:Src/main.c    ****   {
 749              		.loc 1 220 7 is_stmt 0 view .LVU261
ARM GAS  /tmp/ccs4PBQh.s 			page 24


 750 006e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 751              	.LVL23:
 226:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 752              		.loc 1 226 3 is_stmt 1 view .LVU262
 226:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 753              		.loc 1 226 31 is_stmt 0 view .LVU263
 754 0072 0F23     		movs	r3, #15
 755 0074 2693     		str	r3, [sp, #152]
 227:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 756              		.loc 1 227 3 is_stmt 1 view .LVU264
 227:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 757              		.loc 1 227 34 is_stmt 0 view .LVU265
 758 0076 2795     		str	r5, [sp, #156]
 228:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 759              		.loc 1 228 3 is_stmt 1 view .LVU266
 228:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 760              		.loc 1 228 35 is_stmt 0 view .LVU267
 761 0078 2894     		str	r4, [sp, #160]
 229:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 762              		.loc 1 229 3 is_stmt 1 view .LVU268
 229:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 763              		.loc 1 229 36 is_stmt 0 view .LVU269
 764 007a 4FF4A053 		mov	r3, #5120
 765 007e 2993     		str	r3, [sp, #164]
 230:Src/main.c    **** 
 766              		.loc 1 230 3 is_stmt 1 view .LVU270
 230:Src/main.c    **** 
 767              		.loc 1 230 36 is_stmt 0 view .LVU271
 768 0080 4FF48053 		mov	r3, #4096
 769 0084 2A93     		str	r3, [sp, #168]
 232:Src/main.c    ****   {
 770              		.loc 1 232 3 is_stmt 1 view .LVU272
 232:Src/main.c    ****   {
 771              		.loc 1 232 7 is_stmt 0 view .LVU273
 772 0086 0721     		movs	r1, #7
 773 0088 26A8     		add	r0, sp, #152
 774 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 775              	.LVL24:
 236:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 776              		.loc 1 236 3 is_stmt 1 view .LVU274
 236:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 777              		.loc 1 236 44 is_stmt 0 view .LVU275
 778 008e 4FF48073 		mov	r3, #256
 779 0092 0293     		str	r3, [sp, #8]
 237:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 780              		.loc 1 237 3 is_stmt 1 view .LVU276
 237:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 781              		.loc 1 237 44 is_stmt 0 view .LVU277
 782 0094 1594     		str	r4, [sp, #84]
 238:Src/main.c    ****   {
 783              		.loc 1 238 3 is_stmt 1 view .LVU278
 238:Src/main.c    ****   {
 784              		.loc 1 238 7 is_stmt 0 view .LVU279
 785 0096 02A8     		add	r0, sp, #8
 786 0098 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 787              	.LVL25:
 242:Src/main.c    **** 
ARM GAS  /tmp/ccs4PBQh.s 			page 25


 788              		.loc 1 242 1 view .LVU280
 789 009c 39B0     		add	sp, sp, #228
 790              	.LCFI12:
 791              		.cfi_def_cfa_offset 12
 792              		@ sp needed
 793 009e 30BD     		pop	{r4, r5, pc}
 794              	.L20:
 795              		.align	2
 796              	.L19:
 797 00a0 00380240 		.word	1073887232
 798 00a4 00700040 		.word	1073770496
 799              		.cfi_endproc
 800              	.LFE142:
 802              		.section	.text.main,"ax",%progbits
 803              		.align	1
 804              		.global	main
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv5-d16
 810              	main:
 811              	.LFB141:
 108:Src/main.c    ****   /* USER CODE BEGIN 1 */
 812              		.loc 1 108 1 is_stmt 1 view -0
 813              		.cfi_startproc
 814              		@ Volatile: function does not return.
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817 0000 08B5     		push	{r3, lr}
 818              	.LCFI13:
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 3, -8
 821              		.cfi_offset 14, -4
 116:Src/main.c    **** 
 822              		.loc 1 116 3 view .LVU282
 823 0002 FFF7FEFF 		bl	HAL_Init
 824              	.LVL26:
 123:Src/main.c    **** 
 825              		.loc 1 123 3 view .LVU283
 826 0006 FFF7FEFF 		bl	SystemClock_Config
 827              	.LVL27:
 130:Src/main.c    ****   MX_TIM6_Init();
 828              		.loc 1 130 3 view .LVU284
 829 000a FFF7FEFF 		bl	MX_GPIO_Init
 830              	.LVL28:
 131:Src/main.c    ****   MX_TIM7_Init();
 831              		.loc 1 131 3 view .LVU285
 832 000e FFF7FEFF 		bl	MX_TIM6_Init
 833              	.LVL29:
 132:Src/main.c    ****   MX_USART3_UART_Init();
 834              		.loc 1 132 3 view .LVU286
 835 0012 FFF7FEFF 		bl	MX_TIM7_Init
 836              	.LVL30:
 133:Src/main.c    ****   /* USER CODE BEGIN 2 */
 837              		.loc 1 133 3 view .LVU287
 838 0016 FFF7FEFF 		bl	MX_USART3_UART_Init
 839              	.LVL31:
ARM GAS  /tmp/ccs4PBQh.s 			page 26


 135:Src/main.c    ****   steer.clock_period = 500;
 840              		.loc 1 135 3 view .LVU288
 135:Src/main.c    ****   steer.clock_period = 500;
 841              		.loc 1 135 19 is_stmt 0 view .LVU289
 842 001a 2A4C     		ldr	r4, .L24
 843 001c 0C21     		movs	r1, #12
 844 001e 2160     		str	r1, [r4]
 136:Src/main.c    ****   steer.data_freq_Hz = 1500000;
 845              		.loc 1 136 3 is_stmt 1 view .LVU290
 136:Src/main.c    ****   steer.data_freq_Hz = 1500000;
 846              		.loc 1 136 22 is_stmt 0 view .LVU291
 847 0020 4FF4FA73 		mov	r3, #500
 848 0024 E360     		str	r3, [r4, #12]
 137:Src/main.c    ****   steer.steer_zero = 0; // TO BE DEFINED
 849              		.loc 1 137 3 is_stmt 1 view .LVU292
 137:Src/main.c    ****   steer.steer_zero = 0; // TO BE DEFINED
 850              		.loc 1 137 22 is_stmt 0 view .LVU293
 851 0026 284B     		ldr	r3, .L24+4
 852 0028 6361     		str	r3, [r4, #20]
 138:Src/main.c    **** 
 853              		.loc 1 138 3 is_stmt 1 view .LVU294
 138:Src/main.c    **** 
 854              		.loc 1 138 20 is_stmt 0 view .LVU295
 855 002a 0023     		movs	r3, #0
 856 002c A364     		str	r3, [r4, #72]
 140:Src/main.c    ****   steer.ClockPinNumber = GPIO_PIN_12;
 857              		.loc 1 140 3 is_stmt 1 view .LVU296
 140:Src/main.c    ****   steer.ClockPinNumber = GPIO_PIN_12;
 858              		.loc 1 140 22 is_stmt 0 view .LVU297
 859 002e 2748     		ldr	r0, .L24+8
 860 0030 A066     		str	r0, [r4, #104]
 141:Src/main.c    ****   steer.DataPinName = GPIOD;
 861              		.loc 1 141 3 is_stmt 1 view .LVU298
 141:Src/main.c    ****   steer.DataPinName = GPIOD;
 862              		.loc 1 141 24 is_stmt 0 view .LVU299
 863 0032 4FF48053 		mov	r3, #4096
 864 0036 A4F87030 		strh	r3, [r4, #112]	@ movhi
 142:Src/main.c    ****   steer.DataPinNumber = GPIO_PIN_2;
 865              		.loc 1 142 3 is_stmt 1 view .LVU300
 142:Src/main.c    ****   steer.DataPinNumber = GPIO_PIN_2;
 866              		.loc 1 142 21 is_stmt 0 view .LVU301
 867 003a 254B     		ldr	r3, .L24+12
 868 003c E366     		str	r3, [r4, #108]
 143:Src/main.c    ****   HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 869              		.loc 1 143 3 is_stmt 1 view .LVU302
 143:Src/main.c    ****   HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 870              		.loc 1 143 23 is_stmt 0 view .LVU303
 871 003e 0423     		movs	r3, #4
 872 0040 A4F87230 		strh	r3, [r4, #114]	@ movhi
 144:Src/main.c    ****   steer.clock_status = 1;
 873              		.loc 1 144 3 is_stmt 1 view .LVU304
 874 0044 0122     		movs	r2, #1
 875 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 876              	.LVL32:
 145:Src/main.c    **** 
 877              		.loc 1 145 3 view .LVU305
 145:Src/main.c    **** 
ARM GAS  /tmp/ccs4PBQh.s 			page 27


 878              		.loc 1 145 22 is_stmt 0 view .LVU306
 879 004a 0121     		movs	r1, #1
 880 004c 2161     		str	r1, [r4, #16]
 147:Src/main.c    **** 
 881              		.loc 1 147 3 is_stmt 1 view .LVU307
 147:Src/main.c    **** 
 882              		.loc 1 147 23 is_stmt 0 view .LVU308
 883 004e 214D     		ldr	r5, .L24+16
 884 0050 6566     		str	r5, [r4, #100]
 149:Src/main.c    **** 
 885              		.loc 1 149 3 is_stmt 1 view .LVU309
 886 0052 2148     		ldr	r0, .L24+20
 887 0054 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 888              	.LVL33:
 152:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 889              		.loc 1 152 3 view .LVU310
 890 0058 2846     		mov	r0, r5
 891 005a FFF7FEFF 		bl	HAL_TIM_Base_Start
 892              	.LVL34:
 153:Src/main.c    **** 
 893              		.loc 1 153 3 view .LVU311
 894 005e 2846     		mov	r0, r5
 895 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 896              	.LVL35:
 897              	.L22:
 159:Src/main.c    ****   {
 898              		.loc 1 159 3 discriminator 1 view .LVU312
 162:Src/main.c    **** 
 899              		.loc 1 162 5 discriminator 1 view .LVU313
 900 0064 C820     		movs	r0, #200
 901 0066 FFF7FEFF 		bl	HAL_Delay
 902              	.LVL36:
 164:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 903              		.loc 1 164 5 discriminator 1 view .LVU314
 904 006a 1B4C     		ldr	r4, .L24+20
 905 006c 8021     		movs	r1, #128
 906 006e 2046     		mov	r0, r4
 907 0070 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 908              	.LVL37:
 165:Src/main.c    **** 
 909              		.loc 1 165 5 discriminator 1 view .LVU315
 910 0074 0121     		movs	r1, #1
 911 0076 2046     		mov	r0, r4
 912 0078 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 913              	.LVL38:
 167:Src/main.c    **** 
 914              		.loc 1 167 5 discriminator 1 view .LVU316
 915 007c C820     		movs	r0, #200
 916 007e FFF7FEFF 		bl	HAL_Delay
 917              	.LVL39:
 169:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 918              		.loc 1 169 5 discriminator 1 view .LVU317
 919 0082 4FF48041 		mov	r1, #16384
 920 0086 2046     		mov	r0, r4
 921 0088 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 922              	.LVL40:
 170:Src/main.c    **** 
ARM GAS  /tmp/ccs4PBQh.s 			page 28


 923              		.loc 1 170 5 discriminator 1 view .LVU318
 924 008c 8021     		movs	r1, #128
 925 008e 2046     		mov	r0, r4
 926 0090 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 927              	.LVL41:
 172:Src/main.c    **** 
 928              		.loc 1 172 5 discriminator 1 view .LVU319
 929 0094 C820     		movs	r0, #200
 930 0096 FFF7FEFF 		bl	HAL_Delay
 931              	.LVL42:
 174:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 932              		.loc 1 174 5 discriminator 1 view .LVU320
 933 009a 4FF48041 		mov	r1, #16384
 934 009e 2046     		mov	r0, r4
 935 00a0 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 936              	.LVL43:
 175:Src/main.c    **** 
 937              		.loc 1 175 5 discriminator 1 view .LVU321
 938 00a4 8021     		movs	r1, #128
 939 00a6 2046     		mov	r0, r4
 940 00a8 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 941              	.LVL44:
 177:Src/main.c    **** 
 942              		.loc 1 177 5 discriminator 1 view .LVU322
 943 00ac C820     		movs	r0, #200
 944 00ae FFF7FEFF 		bl	HAL_Delay
 945              	.LVL45:
 179:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 946              		.loc 1 179 5 discriminator 1 view .LVU323
 947 00b2 8021     		movs	r1, #128
 948 00b4 2046     		mov	r0, r4
 949 00b6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 950              	.LVL46:
 180:Src/main.c    **** 
 951              		.loc 1 180 5 discriminator 1 view .LVU324
 952 00ba 0121     		movs	r1, #1
 953 00bc 2046     		mov	r0, r4
 954 00be FFF7FEFF 		bl	HAL_GPIO_TogglePin
 955              	.LVL47:
 159:Src/main.c    ****   {
 956              		.loc 1 159 9 discriminator 1 view .LVU325
 957 00c2 CFE7     		b	.L22
 958              	.L25:
 959              		.align	2
 960              	.L24:
 961 00c4 00000000 		.word	steer
 962 00c8 60E31600 		.word	1500000
 963 00cc 00080240 		.word	1073874944
 964 00d0 000C0240 		.word	1073875968
 965 00d4 00000000 		.word	htim7
 966 00d8 00040240 		.word	1073873920
 967              		.cfi_endproc
 968              	.LFE141:
 970              		.section	.text.print,"ax",%progbits
 971              		.align	1
 972              		.global	print
 973              		.syntax unified
ARM GAS  /tmp/ccs4PBQh.s 			page 29


 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv5-d16
 978              	print:
 979              	.LVL48:
 980              	.LFB147:
 463:Src/main.c    **** 
 464:Src/main.c    **** /* USER CODE BEGIN 4 */
 465:Src/main.c    **** // print on uart
 466:Src/main.c    **** void print(UART_HandleTypeDef *huart, char *text)
 467:Src/main.c    **** {
 981              		.loc 1 467 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              		.loc 1 467 1 is_stmt 0 view .LVU327
 986 0000 38B5     		push	{r3, r4, r5, lr}
 987              	.LCFI14:
 988              		.cfi_def_cfa_offset 16
 989              		.cfi_offset 3, -16
 990              		.cfi_offset 4, -12
 991              		.cfi_offset 5, -8
 992              		.cfi_offset 14, -4
 993 0002 0546     		mov	r5, r0
 994 0004 0C46     		mov	r4, r1
 468:Src/main.c    ****   HAL_UART_Transmit(huart, (uint8_t *)text, strlen(text), 0xFFFF);
 995              		.loc 1 468 3 is_stmt 1 view .LVU328
 996              		.loc 1 468 45 is_stmt 0 view .LVU329
 997 0006 0846     		mov	r0, r1
 998              	.LVL49:
 999              		.loc 1 468 45 view .LVU330
 1000 0008 FFF7FEFF 		bl	strlen
 1001              	.LVL50:
 1002              		.loc 1 468 3 view .LVU331
 1003 000c 4FF6FF73 		movw	r3, #65535
 1004 0010 82B2     		uxth	r2, r0
 1005 0012 2146     		mov	r1, r4
 1006 0014 2846     		mov	r0, r5
 1007 0016 FFF7FEFF 		bl	HAL_UART_Transmit
 1008              	.LVL51:
 469:Src/main.c    **** }
 1009              		.loc 1 469 1 view .LVU332
 1010 001a 38BD     		pop	{r3, r4, r5, pc}
 1011              		.loc 1 469 1 view .LVU333
 1012              		.cfi_endproc
 1013              	.LFE147:
 1015              		.section	.rodata.check_steer_error.str1.4,"aMS",%progbits,1
 1016              		.align	2
 1017              	.LC0:
 1018 0000 0A457272 		.ascii	"\012Error during the SSI reading!\012\000"
 1018      6F722064 
 1018      7572696E 
 1018      67207468 
 1018      65205353 
 1019              		.section	.text.check_steer_error,"ax",%progbits
 1020              		.align	1
 1021              		.global	check_steer_error
ARM GAS  /tmp/ccs4PBQh.s 			page 30


 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1025              		.fpu fpv5-d16
 1027              	check_steer_error:
 1028              	.LVL52:
 1029              	.LFB150:
 470:Src/main.c    **** 
 471:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 472:Src/main.c    **** {
 473:Src/main.c    ****   char mes[200] = "";
 474:Src/main.c    ****   int val = -1;
 475:Src/main.c    ****   int val2 = -1;
 476:Src/main.c    **** 
 477:Src/main.c    ****   val = __HAL_TIM_GET_COUNTER(&htim6);
 478:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 479:Src/main.c    ****   sprintf(mes, "\r\n TIM6 = %d -- TIM7 = %d", val, val2);
 480:Src/main.c    ****   print(&huart3, mes);
 481:Src/main.c    ****   /**
 482:Src/main.c    ****    * This interrupt is used to start the clock to retrieve the data frame from the encoder
 483:Src/main.c    ****   */
 484:Src/main.c    ****   if (htim == &htim7)
 485:Src/main.c    ****   {
 486:Src/main.c    ****     HAL_TIM_Base_Stop(&htim7);
 487:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 488:Src/main.c    ****     __HAL_TIM_SET_COUNTER(&htim7, 0);
 489:Src/main.c    ****     HAL_TIM_Base_Start(&htim6);
 490:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim6);
 491:Src/main.c    ****   }
 492:Src/main.c    **** 
 493:Src/main.c    ****   if (htim == &htim6)
 494:Src/main.c    ****   {
 495:Src/main.c    ****     read_steer_SSI(&steer);
 496:Src/main.c    ****   }
 497:Src/main.c    **** }
 498:Src/main.c    **** 
 499:Src/main.c    **** void read_steer_SSI(steer_enc *steer)
 500:Src/main.c    **** {
 501:Src/main.c    ****   // check if the status of clock given as input for the encoder
 502:Src/main.c    ****   if (steer->data_count < steer->data_size)
 503:Src/main.c    ****   {
 504:Src/main.c    **** 
 505:Src/main.c    ****     if (steer->clock_status)
 506:Src/main.c    ****     {
 507:Src/main.c    ****       // In this case the clock is falling, so we are in the middle of the bit sent by the encoder
 508:Src/main.c    ****       // so, we can read the bit and be sure that it is correct
 509:Src/main.c    ****       steer->clock_status = 0;
 510:Src/main.c    ****       HAL_GPIO_WritePin(steer->ClockPinName, steer->data_size, GPIO_PIN_RESET);
 511:Src/main.c    ****       // In the first falling there is no data, so we start reading only from the second falling
 512:Src/main.c    ****       if (steer->data_count > 0)
 513:Src/main.c    ****       {
 514:Src/main.c    ****         steer->data[steer->data_count] = HAL_GPIO_ReadPin(steer->DataPinName, steer->DataPinNumber)
 515:Src/main.c    ****       }
 516:Src/main.c    ****     }
 517:Src/main.c    ****     else
 518:Src/main.c    ****     {
 519:Src/main.c    ****       /* In this case the clock is rising and the encoder is giving us the next bit to read */
ARM GAS  /tmp/ccs4PBQh.s 			page 31


 520:Src/main.c    ****       steer->clock_status = 1;
 521:Src/main.c    ****       HAL_GPIO_WritePin(steer->ClockPinName, steer->data_size, GPIO_PIN_SET);
 522:Src/main.c    ****       steer->data_count++;
 523:Src/main.c    ****     }
 524:Src/main.c    ****   }
 525:Src/main.c    ****   else if (steer->data_count = steer->data_size)
 526:Src/main.c    ****   {
 527:Src/main.c    ****     /**
 528:Src/main.c    ****      * Now we can start to convert the binary number and get the angle of the steering.
 529:Src/main.c    ****      * Then we are going to restart the timer 7 in order to get another data frame
 530:Src/main.c    ****     */
 531:Src/main.c    **** 
 532:Src/main.c    ****     steer->converted_data = bin_dec(steer->data, steer->data_size);
 533:Src/main.c    **** 
 534:Src/main.c    ****     char resolution_mes[256] = "";
 535:Src/main.c    ****     sprintf(resolution_mes, "\r\nresolution = %u \n", steer->converted_data);
 536:Src/main.c    ****     print(&huart3, resolution_mes);
 537:Src/main.c    **** 
 538:Src/main.c    ****     // stop the timer 6 and restart the timer 7
 539:Src/main.c    ****     HAL_TIM_Base_Stop(&htim6);
 540:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 541:Src/main.c    ****     __HAL_TIM_SET_COUNTER(&htim6, 0);
 542:Src/main.c    **** 
 543:Src/main.c    ****     HAL_TIM_Base_Start(&htim7);
 544:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim7);
 545:Src/main.c    ****   }
 546:Src/main.c    ****   else
 547:Src/main.c    ****   {
 548:Src/main.c    ****     /* in this case we have an error */
 549:Src/main.c    ****     check_steer_error(steer);
 550:Src/main.c    ****   }
 551:Src/main.c    **** }
 552:Src/main.c    **** 
 553:Src/main.c    **** void check_steer_error(steer_enc *steer)
 554:Src/main.c    **** {
 1030              		.loc 1 554 1 is_stmt 1 view -0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		.loc 1 554 1 is_stmt 0 view .LVU335
 1035 0000 10B5     		push	{r4, lr}
 1036              	.LCFI15:
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 4, -8
 1039              		.cfi_offset 14, -4
 1040 0002 0446     		mov	r4, r0
 555:Src/main.c    ****   steer->error_flag = 1;
 1041              		.loc 1 555 3 is_stmt 1 view .LVU336
 1042              		.loc 1 555 21 is_stmt 0 view .LVU337
 1043 0004 0123     		movs	r3, #1
 1044 0006 4360     		str	r3, [r0, #4]
 556:Src/main.c    ****   steer->error_data_status = HAL_GPIO_ReadPin(steer->DataPinName, steer->DataPinNumber);
 1045              		.loc 1 556 3 is_stmt 1 view .LVU338
 1046              		.loc 1 556 30 is_stmt 0 view .LVU339
 1047 0008 B0F87210 		ldrh	r1, [r0, #114]
 1048 000c C06E     		ldr	r0, [r0, #108]
 1049              	.LVL53:
ARM GAS  /tmp/ccs4PBQh.s 			page 32


 1050              		.loc 1 556 30 view .LVU340
 1051 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1052              	.LVL54:
 1053              		.loc 1 556 28 view .LVU341
 1054 0012 A060     		str	r0, [r4, #8]
 557:Src/main.c    ****   print(&huart3, "\nError during the SSI reading!\n");
 1055              		.loc 1 557 3 is_stmt 1 view .LVU342
 1056 0014 0249     		ldr	r1, .L30
 1057 0016 0348     		ldr	r0, .L30+4
 1058 0018 FFF7FEFF 		bl	print
 1059              	.LVL55:
 558:Src/main.c    **** }
 1060              		.loc 1 558 1 is_stmt 0 view .LVU343
 1061 001c 10BD     		pop	{r4, pc}
 1062              	.LVL56:
 1063              	.L31:
 1064              		.loc 1 558 1 view .LVU344
 1065 001e 00BF     		.align	2
 1066              	.L30:
 1067 0020 00000000 		.word	.LC0
 1068 0024 00000000 		.word	huart3
 1069              		.cfi_endproc
 1070              	.LFE150:
 1072              		.section	.text.Power,"ax",%progbits
 1073              		.align	1
 1074              		.global	Power
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu fpv5-d16
 1080              	Power:
 1081              	.LVL57:
 1082              	.LFB152:
 559:Src/main.c    **** 
 560:Src/main.c    **** //function to calculate the decimal value from MSB binary array
 561:Src/main.c    **** //bin = pointer to binary array
 562:Src/main.c    **** //max = size of the array
 563:Src/main.c    **** int bin_dec(int *bin, int size)
 564:Src/main.c    **** {
 565:Src/main.c    **** 
 566:Src/main.c    ****   int dec = 0;
 567:Src/main.c    **** 
 568:Src/main.c    ****   for (int i = 0; i < size; i++)
 569:Src/main.c    ****   {
 570:Src/main.c    ****     if (bin[i] == 1)
 571:Src/main.c    ****     {
 572:Src/main.c    ****       dec += Power(2, size - i - 1);
 573:Src/main.c    ****     }
 574:Src/main.c    ****   }
 575:Src/main.c    ****   return dec;
 576:Src/main.c    **** }
 577:Src/main.c    **** 
 578:Src/main.c    **** //function to calculate the power of a given number
 579:Src/main.c    **** double Power(int base, int expn)
 580:Src/main.c    **** {
 1083              		.loc 1 580 1 is_stmt 1 view -0
 1084              		.cfi_startproc
ARM GAS  /tmp/ccs4PBQh.s 			page 33


 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              		.loc 1 580 1 is_stmt 0 view .LVU346
 1089 0000 06EE900A 		vmov	s13, r0	@ int
 581:Src/main.c    **** 
 582:Src/main.c    ****   double result = 1;
 1090              		.loc 1 582 3 is_stmt 1 view .LVU347
 1091              	.LVL58:
 583:Src/main.c    **** 
 584:Src/main.c    ****   if (expn != 0)
 1092              		.loc 1 584 3 view .LVU348
 1093              		.loc 1 584 6 is_stmt 0 view .LVU349
 1094 0004 0A46     		mov	r2, r1
 1095 0006 11B9     		cbnz	r1, .L36
 582:Src/main.c    **** 
 1096              		.loc 1 582 10 view .LVU350
 1097 0008 B7EE000B 		vmov.f64	d0, #1.0e+0
 1098 000c 7047     		bx	lr
 1099              	.L36:
 1100              	.LBB10:
 585:Src/main.c    ****   {
 586:Src/main.c    ****     for (int j = 0; j < expn; j++)
 1101              		.loc 1 586 14 view .LVU351
 1102 000e 0023     		movs	r3, #0
 1103              	.LBE10:
 582:Src/main.c    **** 
 1104              		.loc 1 582 10 view .LVU352
 1105 0010 B7EE000B 		vmov.f64	d0, #1.0e+0
 1106              	.LVL59:
 1107              	.L33:
 1108              	.LBB11:
 1109              		.loc 1 586 21 is_stmt 1 discriminator 1 view .LVU353
 1110              		.loc 1 586 5 is_stmt 0 discriminator 1 view .LVU354
 1111 0014 9342     		cmp	r3, r2
 1112 0016 05DA     		bge	.L37
 587:Src/main.c    ****     {
 588:Src/main.c    ****       result = result * base;
 1113              		.loc 1 588 7 is_stmt 1 discriminator 3 view .LVU355
 1114              		.loc 1 588 23 is_stmt 0 discriminator 3 view .LVU356
 1115 0018 B8EEE67B 		vcvt.f64.s32	d7, s13
 1116              		.loc 1 588 14 discriminator 3 view .LVU357
 1117 001c 20EE070B 		vmul.f64	d0, d0, d7
 1118              	.LVL60:
 586:Src/main.c    ****     {
 1119              		.loc 1 586 31 is_stmt 1 discriminator 3 view .LVU358
 586:Src/main.c    ****     {
 1120              		.loc 1 586 32 is_stmt 0 discriminator 3 view .LVU359
 1121 0020 0133     		adds	r3, r3, #1
 1122              	.LVL61:
 586:Src/main.c    ****     {
 1123              		.loc 1 586 32 discriminator 3 view .LVU360
 1124 0022 F7E7     		b	.L33
 1125              	.L37:
 586:Src/main.c    ****     {
 1126              		.loc 1 586 32 discriminator 3 view .LVU361
 1127              	.LBE11:
ARM GAS  /tmp/ccs4PBQh.s 			page 34


 589:Src/main.c    ****     }
 590:Src/main.c    ****   }
 591:Src/main.c    **** 
 592:Src/main.c    ****   return result;
 593:Src/main.c    **** }
 1128              		.loc 1 593 1 view .LVU362
 1129 0024 7047     		bx	lr
 1130              		.cfi_endproc
 1131              	.LFE152:
 1133              		.section	.text.bin_dec,"ax",%progbits
 1134              		.align	1
 1135              		.global	bin_dec
 1136              		.syntax unified
 1137              		.thumb
 1138              		.thumb_func
 1139              		.fpu fpv5-d16
 1141              	bin_dec:
 1142              	.LVL62:
 1143              	.LFB151:
 564:Src/main.c    **** 
 1144              		.loc 1 564 1 is_stmt 1 view -0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 564:Src/main.c    **** 
 1148              		.loc 1 564 1 is_stmt 0 view .LVU364
 1149 0000 70B5     		push	{r4, r5, r6, lr}
 1150              	.LCFI16:
 1151              		.cfi_def_cfa_offset 16
 1152              		.cfi_offset 4, -16
 1153              		.cfi_offset 5, -12
 1154              		.cfi_offset 6, -8
 1155              		.cfi_offset 14, -4
 1156 0002 2DED028B 		vpush.64	{d8}
 1157              	.LCFI17:
 1158              		.cfi_def_cfa_offset 24
 1159              		.cfi_offset 80, -24
 1160              		.cfi_offset 81, -20
 1161 0006 0646     		mov	r6, r0
 1162 0008 0D46     		mov	r5, r1
 566:Src/main.c    **** 
 1163              		.loc 1 566 3 is_stmt 1 view .LVU365
 1164              	.LVL63:
 568:Src/main.c    ****   {
 1165              		.loc 1 568 3 view .LVU366
 1166              	.LBB12:
 568:Src/main.c    ****   {
 1167              		.loc 1 568 8 view .LVU367
 568:Src/main.c    ****   {
 1168              		.loc 1 568 12 is_stmt 0 view .LVU368
 1169 000a 0024     		movs	r4, #0
 1170              	.LBE12:
 566:Src/main.c    **** 
 1171              		.loc 1 566 7 view .LVU369
 1172 000c 08EE104A 		vmov	s16, r4	@ int
 1173              	.LBB13:
 568:Src/main.c    ****   {
ARM GAS  /tmp/ccs4PBQh.s 			page 35


 1174              		.loc 1 568 3 view .LVU370
 1175 0010 00E0     		b	.L39
 1176              	.LVL64:
 1177              	.L40:
 568:Src/main.c    ****   {
 1178              		.loc 1 568 29 is_stmt 1 discriminator 2 view .LVU371
 568:Src/main.c    ****   {
 1179              		.loc 1 568 30 is_stmt 0 discriminator 2 view .LVU372
 1180 0012 0134     		adds	r4, r4, #1
 1181              	.LVL65:
 1182              	.L39:
 568:Src/main.c    ****   {
 1183              		.loc 1 568 19 is_stmt 1 discriminator 1 view .LVU373
 568:Src/main.c    ****   {
 1184              		.loc 1 568 3 is_stmt 0 discriminator 1 view .LVU374
 1185 0014 AC42     		cmp	r4, r5
 1186 0016 0FDA     		bge	.L43
 570:Src/main.c    ****     {
 1187              		.loc 1 570 5 is_stmt 1 view .LVU375
 570:Src/main.c    ****     {
 1188              		.loc 1 570 12 is_stmt 0 view .LVU376
 1189 0018 56F82430 		ldr	r3, [r6, r4, lsl #2]
 570:Src/main.c    ****     {
 1190              		.loc 1 570 8 view .LVU377
 1191 001c 012B     		cmp	r3, #1
 1192 001e F8D1     		bne	.L40
 572:Src/main.c    ****     }
 1193              		.loc 1 572 7 is_stmt 1 view .LVU378
 572:Src/main.c    ****     }
 1194              		.loc 1 572 28 is_stmt 0 view .LVU379
 1195 0020 291B     		subs	r1, r5, r4
 572:Src/main.c    ****     }
 1196              		.loc 1 572 14 view .LVU380
 1197 0022 0139     		subs	r1, r1, #1
 1198 0024 0220     		movs	r0, #2
 1199 0026 FFF7FEFF 		bl	Power
 1200              	.LVL66:
 572:Src/main.c    ****     }
 1201              		.loc 1 572 11 view .LVU381
 1202 002a B8EEC87B 		vcvt.f64.s32	d7, s16
 1203 002e 37EE007B 		vadd.f64	d7, d7, d0
 1204 0032 BDEEC78B 		vcvt.s32.f64	s16, d7
 1205              	.LVL67:
 572:Src/main.c    ****     }
 1206              		.loc 1 572 11 view .LVU382
 1207 0036 ECE7     		b	.L40
 1208              	.L43:
 572:Src/main.c    ****     }
 1209              		.loc 1 572 11 view .LVU383
 1210              	.LBE13:
 575:Src/main.c    **** }
 1211              		.loc 1 575 3 is_stmt 1 view .LVU384
 576:Src/main.c    **** 
 1212              		.loc 1 576 1 is_stmt 0 view .LVU385
 1213 0038 18EE100A 		vmov	r0, s16	@ int
 1214 003c BDEC028B 		vldm	sp!, {d8}
 1215              	.LCFI18:
ARM GAS  /tmp/ccs4PBQh.s 			page 36


 1216              		.cfi_restore 80
 1217              		.cfi_restore 81
 1218              		.cfi_def_cfa_offset 16
 1219              	.LVL68:
 576:Src/main.c    **** 
 1220              		.loc 1 576 1 view .LVU386
 1221 0040 70BD     		pop	{r4, r5, r6, pc}
 576:Src/main.c    **** 
 1222              		.loc 1 576 1 view .LVU387
 1223              		.cfi_endproc
 1224              	.LFE151:
 1226              		.section	.rodata.read_steer_SSI.str1.4,"aMS",%progbits,1
 1227              		.align	2
 1228              	.LC1:
 1229 0000 0D0A7265 		.ascii	"\015\012resolution = %u \012\000"
 1229      736F6C75 
 1229      74696F6E 
 1229      203D2025 
 1229      75200A00 
 1230              		.section	.text.read_steer_SSI,"ax",%progbits
 1231              		.align	1
 1232              		.global	read_steer_SSI
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1236              		.fpu fpv5-d16
 1238              	read_steer_SSI:
 1239              	.LVL69:
 1240              	.LFB149:
 500:Src/main.c    ****   // check if the status of clock given as input for the encoder
 1241              		.loc 1 500 1 is_stmt 1 view -0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 256
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 500:Src/main.c    ****   // check if the status of clock given as input for the encoder
 1245              		.loc 1 500 1 is_stmt 0 view .LVU389
 1246 0000 30B5     		push	{r4, r5, lr}
 1247              	.LCFI19:
 1248              		.cfi_def_cfa_offset 12
 1249              		.cfi_offset 4, -12
 1250              		.cfi_offset 5, -8
 1251              		.cfi_offset 14, -4
 1252 0002 C1B0     		sub	sp, sp, #260
 1253              	.LCFI20:
 1254              		.cfi_def_cfa_offset 272
 1255 0004 0446     		mov	r4, r0
 502:Src/main.c    ****   {
 1256              		.loc 1 502 3 is_stmt 1 view .LVU390
 502:Src/main.c    ****   {
 1257              		.loc 1 502 12 is_stmt 0 view .LVU391
 1258 0006 C36C     		ldr	r3, [r0, #76]
 502:Src/main.c    ****   {
 1259              		.loc 1 502 32 view .LVU392
 1260 0008 0168     		ldr	r1, [r0]
 502:Src/main.c    ****   {
 1261              		.loc 1 502 6 view .LVU393
 1262 000a 8B42     		cmp	r3, r1
ARM GAS  /tmp/ccs4PBQh.s 			page 37


 1263 000c 1FDA     		bge	.L45
 505:Src/main.c    ****     {
 1264              		.loc 1 505 5 is_stmt 1 view .LVU394
 505:Src/main.c    ****     {
 1265              		.loc 1 505 14 is_stmt 0 view .LVU395
 1266 000e 0369     		ldr	r3, [r0, #16]
 505:Src/main.c    ****     {
 1267              		.loc 1 505 8 view .LVU396
 1268 0010 93B1     		cbz	r3, .L46
 509:Src/main.c    ****       HAL_GPIO_WritePin(steer->ClockPinName, steer->data_size, GPIO_PIN_RESET);
 1269              		.loc 1 509 7 is_stmt 1 view .LVU397
 509:Src/main.c    ****       HAL_GPIO_WritePin(steer->ClockPinName, steer->data_size, GPIO_PIN_RESET);
 1270              		.loc 1 509 27 is_stmt 0 view .LVU398
 1271 0012 0022     		movs	r2, #0
 1272 0014 0261     		str	r2, [r0, #16]
 510:Src/main.c    ****       // In the first falling there is no data, so we start reading only from the second falling
 1273              		.loc 1 510 7 is_stmt 1 view .LVU399
 1274 0016 89B2     		uxth	r1, r1
 1275 0018 806E     		ldr	r0, [r0, #104]
 1276              	.LVL70:
 510:Src/main.c    ****       // In the first falling there is no data, so we start reading only from the second falling
 1277              		.loc 1 510 7 is_stmt 0 view .LVU400
 1278 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1279              	.LVL71:
 512:Src/main.c    ****       {
 1280              		.loc 1 512 7 is_stmt 1 view .LVU401
 512:Src/main.c    ****       {
 1281              		.loc 1 512 16 is_stmt 0 view .LVU402
 1282 001e E36C     		ldr	r3, [r4, #76]
 512:Src/main.c    ****       {
 1283              		.loc 1 512 10 view .LVU403
 1284 0020 002B     		cmp	r3, #0
 1285 0022 12DD     		ble	.L44
 514:Src/main.c    ****       }
 1286              		.loc 1 514 9 is_stmt 1 view .LVU404
 514:Src/main.c    ****       }
 1287              		.loc 1 514 42 is_stmt 0 view .LVU405
 1288 0024 B4F87210 		ldrh	r1, [r4, #114]
 1289 0028 E06E     		ldr	r0, [r4, #108]
 1290 002a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1291              	.LVL72:
 514:Src/main.c    ****       }
 1292              		.loc 1 514 26 view .LVU406
 1293 002e E36C     		ldr	r3, [r4, #76]
 514:Src/main.c    ****       }
 1294              		.loc 1 514 40 view .LVU407
 1295 0030 0633     		adds	r3, r3, #6
 1296 0032 44F82300 		str	r0, [r4, r3, lsl #2]
 1297 0036 08E0     		b	.L44
 1298              	.LVL73:
 1299              	.L46:
 520:Src/main.c    ****       HAL_GPIO_WritePin(steer->ClockPinName, steer->data_size, GPIO_PIN_SET);
 1300              		.loc 1 520 7 is_stmt 1 view .LVU408
 520:Src/main.c    ****       HAL_GPIO_WritePin(steer->ClockPinName, steer->data_size, GPIO_PIN_SET);
 1301              		.loc 1 520 27 is_stmt 0 view .LVU409
 1302 0038 0122     		movs	r2, #1
 1303 003a 0261     		str	r2, [r0, #16]
ARM GAS  /tmp/ccs4PBQh.s 			page 38


 521:Src/main.c    ****       steer->data_count++;
 1304              		.loc 1 521 7 is_stmt 1 view .LVU410
 1305 003c 89B2     		uxth	r1, r1
 1306 003e 806E     		ldr	r0, [r0, #104]
 1307              	.LVL74:
 521:Src/main.c    ****       steer->data_count++;
 1308              		.loc 1 521 7 is_stmt 0 view .LVU411
 1309 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1310              	.LVL75:
 522:Src/main.c    ****     }
 1311              		.loc 1 522 7 is_stmt 1 view .LVU412
 522:Src/main.c    ****     }
 1312              		.loc 1 522 12 is_stmt 0 view .LVU413
 1313 0044 E36C     		ldr	r3, [r4, #76]
 522:Src/main.c    ****     }
 1314              		.loc 1 522 24 view .LVU414
 1315 0046 0133     		adds	r3, r3, #1
 1316 0048 E364     		str	r3, [r4, #76]
 1317              	.LVL76:
 1318              	.L44:
 551:Src/main.c    **** 
 1319              		.loc 1 551 1 view .LVU415
 1320 004a 41B0     		add	sp, sp, #260
 1321              	.LCFI21:
 1322              		.cfi_remember_state
 1323              		.cfi_def_cfa_offset 12
 1324              		@ sp needed
 1325 004c 30BD     		pop	{r4, r5, pc}
 1326              	.LVL77:
 1327              	.L45:
 1328              	.LCFI22:
 1329              		.cfi_restore_state
 525:Src/main.c    ****   {
 1330              		.loc 1 525 8 is_stmt 1 view .LVU416
 525:Src/main.c    ****   {
 1331              		.loc 1 525 30 is_stmt 0 view .LVU417
 1332 004e C164     		str	r1, [r0, #76]
 525:Src/main.c    ****   {
 1333              		.loc 1 525 11 view .LVU418
 1334 0050 09B3     		cbz	r1, .L48
 1335              	.LBB14:
 532:Src/main.c    **** 
 1336              		.loc 1 532 5 is_stmt 1 view .LVU419
 532:Src/main.c    **** 
 1337              		.loc 1 532 29 is_stmt 0 view .LVU420
 1338 0052 1830     		adds	r0, r0, #24
 1339              	.LVL78:
 532:Src/main.c    **** 
 1340              		.loc 1 532 29 view .LVU421
 1341 0054 FFF7FEFF 		bl	bin_dec
 1342              	.LVL79:
 532:Src/main.c    **** 
 1343              		.loc 1 532 27 view .LVU422
 1344 0058 2066     		str	r0, [r4, #96]
 534:Src/main.c    ****     sprintf(resolution_mes, "\r\nresolution = %u \n", steer->converted_data);
 1345              		.loc 1 534 5 is_stmt 1 view .LVU423
 534:Src/main.c    ****     sprintf(resolution_mes, "\r\nresolution = %u \n", steer->converted_data);
ARM GAS  /tmp/ccs4PBQh.s 			page 39


 1346              		.loc 1 534 10 is_stmt 0 view .LVU424
 1347 005a 0025     		movs	r5, #0
 1348 005c 0095     		str	r5, [sp]
 1349 005e FC22     		movs	r2, #252
 1350 0060 2946     		mov	r1, r5
 1351 0062 01A8     		add	r0, sp, #4
 1352 0064 FFF7FEFF 		bl	memset
 1353              	.LVL80:
 535:Src/main.c    ****     print(&huart3, resolution_mes);
 1354              		.loc 1 535 5 is_stmt 1 view .LVU425
 1355 0068 226E     		ldr	r2, [r4, #96]
 1356 006a 0C49     		ldr	r1, .L50
 1357 006c 6846     		mov	r0, sp
 1358 006e FFF7FEFF 		bl	sprintf
 1359              	.LVL81:
 536:Src/main.c    **** 
 1360              		.loc 1 536 5 view .LVU426
 1361 0072 6946     		mov	r1, sp
 1362 0074 0A48     		ldr	r0, .L50+4
 1363 0076 FFF7FEFF 		bl	print
 1364              	.LVL82:
 539:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 1365              		.loc 1 539 5 view .LVU427
 1366 007a 0A4C     		ldr	r4, .L50+8
 1367              	.LVL83:
 539:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 1368              		.loc 1 539 5 is_stmt 0 view .LVU428
 1369 007c 2046     		mov	r0, r4
 1370 007e FFF7FEFF 		bl	HAL_TIM_Base_Stop
 1371              	.LVL84:
 541:Src/main.c    **** 
 1372              		.loc 1 541 5 is_stmt 1 view .LVU429
 1373 0082 2368     		ldr	r3, [r4]
 1374 0084 5D62     		str	r5, [r3, #36]
 543:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim7);
 1375              		.loc 1 543 5 view .LVU430
 1376 0086 084C     		ldr	r4, .L50+12
 1377 0088 2046     		mov	r0, r4
 1378 008a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1379              	.LVL85:
 544:Src/main.c    ****   }
 1380              		.loc 1 544 5 view .LVU431
 1381 008e 2046     		mov	r0, r4
 1382 0090 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1383              	.LVL86:
 1384              	.LBE14:
 1385 0094 D9E7     		b	.L44
 1386              	.LVL87:
 1387              	.L48:
 549:Src/main.c    ****   }
 1388              		.loc 1 549 5 view .LVU432
 1389 0096 FFF7FEFF 		bl	check_steer_error
 1390              	.LVL88:
 551:Src/main.c    **** 
 1391              		.loc 1 551 1 is_stmt 0 view .LVU433
 1392 009a D6E7     		b	.L44
 1393              	.L51:
ARM GAS  /tmp/ccs4PBQh.s 			page 40


 1394              		.align	2
 1395              	.L50:
 1396 009c 00000000 		.word	.LC1
 1397 00a0 00000000 		.word	huart3
 1398 00a4 00000000 		.word	htim6
 1399 00a8 00000000 		.word	htim7
 1400              		.cfi_endproc
 1401              	.LFE149:
 1403              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 1404              		.align	2
 1405              	.LC2:
 1406 0000 0D0A2054 		.ascii	"\015\012 TIM6 = %d -- TIM7 = %d\000"
 1406      494D3620 
 1406      3D202564 
 1406      202D2D20 
 1406      54494D37 
 1407              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1408              		.align	1
 1409              		.global	HAL_TIM_PeriodElapsedCallback
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1413              		.fpu fpv5-d16
 1415              	HAL_TIM_PeriodElapsedCallback:
 1416              	.LVL89:
 1417              	.LFB148:
 472:Src/main.c    ****   char mes[200] = "";
 1418              		.loc 1 472 1 is_stmt 1 view -0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 200
 1421              		@ frame_needed = 0, uses_anonymous_args = 0
 472:Src/main.c    ****   char mes[200] = "";
 1422              		.loc 1 472 1 is_stmt 0 view .LVU435
 1423 0000 30B5     		push	{r4, r5, lr}
 1424              	.LCFI23:
 1425              		.cfi_def_cfa_offset 12
 1426              		.cfi_offset 4, -12
 1427              		.cfi_offset 5, -8
 1428              		.cfi_offset 14, -4
 1429 0002 B3B0     		sub	sp, sp, #204
 1430              	.LCFI24:
 1431              		.cfi_def_cfa_offset 216
 1432 0004 0446     		mov	r4, r0
 473:Src/main.c    ****   int val = -1;
 1433              		.loc 1 473 3 is_stmt 1 view .LVU436
 473:Src/main.c    ****   int val = -1;
 1434              		.loc 1 473 8 is_stmt 0 view .LVU437
 1435 0006 0021     		movs	r1, #0
 1436 0008 0091     		str	r1, [sp]
 1437 000a C422     		movs	r2, #196
 1438 000c 01A8     		add	r0, sp, #4
 1439              	.LVL90:
 473:Src/main.c    ****   int val = -1;
 1440              		.loc 1 473 8 view .LVU438
 1441 000e FFF7FEFF 		bl	memset
 1442              	.LVL91:
 474:Src/main.c    ****   int val2 = -1;
ARM GAS  /tmp/ccs4PBQh.s 			page 41


 1443              		.loc 1 474 3 is_stmt 1 view .LVU439
 475:Src/main.c    **** 
 1444              		.loc 1 475 3 view .LVU440
 477:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 1445              		.loc 1 477 3 view .LVU441
 477:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 1446              		.loc 1 477 9 is_stmt 0 view .LVU442
 1447 0012 134B     		ldr	r3, .L58
 1448 0014 1B68     		ldr	r3, [r3]
 1449 0016 5A6A     		ldr	r2, [r3, #36]
 1450              	.LVL92:
 478:Src/main.c    ****   sprintf(mes, "\r\n TIM6 = %d -- TIM7 = %d", val, val2);
 1451              		.loc 1 478 3 is_stmt 1 view .LVU443
 478:Src/main.c    ****   sprintf(mes, "\r\n TIM6 = %d -- TIM7 = %d", val, val2);
 1452              		.loc 1 478 10 is_stmt 0 view .LVU444
 1453 0018 124D     		ldr	r5, .L58+4
 1454 001a 2B68     		ldr	r3, [r5]
 1455 001c 5B6A     		ldr	r3, [r3, #36]
 1456              	.LVL93:
 479:Src/main.c    ****   print(&huart3, mes);
 1457              		.loc 1 479 3 is_stmt 1 view .LVU445
 1458 001e 1249     		ldr	r1, .L58+8
 1459 0020 6846     		mov	r0, sp
 1460 0022 FFF7FEFF 		bl	sprintf
 1461              	.LVL94:
 480:Src/main.c    ****   /**
 1462              		.loc 1 480 3 view .LVU446
 1463 0026 6946     		mov	r1, sp
 1464 0028 1048     		ldr	r0, .L58+12
 1465 002a FFF7FEFF 		bl	print
 1466              	.LVL95:
 484:Src/main.c    ****   {
 1467              		.loc 1 484 3 view .LVU447
 484:Src/main.c    ****   {
 1468              		.loc 1 484 6 is_stmt 0 view .LVU448
 1469 002e AC42     		cmp	r4, r5
 1470 0030 04D0     		beq	.L56
 1471              	.L53:
 493:Src/main.c    ****   {
 1472              		.loc 1 493 3 is_stmt 1 view .LVU449
 493:Src/main.c    ****   {
 1473              		.loc 1 493 6 is_stmt 0 view .LVU450
 1474 0032 0B4B     		ldr	r3, .L58
 1475 0034 9C42     		cmp	r4, r3
 1476 0036 0FD0     		beq	.L57
 1477              	.L52:
 497:Src/main.c    **** 
 1478              		.loc 1 497 1 view .LVU451
 1479 0038 33B0     		add	sp, sp, #204
 1480              	.LCFI25:
 1481              		.cfi_remember_state
 1482              		.cfi_def_cfa_offset 12
 1483              		@ sp needed
 1484 003a 30BD     		pop	{r4, r5, pc}
 1485              	.LVL96:
 1486              	.L56:
 1487              	.LCFI26:
ARM GAS  /tmp/ccs4PBQh.s 			page 42


 1488              		.cfi_restore_state
 486:Src/main.c    ****     // The next line it is not necessary but can be a good practice
 1489              		.loc 1 486 5 is_stmt 1 view .LVU452
 1490 003c 2846     		mov	r0, r5
 1491 003e FFF7FEFF 		bl	HAL_TIM_Base_Stop
 1492              	.LVL97:
 488:Src/main.c    ****     HAL_TIM_Base_Start(&htim6);
 1493              		.loc 1 488 5 view .LVU453
 1494 0042 2B68     		ldr	r3, [r5]
 1495 0044 0022     		movs	r2, #0
 1496 0046 5A62     		str	r2, [r3, #36]
 489:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim6);
 1497              		.loc 1 489 5 view .LVU454
 1498 0048 054D     		ldr	r5, .L58
 1499 004a 2846     		mov	r0, r5
 1500 004c FFF7FEFF 		bl	HAL_TIM_Base_Start
 1501              	.LVL98:
 490:Src/main.c    ****   }
 1502              		.loc 1 490 5 view .LVU455
 1503 0050 2846     		mov	r0, r5
 1504 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1505              	.LVL99:
 1506 0056 ECE7     		b	.L53
 1507              	.L57:
 495:Src/main.c    ****   }
 1508              		.loc 1 495 5 view .LVU456
 1509 0058 0548     		ldr	r0, .L58+16
 1510 005a FFF7FEFF 		bl	read_steer_SSI
 1511              	.LVL100:
 497:Src/main.c    **** 
 1512              		.loc 1 497 1 is_stmt 0 view .LVU457
 1513 005e EBE7     		b	.L52
 1514              	.L59:
 1515              		.align	2
 1516              	.L58:
 1517 0060 00000000 		.word	htim6
 1518 0064 00000000 		.word	htim7
 1519 0068 00000000 		.word	.LC2
 1520 006c 00000000 		.word	huart3
 1521 0070 00000000 		.word	steer
 1522              		.cfi_endproc
 1523              	.LFE148:
 1525              		.section	.text.Error_Handler,"ax",%progbits
 1526              		.align	1
 1527              		.global	Error_Handler
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1531              		.fpu fpv5-d16
 1533              	Error_Handler:
 1534              	.LFB153:
 594:Src/main.c    **** 
 595:Src/main.c    **** /* USER CODE END 4 */
 596:Src/main.c    **** 
 597:Src/main.c    **** /**
 598:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 599:Src/main.c    ****   * @retval None
ARM GAS  /tmp/ccs4PBQh.s 			page 43


 600:Src/main.c    ****   */
 601:Src/main.c    **** void Error_Handler(void)
 602:Src/main.c    **** {
 1535              		.loc 1 602 1 is_stmt 1 view -0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539              		@ link register save eliminated.
 603:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 604:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 605:Src/main.c    **** 
 606:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 607:Src/main.c    **** }
 1540              		.loc 1 607 1 view .LVU459
 1541 0000 7047     		bx	lr
 1542              		.cfi_endproc
 1543              	.LFE153:
 1545              		.global	hmessage
 1546              		.comm	steer,116,4
 1547              		.comm	huart3,128,4
 1548              		.comm	htim7,64,4
 1549              		.comm	htim6,64,4
 1550              		.section	.bss.hmessage,"aw",%nobits
 1551              		.align	2
 1554              	hmessage:
 1555 0000 00000000 		.space	256
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1556              		.text
 1557              	.Letext0:
 1558              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1559              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1560              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1561              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1562              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1563              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1564              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1565              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1566              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1567              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1568              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1569              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1570              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1571              		.file 15 "<built-in>"
 1572              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1573              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
ARM GAS  /tmp/ccs4PBQh.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccs4PBQh.s:17     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccs4PBQh.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccs4PBQh.s:400    .text.MX_GPIO_Init:00000000000001b8 $d
     /tmp/ccs4PBQh.s:411    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccs4PBQh.s:417    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccs4PBQh.s:484    .text.MX_TIM6_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccs4PBQh.s:490    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccs4PBQh.s:496    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccs4PBQh.s:562    .text.MX_TIM7_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim7
     /tmp/ccs4PBQh.s:568    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccs4PBQh.s:574    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccs4PBQh.s:629    .text.MX_USART3_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart3
     /tmp/ccs4PBQh.s:635    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccs4PBQh.s:642    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccs4PBQh.s:797    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccs4PBQh.s:803    .text.main:0000000000000000 $t
     /tmp/ccs4PBQh.s:810    .text.main:0000000000000000 main
     /tmp/ccs4PBQh.s:961    .text.main:00000000000000c4 $d
                            *COM*:0000000000000074 steer
     /tmp/ccs4PBQh.s:971    .text.print:0000000000000000 $t
     /tmp/ccs4PBQh.s:978    .text.print:0000000000000000 print
     /tmp/ccs4PBQh.s:1016   .rodata.check_steer_error.str1.4:0000000000000000 $d
     /tmp/ccs4PBQh.s:1020   .text.check_steer_error:0000000000000000 $t
     /tmp/ccs4PBQh.s:1027   .text.check_steer_error:0000000000000000 check_steer_error
     /tmp/ccs4PBQh.s:1067   .text.check_steer_error:0000000000000020 $d
     /tmp/ccs4PBQh.s:1073   .text.Power:0000000000000000 $t
     /tmp/ccs4PBQh.s:1080   .text.Power:0000000000000000 Power
     /tmp/ccs4PBQh.s:1134   .text.bin_dec:0000000000000000 $t
     /tmp/ccs4PBQh.s:1141   .text.bin_dec:0000000000000000 bin_dec
     /tmp/ccs4PBQh.s:1227   .rodata.read_steer_SSI.str1.4:0000000000000000 $d
     /tmp/ccs4PBQh.s:1231   .text.read_steer_SSI:0000000000000000 $t
     /tmp/ccs4PBQh.s:1238   .text.read_steer_SSI:0000000000000000 read_steer_SSI
     /tmp/ccs4PBQh.s:1396   .text.read_steer_SSI:000000000000009c $d
     /tmp/ccs4PBQh.s:1404   .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:0000000000000000 $d
     /tmp/ccs4PBQh.s:1408   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccs4PBQh.s:1415   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccs4PBQh.s:1517   .text.HAL_TIM_PeriodElapsedCallback:0000000000000060 $d
     /tmp/ccs4PBQh.s:1526   .text.Error_Handler:0000000000000000 $t
     /tmp/ccs4PBQh.s:1533   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccs4PBQh.s:1554   .bss.hmessage:0000000000000000 hmessage
     /tmp/ccs4PBQh.s:1551   .bss.hmessage:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
ARM GAS  /tmp/ccs4PBQh.s 			page 45


HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_TIM_Base_Start
HAL_TIM_Base_Start_IT
HAL_Delay
strlen
HAL_UART_Transmit
HAL_GPIO_ReadPin
sprintf
HAL_TIM_Base_Stop
