ARM GAS  /tmp/ccgQJtWE.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_GPIO_Init:
  25              	.LFB149:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "Eagle_TRT.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** #include "string.h"
  26:Src/main.c    **** #include "stdio.h"
  27:Src/main.c    **** #include "stdlib.h"
  28:Src/main.c    **** #include <inttypes.h>
  29:Src/main.c    **** #include "stm32f7xx_hal_gpio.h"
  30:Src/main.c    **** #include "stm32f7xx_it.h"
  31:Src/main.c    **** #include <math.h>
  32:Src/main.c    **** 
ARM GAS  /tmp/ccgQJtWE.s 			page 2


  33:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN Includes */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END Includes */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PTD */
  40:Src/main.c    **** typedef struct
  41:Src/main.c    **** {
  42:Src/main.c    ****   int data_size;         // Bits sent from the sensor. Exclude the error flag
  43:Src/main.c    ****   int error_flag;        // Return value if the encoder has errors
  44:Src/main.c    ****   int error_data_status; // Here we save the actual signal from the encoder
  45:Src/main.c    ****   int clock_period;      // Period between each data frame readed in milliseconds
  46:Src/main.c    ****   int clock_status;      // Here the status of the clock is saved
  47:Src/main.c    ****   int data_freq_Hz;      // Reading speed of the data frame
  48:Src/main.c    ****   int data[12];          // Binary value of the data readed from the steer encoder
  49:Src/main.c    ****   int steer_zero;        // In this variable will be saved the value for the position zero
  50:Src/main.c    ****   int data_count;        // Counter used to check when the buffer is full
  51:Src/main.c    **** 
  52:Src/main.c    ****   float max_delta_angle;
  53:Src/main.c    ****   float frequency;
  54:Src/main.c    ****   int frequency_timer_Hz;
  55:Src/main.c    **** 
  56:Src/main.c    ****   int angle;          // First angle calculated
  57:Src/main.c    ****   int converted_data; // Angle data
  58:Src/main.c    **** 
  59:Src/main.c    ****   TIM_HandleTypeDef *TimerInstance; // Instance to the timer used to generate the clock to read the
  60:Src/main.c    **** 
  61:Src/main.c    ****   GPIO_TypeDef *ClockPinName;
  62:Src/main.c    ****   GPIO_TypeDef *DataPinName;
  63:Src/main.c    ****   uint16_t ClockPinNumber;
  64:Src/main.c    ****   uint16_t DataPinNumber;
  65:Src/main.c    **** 
  66:Src/main.c    **** } steer_enc;
  67:Src/main.c    **** /* USER CODE END PTD */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  70:Src/main.c    **** /* USER CODE BEGIN PD */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PD */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  75:Src/main.c    **** /* USER CODE BEGIN PM */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PM */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    **** TIM_HandleTypeDef htim6;
  82:Src/main.c    **** TIM_HandleTypeDef htim7;
  83:Src/main.c    **** 
  84:Src/main.c    **** UART_HandleTypeDef huart3;
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE BEGIN PV */
  87:Src/main.c    **** // steer_enc steer;
  88:Src/main.c    **** extern enc_stc enc;
  89:Src/main.c    **** TIM_HandleTypeDef a_TimerInstance6 = {.Instance = TIM6};
ARM GAS  /tmp/ccgQJtWE.s 			page 3


  90:Src/main.c    **** TIM_HandleTypeDef a_TimerInstance7 = {.Instance = TIM7};
  91:Src/main.c    **** 
  92:Src/main.c    **** char hmessage[256] = "";
  93:Src/main.c    **** 
  94:Src/main.c    **** /* USER CODE END PV */
  95:Src/main.c    **** 
  96:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  97:Src/main.c    **** void SystemClock_Config(void);
  98:Src/main.c    **** static void MX_GPIO_Init(void);
  99:Src/main.c    **** static void MX_TIM6_Init(void);
 100:Src/main.c    **** static void MX_TIM7_Init(void);
 101:Src/main.c    **** static void MX_USART3_UART_Init(void);
 102:Src/main.c    **** /* USER CODE BEGIN PFP */
 103:Src/main.c    **** // void print(UART_HandleTypeDef *huart, char *text);
 104:Src/main.c    **** void read_steer_SSI();
 105:Src/main.c    **** void check_steer_error(steer_enc *steer);
 106:Src/main.c    **** // int bin_dec(int *bin, int size);
 107:Src/main.c    **** // double Power(int base, int expn);
 108:Src/main.c    **** /* USER CODE END PFP */
 109:Src/main.c    **** 
 110:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 111:Src/main.c    **** /* USER CODE BEGIN 0 */
 112:Src/main.c    **** int steer_enc_prescaler;
 113:Src/main.c    **** int encoder_counter;
 114:Src/main.c    **** int previous_millis;
 115:Src/main.c    **** int second_millis;
 116:Src/main.c    **** /* USER CODE END 0 */
 117:Src/main.c    **** 
 118:Src/main.c    **** /**
 119:Src/main.c    ****   * @brief  The application entry point.
 120:Src/main.c    ****   * @retval int
 121:Src/main.c    ****   */
 122:Src/main.c    **** int main(void)
 123:Src/main.c    **** {
 124:Src/main.c    ****   /* USER CODE BEGIN 1 */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE END 1 */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 131:Src/main.c    ****   HAL_Init();
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE BEGIN Init */
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* USER CODE END Init */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* Configure the system clock */
 138:Src/main.c    ****   SystemClock_Config();
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* USER CODE END SysInit */
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* Initialize all configured peripherals */
 145:Src/main.c    ****   MX_GPIO_Init();
 146:Src/main.c    ****   MX_TIM6_Init();
ARM GAS  /tmp/ccgQJtWE.s 			page 4


 147:Src/main.c    ****   MX_TIM7_Init();
 148:Src/main.c    ****   MX_USART3_UART_Init();
 149:Src/main.c    ****   /* USER CODE BEGIN 2 */
 150:Src/main.c    ****     steer_enc_prescaler = htim6.Init.Period;
 151:Src/main.c    ****     steer_enc_prescaler /= 3;
 152:Src/main.c    ****     steer_enc_prescaler /= 20;
 153:Src/main.c    ****     steer_enc_prescaler += 40;
 154:Src/main.c    ****     enc.steer_enc_prescaler = steer_enc_prescaler;
 155:Src/main.c    **** 
 156:Src/main.c    **** 
 157:Src/main.c    **** 
 158:Src/main.c    ****     enc.ClockPinName = GPIOC;
 159:Src/main.c    ****     enc.ClockPinNumber = GPIO_PIN_12;
 160:Src/main.c    ****     enc.DataPinName = GPIOD;
 161:Src/main.c    ****     enc.DataPinNumber = GPIO_PIN_2;
 162:Src/main.c    **** 
 163:Src/main.c    ****     enc.dx_wheel = 1;
 164:Src/main.c    ****     enc.interrupt_flag = 0;
 165:Src/main.c    ****     enc.TimerInstance = &a_TimerInstance6;
 166:Src/main.c    ****     enc.average_speed = 0;
 167:Src/main.c    ****     enc.wheel_diameter = 0.395;
 168:Src/main.c    ****     enc.data_size = 14;
 169:Src/main.c    ****     enc.clock_period = 2;
 170:Src/main.c    ****     enc.wheel_rotation = 0;
 171:Src/main.c    ****     enc.Km = 0;
 172:Src/main.c    **** 
 173:Src/main.c    **** 
 174:Src/main.c    ****   //Enabling the Timer that gives the time between each reading
 175:Src/main.c    ****   HAL_TIM_Base_Start(&htim7);
 176:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 177:Src/main.c    **** 
 178:Src/main.c    ****   enc.max_delta_angle = 90;
 179:Src/main.c    **** 
 180:Src/main.c    ****     enc.frequency = 80;
 181:Src/main.c    ****     HAL_GPIO_WritePin(enc.ClockPinName, enc.ClockPinNumber, GPIO_PIN_SET);
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* USER CODE END 2 */
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* Infinite loop */
 186:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 187:Src/main.c    ****   while (1)
 188:Src/main.c    ****   {
 189:Src/main.c    ****     /* USER CODE END WHILE */
 190:Src/main.c    **** 
 191:Src/main.c    ****     char altro[200] = "";
 192:Src/main.c    ****     int val = -1;
 193:Src/main.c    ****     int val2 = -1;
 194:Src/main.c    **** 
 195:Src/main.c    ****     val = __HAL_TIM_GET_COUNTER(&htim6);
 196:Src/main.c    ****     val2 = __HAL_TIM_GET_COUNTER(&htim7);
 197:Src/main.c    ****     sprintf(altro, "\r\n\n\n In the MAIN  =>  TIM6 = %d -- TIM7 = %d", val, val2);
 198:Src/main.c    ****     print(&huart3, altro);
 199:Src/main.c    **** 
 200:Src/main.c    ****     // sprintf(hmessage, "All working");
 201:Src/main.c    ****     // print(&huart3, hmessage);
 202:Src/main.c    ****     /* USER CODE BEGIN 3 */
 203:Src/main.c    ****   }
ARM GAS  /tmp/ccgQJtWE.s 			page 5


 204:Src/main.c    ****   /* USER CODE END 3 */
 205:Src/main.c    **** }
 206:Src/main.c    **** 
 207:Src/main.c    **** /**
 208:Src/main.c    ****   * @brief System Clock Configuration
 209:Src/main.c    ****   * @retval None
 210:Src/main.c    ****   */
 211:Src/main.c    **** void SystemClock_Config(void)
 212:Src/main.c    **** {
 213:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 214:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 215:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 216:Src/main.c    **** 
 217:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 218:Src/main.c    ****   */
 219:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 220:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 221:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 222:Src/main.c    ****   */
 223:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 224:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 225:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 232:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     Error_Handler();
 235:Src/main.c    ****   }
 236:Src/main.c    ****   /** Activate the Over-Drive mode 
 237:Src/main.c    ****   */
 238:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 239:Src/main.c    ****   {
 240:Src/main.c    ****     Error_Handler();
 241:Src/main.c    ****   }
 242:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 243:Src/main.c    ****   */
 244:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 245:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 246:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 247:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 249:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 250:Src/main.c    **** 
 251:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 252:Src/main.c    ****   {
 253:Src/main.c    ****     Error_Handler();
 254:Src/main.c    ****   }
 255:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 256:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 257:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 258:Src/main.c    ****   {
 259:Src/main.c    ****     Error_Handler();
 260:Src/main.c    ****   }
ARM GAS  /tmp/ccgQJtWE.s 			page 6


 261:Src/main.c    **** }
 262:Src/main.c    **** 
 263:Src/main.c    **** /**
 264:Src/main.c    ****   * @brief TIM6 Initialization Function
 265:Src/main.c    ****   * @param None
 266:Src/main.c    ****   * @retval None
 267:Src/main.c    ****   */
 268:Src/main.c    **** static void MX_TIM6_Init(void)
 269:Src/main.c    **** {
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 274:Src/main.c    **** 
 275:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 280:Src/main.c    ****   htim6.Instance = TIM6;
 281:Src/main.c    ****   htim6.Init.Prescaler = 54;
 282:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 283:Src/main.c    ****   htim6.Init.Period = 99;
 284:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 285:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     Error_Handler();
 288:Src/main.c    ****   }
 289:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 290:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 291:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 292:Src/main.c    ****   {
 293:Src/main.c    ****     Error_Handler();
 294:Src/main.c    ****   }
 295:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 298:Src/main.c    **** 
 299:Src/main.c    **** }
 300:Src/main.c    **** 
 301:Src/main.c    **** /**
 302:Src/main.c    ****   * @brief TIM7 Initialization Function
 303:Src/main.c    ****   * @param None
 304:Src/main.c    ****   * @retval None
 305:Src/main.c    ****   */
 306:Src/main.c    **** static void MX_TIM7_Init(void)
 307:Src/main.c    **** {
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 0 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END TIM7_Init 0 */
 312:Src/main.c    **** 
 313:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 1 */
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE END TIM7_Init 1 */
ARM GAS  /tmp/ccgQJtWE.s 			page 7


 318:Src/main.c    ****   htim7.Instance = TIM7;
 319:Src/main.c    ****   htim7.Init.Prescaler = 9000;
 320:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 321:Src/main.c    ****   htim7.Init.Period = 3000;
 322:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 323:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 324:Src/main.c    ****   {
 325:Src/main.c    ****     Error_Handler();
 326:Src/main.c    ****   }
 327:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 328:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 329:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 330:Src/main.c    ****   {
 331:Src/main.c    ****     Error_Handler();
 332:Src/main.c    ****   }
 333:Src/main.c    ****   /* USER CODE BEGIN TIM7_Init 2 */
 334:Src/main.c    **** 
 335:Src/main.c    ****   /* USER CODE END TIM7_Init 2 */
 336:Src/main.c    **** 
 337:Src/main.c    **** }
 338:Src/main.c    **** 
 339:Src/main.c    **** /**
 340:Src/main.c    ****   * @brief USART3 Initialization Function
 341:Src/main.c    ****   * @param None
 342:Src/main.c    ****   * @retval None
 343:Src/main.c    ****   */
 344:Src/main.c    **** static void MX_USART3_UART_Init(void)
 345:Src/main.c    **** {
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 0 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE END USART3_Init 0 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 352:Src/main.c    **** 
 353:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 354:Src/main.c    ****   huart3.Instance = USART3;
 355:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 356:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 357:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 358:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 359:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 360:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 361:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 362:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 363:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 364:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 365:Src/main.c    ****   {
 366:Src/main.c    ****     Error_Handler();
 367:Src/main.c    ****   }
 368:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 371:Src/main.c    **** 
 372:Src/main.c    **** }
 373:Src/main.c    **** 
 374:Src/main.c    **** /**
ARM GAS  /tmp/ccgQJtWE.s 			page 8


 375:Src/main.c    ****   * @brief GPIO Initialization Function
 376:Src/main.c    ****   * @param None
 377:Src/main.c    ****   * @retval None
 378:Src/main.c    ****   */
 379:Src/main.c    **** static void MX_GPIO_Init(void)
 380:Src/main.c    **** {
  27              		.loc 1 380 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 8DB0     		sub	sp, sp, #52
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 88
 381:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 381 3 view .LVU1
  47              		.loc 1 381 20 is_stmt 0 view .LVU2
  48 0006 0024     		movs	r4, #0
  49 0008 0794     		str	r4, [sp, #28]
  50 000a 0894     		str	r4, [sp, #32]
  51 000c 0994     		str	r4, [sp, #36]
  52 000e 0A94     		str	r4, [sp, #40]
  53 0010 0B94     		str	r4, [sp, #44]
 382:Src/main.c    **** 
 383:Src/main.c    ****   /* GPIO Ports Clock Enable */
 384:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 384 3 is_stmt 1 view .LVU3
  55              	.LBB2:
  56              		.loc 1 384 3 view .LVU4
  57              		.loc 1 384 3 view .LVU5
  58 0012 694B     		ldr	r3, .L3
  59 0014 1A6B     		ldr	r2, [r3, #48]
  60 0016 42F00402 		orr	r2, r2, #4
  61 001a 1A63     		str	r2, [r3, #48]
  62              		.loc 1 384 3 view .LVU6
  63 001c 1A6B     		ldr	r2, [r3, #48]
  64 001e 02F00402 		and	r2, r2, #4
  65 0022 0192     		str	r2, [sp, #4]
  66              		.loc 1 384 3 view .LVU7
  67 0024 019A     		ldr	r2, [sp, #4]
  68              	.LBE2:
  69              		.loc 1 384 3 view .LVU8
 385:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 385 3 view .LVU9
  71              	.LBB3:
  72              		.loc 1 385 3 view .LVU10
ARM GAS  /tmp/ccgQJtWE.s 			page 9


  73              		.loc 1 385 3 view .LVU11
  74 0026 1A6B     		ldr	r2, [r3, #48]
  75 0028 42F08002 		orr	r2, r2, #128
  76 002c 1A63     		str	r2, [r3, #48]
  77              		.loc 1 385 3 view .LVU12
  78 002e 1A6B     		ldr	r2, [r3, #48]
  79 0030 02F08002 		and	r2, r2, #128
  80 0034 0292     		str	r2, [sp, #8]
  81              		.loc 1 385 3 view .LVU13
  82 0036 029A     		ldr	r2, [sp, #8]
  83              	.LBE3:
  84              		.loc 1 385 3 view .LVU14
 386:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  85              		.loc 1 386 3 view .LVU15
  86              	.LBB4:
  87              		.loc 1 386 3 view .LVU16
  88              		.loc 1 386 3 view .LVU17
  89 0038 1A6B     		ldr	r2, [r3, #48]
  90 003a 42F00102 		orr	r2, r2, #1
  91 003e 1A63     		str	r2, [r3, #48]
  92              		.loc 1 386 3 view .LVU18
  93 0040 1A6B     		ldr	r2, [r3, #48]
  94 0042 02F00102 		and	r2, r2, #1
  95 0046 0392     		str	r2, [sp, #12]
  96              		.loc 1 386 3 view .LVU19
  97 0048 039A     		ldr	r2, [sp, #12]
  98              	.LBE4:
  99              		.loc 1 386 3 view .LVU20
 387:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 100              		.loc 1 387 3 view .LVU21
 101              	.LBB5:
 102              		.loc 1 387 3 view .LVU22
 103              		.loc 1 387 3 view .LVU23
 104 004a 1A6B     		ldr	r2, [r3, #48]
 105 004c 42F00202 		orr	r2, r2, #2
 106 0050 1A63     		str	r2, [r3, #48]
 107              		.loc 1 387 3 view .LVU24
 108 0052 1A6B     		ldr	r2, [r3, #48]
 109 0054 02F00202 		and	r2, r2, #2
 110 0058 0492     		str	r2, [sp, #16]
 111              		.loc 1 387 3 view .LVU25
 112 005a 049A     		ldr	r2, [sp, #16]
 113              	.LBE5:
 114              		.loc 1 387 3 view .LVU26
 388:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 115              		.loc 1 388 3 view .LVU27
 116              	.LBB6:
 117              		.loc 1 388 3 view .LVU28
 118              		.loc 1 388 3 view .LVU29
 119 005c 1A6B     		ldr	r2, [r3, #48]
 120 005e 42F00802 		orr	r2, r2, #8
 121 0062 1A63     		str	r2, [r3, #48]
 122              		.loc 1 388 3 view .LVU30
 123 0064 1A6B     		ldr	r2, [r3, #48]
 124 0066 02F00802 		and	r2, r2, #8
 125 006a 0592     		str	r2, [sp, #20]
 126              		.loc 1 388 3 view .LVU31
ARM GAS  /tmp/ccgQJtWE.s 			page 10


 127 006c 059A     		ldr	r2, [sp, #20]
 128              	.LBE6:
 129              		.loc 1 388 3 view .LVU32
 389:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 130              		.loc 1 389 3 view .LVU33
 131              	.LBB7:
 132              		.loc 1 389 3 view .LVU34
 133              		.loc 1 389 3 view .LVU35
 134 006e 1A6B     		ldr	r2, [r3, #48]
 135 0070 42F04002 		orr	r2, r2, #64
 136 0074 1A63     		str	r2, [r3, #48]
 137              		.loc 1 389 3 view .LVU36
 138 0076 1B6B     		ldr	r3, [r3, #48]
 139 0078 03F04003 		and	r3, r3, #64
 140 007c 0693     		str	r3, [sp, #24]
 141              		.loc 1 389 3 view .LVU37
 142 007e 069B     		ldr	r3, [sp, #24]
 143              	.LBE7:
 144              		.loc 1 389 3 view .LVU38
 390:Src/main.c    **** 
 391:Src/main.c    ****   /*Configure GPIO pin Output Level */
 392:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 145              		.loc 1 392 3 view .LVU39
 146 0080 DFF848B1 		ldr	fp, .L3+20
 147 0084 2246     		mov	r2, r4
 148 0086 44F28101 		movw	r1, #16513
 149 008a 5846     		mov	r0, fp
 150 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL0:
 393:Src/main.c    **** 
 394:Src/main.c    ****   /*Configure GPIO pin Output Level */
 395:Src/main.c    ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 152              		.loc 1 395 3 view .LVU40
 153 0090 4A4F     		ldr	r7, .L3+4
 154 0092 2246     		mov	r2, r4
 155 0094 4021     		movs	r1, #64
 156 0096 3846     		mov	r0, r7
 157 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL1:
 396:Src/main.c    **** 
 397:Src/main.c    ****   /*Configure GPIO pin Output Level */
 398:Src/main.c    ****   HAL_GPIO_WritePin(Clock_GPIO_Port, Clock_Pin, GPIO_PIN_RESET);
 159              		.loc 1 398 3 view .LVU41
 160 009c DFF83091 		ldr	r9, .L3+24
 161 00a0 2246     		mov	r2, r4
 162 00a2 4FF48051 		mov	r1, #4096
 163 00a6 4846     		mov	r0, r9
 164 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL2:
 399:Src/main.c    **** 
 400:Src/main.c    ****   /*Configure GPIO pin : USER_Btn_Pin */
 401:Src/main.c    ****   GPIO_InitStruct.Pin = USER_Btn_Pin;
 166              		.loc 1 401 3 view .LVU42
 167              		.loc 1 401 23 is_stmt 0 view .LVU43
 168 00ac 4FF40053 		mov	r3, #8192
 169 00b0 0793     		str	r3, [sp, #28]
 402:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
ARM GAS  /tmp/ccgQJtWE.s 			page 11


 170              		.loc 1 402 3 is_stmt 1 view .LVU44
 171              		.loc 1 402 24 is_stmt 0 view .LVU45
 172 00b2 434B     		ldr	r3, .L3+8
 173 00b4 0893     		str	r3, [sp, #32]
 403:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 403 3 is_stmt 1 view .LVU46
 175              		.loc 1 403 24 is_stmt 0 view .LVU47
 176 00b6 0994     		str	r4, [sp, #36]
 404:Src/main.c    ****   HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 177              		.loc 1 404 3 is_stmt 1 view .LVU48
 178 00b8 07A9     		add	r1, sp, #28
 179 00ba 4846     		mov	r0, r9
 180 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL3:
 405:Src/main.c    **** 
 406:Src/main.c    ****   /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
 407:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 182              		.loc 1 407 3 view .LVU49
 183              		.loc 1 407 23 is_stmt 0 view .LVU50
 184 00c0 3223     		movs	r3, #50
 185 00c2 0793     		str	r3, [sp, #28]
 408:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 186              		.loc 1 408 3 is_stmt 1 view .LVU51
 187              		.loc 1 408 24 is_stmt 0 view .LVU52
 188 00c4 0226     		movs	r6, #2
 189 00c6 0896     		str	r6, [sp, #32]
 409:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 409 3 is_stmt 1 view .LVU53
 191              		.loc 1 409 24 is_stmt 0 view .LVU54
 192 00c8 0994     		str	r4, [sp, #36]
 410:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 193              		.loc 1 410 3 is_stmt 1 view .LVU55
 194              		.loc 1 410 25 is_stmt 0 view .LVU56
 195 00ca 0325     		movs	r5, #3
 196 00cc 0A95     		str	r5, [sp, #40]
 411:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 197              		.loc 1 411 3 is_stmt 1 view .LVU57
 198              		.loc 1 411 29 is_stmt 0 view .LVU58
 199 00ce 4FF00B08 		mov	r8, #11
 200 00d2 CDF82C80 		str	r8, [sp, #44]
 412:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 201              		.loc 1 412 3 is_stmt 1 view .LVU59
 202 00d6 07A9     		add	r1, sp, #28
 203 00d8 4846     		mov	r0, r9
 204 00da FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL4:
 413:Src/main.c    **** 
 414:Src/main.c    ****   /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
 415:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 206              		.loc 1 415 3 view .LVU60
 207              		.loc 1 415 23 is_stmt 0 view .LVU61
 208 00de 8623     		movs	r3, #134
 209 00e0 0793     		str	r3, [sp, #28]
 416:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 210              		.loc 1 416 3 is_stmt 1 view .LVU62
 211              		.loc 1 416 24 is_stmt 0 view .LVU63
 212 00e2 0896     		str	r6, [sp, #32]
ARM GAS  /tmp/ccgQJtWE.s 			page 12


 417:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 213              		.loc 1 417 3 is_stmt 1 view .LVU64
 214              		.loc 1 417 24 is_stmt 0 view .LVU65
 215 00e4 0994     		str	r4, [sp, #36]
 418:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 216              		.loc 1 418 3 is_stmt 1 view .LVU66
 217              		.loc 1 418 25 is_stmt 0 view .LVU67
 218 00e6 0A95     		str	r5, [sp, #40]
 419:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 219              		.loc 1 419 3 is_stmt 1 view .LVU68
 220              		.loc 1 419 29 is_stmt 0 view .LVU69
 221 00e8 CDF82C80 		str	r8, [sp, #44]
 420:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 222              		.loc 1 420 3 is_stmt 1 view .LVU70
 223 00ec 07A9     		add	r1, sp, #28
 224 00ee 3548     		ldr	r0, .L3+12
 225 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 226              	.LVL5:
 421:Src/main.c    **** 
 422:Src/main.c    ****   /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
 423:Src/main.c    ****   GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 227              		.loc 1 423 3 view .LVU71
 228              		.loc 1 423 23 is_stmt 0 view .LVU72
 229 00f4 44F28103 		movw	r3, #16513
 230 00f8 0793     		str	r3, [sp, #28]
 424:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 231              		.loc 1 424 3 is_stmt 1 view .LVU73
 232              		.loc 1 424 24 is_stmt 0 view .LVU74
 233 00fa 4FF0010A 		mov	r10, #1
 234 00fe CDF820A0 		str	r10, [sp, #32]
 425:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 235              		.loc 1 425 3 is_stmt 1 view .LVU75
 236              		.loc 1 425 24 is_stmt 0 view .LVU76
 237 0102 0994     		str	r4, [sp, #36]
 426:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 238              		.loc 1 426 3 is_stmt 1 view .LVU77
 239              		.loc 1 426 25 is_stmt 0 view .LVU78
 240 0104 0A94     		str	r4, [sp, #40]
 427:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 241              		.loc 1 427 3 is_stmt 1 view .LVU79
 242 0106 07A9     		add	r1, sp, #28
 243 0108 5846     		mov	r0, fp
 244 010a FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
 428:Src/main.c    **** 
 429:Src/main.c    ****   /*Configure GPIO pin : RMII_TXD1_Pin */
 430:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 246              		.loc 1 430 3 view .LVU80
 247              		.loc 1 430 23 is_stmt 0 view .LVU81
 248 010e 4FF40053 		mov	r3, #8192
 249 0112 0793     		str	r3, [sp, #28]
 431:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 431 3 is_stmt 1 view .LVU82
 251              		.loc 1 431 24 is_stmt 0 view .LVU83
 252 0114 0896     		str	r6, [sp, #32]
 432:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 432 3 is_stmt 1 view .LVU84
ARM GAS  /tmp/ccgQJtWE.s 			page 13


 254              		.loc 1 432 24 is_stmt 0 view .LVU85
 255 0116 0994     		str	r4, [sp, #36]
 433:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 256              		.loc 1 433 3 is_stmt 1 view .LVU86
 257              		.loc 1 433 25 is_stmt 0 view .LVU87
 258 0118 0A95     		str	r5, [sp, #40]
 434:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 259              		.loc 1 434 3 is_stmt 1 view .LVU88
 260              		.loc 1 434 29 is_stmt 0 view .LVU89
 261 011a CDF82C80 		str	r8, [sp, #44]
 435:Src/main.c    ****   HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 262              		.loc 1 435 3 is_stmt 1 view .LVU90
 263 011e 07A9     		add	r1, sp, #28
 264 0120 5846     		mov	r0, fp
 265 0122 FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL7:
 436:Src/main.c    **** 
 437:Src/main.c    ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 438:Src/main.c    ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 267              		.loc 1 438 3 view .LVU91
 268              		.loc 1 438 23 is_stmt 0 view .LVU92
 269 0126 4023     		movs	r3, #64
 270 0128 0793     		str	r3, [sp, #28]
 439:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 271              		.loc 1 439 3 is_stmt 1 view .LVU93
 272              		.loc 1 439 24 is_stmt 0 view .LVU94
 273 012a CDF820A0 		str	r10, [sp, #32]
 440:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 274              		.loc 1 440 3 is_stmt 1 view .LVU95
 275              		.loc 1 440 24 is_stmt 0 view .LVU96
 276 012e 0994     		str	r4, [sp, #36]
 441:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 277              		.loc 1 441 3 is_stmt 1 view .LVU97
 278              		.loc 1 441 25 is_stmt 0 view .LVU98
 279 0130 0A94     		str	r4, [sp, #40]
 442:Src/main.c    ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 280              		.loc 1 442 3 is_stmt 1 view .LVU99
 281 0132 07A9     		add	r1, sp, #28
 282 0134 3846     		mov	r0, r7
 283 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 284              	.LVL8:
 443:Src/main.c    **** 
 444:Src/main.c    ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 445:Src/main.c    ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 285              		.loc 1 445 3 view .LVU100
 286              		.loc 1 445 23 is_stmt 0 view .LVU101
 287 013a 8023     		movs	r3, #128
 288 013c 0793     		str	r3, [sp, #28]
 446:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 289              		.loc 1 446 3 is_stmt 1 view .LVU102
 290              		.loc 1 446 24 is_stmt 0 view .LVU103
 291 013e 0894     		str	r4, [sp, #32]
 447:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 292              		.loc 1 447 3 is_stmt 1 view .LVU104
 293              		.loc 1 447 24 is_stmt 0 view .LVU105
 294 0140 0994     		str	r4, [sp, #36]
 448:Src/main.c    ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/ccgQJtWE.s 			page 14


 295              		.loc 1 448 3 is_stmt 1 view .LVU106
 296 0142 07A9     		add	r1, sp, #28
 297 0144 3846     		mov	r0, r7
 298 0146 FFF7FEFF 		bl	HAL_GPIO_Init
 299              	.LVL9:
 449:Src/main.c    **** 
 450:Src/main.c    ****   /*Configure GPIO pins : USB_SOF_Pin USB_ID_Pin USB_DM_Pin USB_DP_Pin */
 451:Src/main.c    ****   GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 300              		.loc 1 451 3 view .LVU107
 301              		.loc 1 451 23 is_stmt 0 view .LVU108
 302 014a 4FF4E853 		mov	r3, #7424
 303 014e 0793     		str	r3, [sp, #28]
 452:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 304              		.loc 1 452 3 is_stmt 1 view .LVU109
 305              		.loc 1 452 24 is_stmt 0 view .LVU110
 306 0150 0896     		str	r6, [sp, #32]
 453:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 307              		.loc 1 453 3 is_stmt 1 view .LVU111
 308              		.loc 1 453 24 is_stmt 0 view .LVU112
 309 0152 0994     		str	r4, [sp, #36]
 454:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 310              		.loc 1 454 3 is_stmt 1 view .LVU113
 311              		.loc 1 454 25 is_stmt 0 view .LVU114
 312 0154 0A95     		str	r5, [sp, #40]
 455:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 313              		.loc 1 455 3 is_stmt 1 view .LVU115
 314              		.loc 1 455 29 is_stmt 0 view .LVU116
 315 0156 0A23     		movs	r3, #10
 316 0158 0B93     		str	r3, [sp, #44]
 456:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 317              		.loc 1 456 3 is_stmt 1 view .LVU117
 318 015a 07A9     		add	r1, sp, #28
 319 015c 1948     		ldr	r0, .L3+12
 320 015e FFF7FEFF 		bl	HAL_GPIO_Init
 321              	.LVL10:
 457:Src/main.c    **** 
 458:Src/main.c    ****   /*Configure GPIO pin : USB_VBUS_Pin */
 459:Src/main.c    ****   GPIO_InitStruct.Pin = USB_VBUS_Pin;
 322              		.loc 1 459 3 view .LVU118
 323              		.loc 1 459 23 is_stmt 0 view .LVU119
 324 0162 4FF40073 		mov	r3, #512
 325 0166 0793     		str	r3, [sp, #28]
 460:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 326              		.loc 1 460 3 is_stmt 1 view .LVU120
 327              		.loc 1 460 24 is_stmt 0 view .LVU121
 328 0168 0894     		str	r4, [sp, #32]
 461:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 329              		.loc 1 461 3 is_stmt 1 view .LVU122
 330              		.loc 1 461 24 is_stmt 0 view .LVU123
 331 016a 0994     		str	r4, [sp, #36]
 462:Src/main.c    ****   HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
 332              		.loc 1 462 3 is_stmt 1 view .LVU124
 333 016c 07A9     		add	r1, sp, #28
 334 016e 1548     		ldr	r0, .L3+12
 335 0170 FFF7FEFF 		bl	HAL_GPIO_Init
 336              	.LVL11:
 463:Src/main.c    **** 
ARM GAS  /tmp/ccgQJtWE.s 			page 15


 464:Src/main.c    ****   /*Configure GPIO pin : Clock_Pin */
 465:Src/main.c    ****   GPIO_InitStruct.Pin = Clock_Pin;
 337              		.loc 1 465 3 view .LVU125
 338              		.loc 1 465 23 is_stmt 0 view .LVU126
 339 0174 4FF48053 		mov	r3, #4096
 340 0178 0793     		str	r3, [sp, #28]
 466:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 341              		.loc 1 466 3 is_stmt 1 view .LVU127
 342              		.loc 1 466 24 is_stmt 0 view .LVU128
 343 017a CDF820A0 		str	r10, [sp, #32]
 467:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 344              		.loc 1 467 3 is_stmt 1 view .LVU129
 345              		.loc 1 467 24 is_stmt 0 view .LVU130
 346 017e 0994     		str	r4, [sp, #36]
 468:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 347              		.loc 1 468 3 is_stmt 1 view .LVU131
 348              		.loc 1 468 25 is_stmt 0 view .LVU132
 349 0180 0A95     		str	r5, [sp, #40]
 469:Src/main.c    ****   HAL_GPIO_Init(Clock_GPIO_Port, &GPIO_InitStruct);
 350              		.loc 1 469 3 is_stmt 1 view .LVU133
 351 0182 07A9     		add	r1, sp, #28
 352 0184 4846     		mov	r0, r9
 353 0186 FFF7FEFF 		bl	HAL_GPIO_Init
 354              	.LVL12:
 470:Src/main.c    **** 
 471:Src/main.c    ****   /*Configure GPIO pin : Data_Pin */
 472:Src/main.c    ****   GPIO_InitStruct.Pin = Data_Pin;
 355              		.loc 1 472 3 view .LVU134
 356              		.loc 1 472 23 is_stmt 0 view .LVU135
 357 018a 0423     		movs	r3, #4
 358 018c 0793     		str	r3, [sp, #28]
 473:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 359              		.loc 1 473 3 is_stmt 1 view .LVU136
 360              		.loc 1 473 24 is_stmt 0 view .LVU137
 361 018e 0894     		str	r4, [sp, #32]
 474:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 362              		.loc 1 474 3 is_stmt 1 view .LVU138
 363              		.loc 1 474 24 is_stmt 0 view .LVU139
 364 0190 0994     		str	r4, [sp, #36]
 475:Src/main.c    ****   HAL_GPIO_Init(Data_GPIO_Port, &GPIO_InitStruct);
 365              		.loc 1 475 3 is_stmt 1 view .LVU140
 366 0192 07A9     		add	r1, sp, #28
 367 0194 0C48     		ldr	r0, .L3+16
 368 0196 FFF7FEFF 		bl	HAL_GPIO_Init
 369              	.LVL13:
 476:Src/main.c    **** 
 477:Src/main.c    ****   /*Configure GPIO pins : RMII_TX_EN_Pin RMII_TXD0_Pin */
 478:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_TX_EN_Pin|RMII_TXD0_Pin;
 370              		.loc 1 478 3 view .LVU141
 371              		.loc 1 478 23 is_stmt 0 view .LVU142
 372 019a 4FF42053 		mov	r3, #10240
 373 019e 0793     		str	r3, [sp, #28]
 479:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 374              		.loc 1 479 3 is_stmt 1 view .LVU143
 375              		.loc 1 479 24 is_stmt 0 view .LVU144
 376 01a0 0896     		str	r6, [sp, #32]
 480:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccgQJtWE.s 			page 16


 377              		.loc 1 480 3 is_stmt 1 view .LVU145
 378              		.loc 1 480 24 is_stmt 0 view .LVU146
 379 01a2 0994     		str	r4, [sp, #36]
 481:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 380              		.loc 1 481 3 is_stmt 1 view .LVU147
 381              		.loc 1 481 25 is_stmt 0 view .LVU148
 382 01a4 0A95     		str	r5, [sp, #40]
 482:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 383              		.loc 1 482 3 is_stmt 1 view .LVU149
 384              		.loc 1 482 29 is_stmt 0 view .LVU150
 385 01a6 CDF82C80 		str	r8, [sp, #44]
 483:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 386              		.loc 1 483 3 is_stmt 1 view .LVU151
 387 01aa 07A9     		add	r1, sp, #28
 388 01ac 3846     		mov	r0, r7
 389 01ae FFF7FEFF 		bl	HAL_GPIO_Init
 390              	.LVL14:
 484:Src/main.c    **** 
 485:Src/main.c    **** }
 391              		.loc 1 485 1 is_stmt 0 view .LVU152
 392 01b2 0DB0     		add	sp, sp, #52
 393              	.LCFI2:
 394              		.cfi_def_cfa_offset 36
 395              		@ sp needed
 396 01b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 397              	.L4:
 398              		.align	2
 399              	.L3:
 400 01b8 00380240 		.word	1073887232
 401 01bc 00180240 		.word	1073879040
 402 01c0 00001110 		.word	269549568
 403 01c4 00000240 		.word	1073872896
 404 01c8 000C0240 		.word	1073875968
 405 01cc 00040240 		.word	1073873920
 406 01d0 00080240 		.word	1073874944
 407              		.cfi_endproc
 408              	.LFE149:
 410              		.section	.text.MX_TIM6_Init,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu fpv5-d16
 417              	MX_TIM6_Init:
 418              	.LFB146:
 269:Src/main.c    **** 
 419              		.loc 1 269 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 16
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 30B5     		push	{r4, r5, lr}
 424              	.LCFI3:
 425              		.cfi_def_cfa_offset 12
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 5, -8
 428              		.cfi_offset 14, -4
 429 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccgQJtWE.s 			page 17


 430              	.LCFI4:
 431              		.cfi_def_cfa_offset 32
 275:Src/main.c    **** 
 432              		.loc 1 275 3 view .LVU154
 275:Src/main.c    **** 
 433              		.loc 1 275 27 is_stmt 0 view .LVU155
 434 0004 0025     		movs	r5, #0
 435 0006 0195     		str	r5, [sp, #4]
 436 0008 0295     		str	r5, [sp, #8]
 437 000a 0395     		str	r5, [sp, #12]
 280:Src/main.c    ****   htim6.Init.Prescaler = 54;
 438              		.loc 1 280 3 is_stmt 1 view .LVU156
 280:Src/main.c    ****   htim6.Init.Prescaler = 54;
 439              		.loc 1 280 18 is_stmt 0 view .LVU157
 440 000c 0A4C     		ldr	r4, .L7
 441 000e 0B4B     		ldr	r3, .L7+4
 442 0010 2360     		str	r3, [r4]
 281:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 443              		.loc 1 281 3 is_stmt 1 view .LVU158
 281:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 281 24 is_stmt 0 view .LVU159
 445 0012 3623     		movs	r3, #54
 446 0014 6360     		str	r3, [r4, #4]
 282:Src/main.c    ****   htim6.Init.Period = 99;
 447              		.loc 1 282 3 is_stmt 1 view .LVU160
 282:Src/main.c    ****   htim6.Init.Period = 99;
 448              		.loc 1 282 26 is_stmt 0 view .LVU161
 449 0016 A560     		str	r5, [r4, #8]
 283:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 450              		.loc 1 283 3 is_stmt 1 view .LVU162
 283:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 451              		.loc 1 283 21 is_stmt 0 view .LVU163
 452 0018 6323     		movs	r3, #99
 453 001a E360     		str	r3, [r4, #12]
 284:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 454              		.loc 1 284 3 is_stmt 1 view .LVU164
 284:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 455              		.loc 1 284 32 is_stmt 0 view .LVU165
 456 001c 8023     		movs	r3, #128
 457 001e A361     		str	r3, [r4, #24]
 285:Src/main.c    ****   {
 458              		.loc 1 285 3 is_stmt 1 view .LVU166
 285:Src/main.c    ****   {
 459              		.loc 1 285 7 is_stmt 0 view .LVU167
 460 0020 2046     		mov	r0, r4
 461 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 462              	.LVL15:
 289:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 463              		.loc 1 289 3 is_stmt 1 view .LVU168
 289:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 464              		.loc 1 289 37 is_stmt 0 view .LVU169
 465 0026 0195     		str	r5, [sp, #4]
 290:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 466              		.loc 1 290 3 is_stmt 1 view .LVU170
 290:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 467              		.loc 1 290 33 is_stmt 0 view .LVU171
 468 0028 0395     		str	r5, [sp, #12]
ARM GAS  /tmp/ccgQJtWE.s 			page 18


 291:Src/main.c    ****   {
 469              		.loc 1 291 3 is_stmt 1 view .LVU172
 291:Src/main.c    ****   {
 470              		.loc 1 291 7 is_stmt 0 view .LVU173
 471 002a 01A9     		add	r1, sp, #4
 472 002c 2046     		mov	r0, r4
 473 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 474              	.LVL16:
 299:Src/main.c    **** 
 475              		.loc 1 299 1 view .LVU174
 476 0032 05B0     		add	sp, sp, #20
 477              	.LCFI5:
 478              		.cfi_def_cfa_offset 12
 479              		@ sp needed
 480 0034 30BD     		pop	{r4, r5, pc}
 481              	.L8:
 482 0036 00BF     		.align	2
 483              	.L7:
 484 0038 00000000 		.word	htim6
 485 003c 00100040 		.word	1073745920
 486              		.cfi_endproc
 487              	.LFE146:
 489              		.section	.text.MX_TIM7_Init,"ax",%progbits
 490              		.align	1
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-d16
 496              	MX_TIM7_Init:
 497              	.LFB147:
 307:Src/main.c    **** 
 498              		.loc 1 307 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 16
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502 0000 30B5     		push	{r4, r5, lr}
 503              	.LCFI6:
 504              		.cfi_def_cfa_offset 12
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 508 0002 85B0     		sub	sp, sp, #20
 509              	.LCFI7:
 510              		.cfi_def_cfa_offset 32
 313:Src/main.c    **** 
 511              		.loc 1 313 3 view .LVU176
 313:Src/main.c    **** 
 512              		.loc 1 313 27 is_stmt 0 view .LVU177
 513 0004 0025     		movs	r5, #0
 514 0006 0195     		str	r5, [sp, #4]
 515 0008 0295     		str	r5, [sp, #8]
 516 000a 0395     		str	r5, [sp, #12]
 318:Src/main.c    ****   htim7.Init.Prescaler = 9000;
 517              		.loc 1 318 3 is_stmt 1 view .LVU178
 318:Src/main.c    ****   htim7.Init.Prescaler = 9000;
 518              		.loc 1 318 18 is_stmt 0 view .LVU179
 519 000c 0A4C     		ldr	r4, .L11
ARM GAS  /tmp/ccgQJtWE.s 			page 19


 520 000e 0B4B     		ldr	r3, .L11+4
 521 0010 2360     		str	r3, [r4]
 319:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 522              		.loc 1 319 3 is_stmt 1 view .LVU180
 319:Src/main.c    ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 523              		.loc 1 319 24 is_stmt 0 view .LVU181
 524 0012 42F22833 		movw	r3, #9000
 525 0016 6360     		str	r3, [r4, #4]
 320:Src/main.c    ****   htim7.Init.Period = 3000;
 526              		.loc 1 320 3 is_stmt 1 view .LVU182
 320:Src/main.c    ****   htim7.Init.Period = 3000;
 527              		.loc 1 320 26 is_stmt 0 view .LVU183
 528 0018 A560     		str	r5, [r4, #8]
 321:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 529              		.loc 1 321 3 is_stmt 1 view .LVU184
 321:Src/main.c    ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 530              		.loc 1 321 21 is_stmt 0 view .LVU185
 531 001a 40F6B833 		movw	r3, #3000
 532 001e E360     		str	r3, [r4, #12]
 322:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 533              		.loc 1 322 3 is_stmt 1 view .LVU186
 322:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 534              		.loc 1 322 32 is_stmt 0 view .LVU187
 535 0020 A561     		str	r5, [r4, #24]
 323:Src/main.c    ****   {
 536              		.loc 1 323 3 is_stmt 1 view .LVU188
 323:Src/main.c    ****   {
 537              		.loc 1 323 7 is_stmt 0 view .LVU189
 538 0022 2046     		mov	r0, r4
 539 0024 FFF7FEFF 		bl	HAL_TIM_Base_Init
 540              	.LVL17:
 327:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 541              		.loc 1 327 3 is_stmt 1 view .LVU190
 327:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 542              		.loc 1 327 37 is_stmt 0 view .LVU191
 543 0028 0195     		str	r5, [sp, #4]
 328:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 544              		.loc 1 328 3 is_stmt 1 view .LVU192
 328:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 545              		.loc 1 328 33 is_stmt 0 view .LVU193
 546 002a 0395     		str	r5, [sp, #12]
 329:Src/main.c    ****   {
 547              		.loc 1 329 3 is_stmt 1 view .LVU194
 329:Src/main.c    ****   {
 548              		.loc 1 329 7 is_stmt 0 view .LVU195
 549 002c 01A9     		add	r1, sp, #4
 550 002e 2046     		mov	r0, r4
 551 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 552              	.LVL18:
 337:Src/main.c    **** 
 553              		.loc 1 337 1 view .LVU196
 554 0034 05B0     		add	sp, sp, #20
 555              	.LCFI8:
 556              		.cfi_def_cfa_offset 12
 557              		@ sp needed
 558 0036 30BD     		pop	{r4, r5, pc}
 559              	.L12:
ARM GAS  /tmp/ccgQJtWE.s 			page 20


 560              		.align	2
 561              	.L11:
 562 0038 00000000 		.word	htim7
 563 003c 00140040 		.word	1073746944
 564              		.cfi_endproc
 565              	.LFE147:
 567              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 568              		.align	1
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv5-d16
 574              	MX_USART3_UART_Init:
 575              	.LFB148:
 345:Src/main.c    **** 
 576              		.loc 1 345 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580 0000 08B5     		push	{r3, lr}
 581              	.LCFI9:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 3, -8
 584              		.cfi_offset 14, -4
 354:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 585              		.loc 1 354 3 view .LVU198
 354:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 586              		.loc 1 354 19 is_stmt 0 view .LVU199
 587 0002 0948     		ldr	r0, .L15
 588 0004 094B     		ldr	r3, .L15+4
 589 0006 0360     		str	r3, [r0]
 355:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 590              		.loc 1 355 3 is_stmt 1 view .LVU200
 355:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 591              		.loc 1 355 24 is_stmt 0 view .LVU201
 592 0008 4FF4E133 		mov	r3, #115200
 593 000c 4360     		str	r3, [r0, #4]
 356:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 594              		.loc 1 356 3 is_stmt 1 view .LVU202
 356:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 595              		.loc 1 356 26 is_stmt 0 view .LVU203
 596 000e 0023     		movs	r3, #0
 597 0010 8360     		str	r3, [r0, #8]
 357:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 598              		.loc 1 357 3 is_stmt 1 view .LVU204
 357:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 599              		.loc 1 357 24 is_stmt 0 view .LVU205
 600 0012 C360     		str	r3, [r0, #12]
 358:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 601              		.loc 1 358 3 is_stmt 1 view .LVU206
 358:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 602              		.loc 1 358 22 is_stmt 0 view .LVU207
 603 0014 0361     		str	r3, [r0, #16]
 359:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 604              		.loc 1 359 3 is_stmt 1 view .LVU208
 359:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 605              		.loc 1 359 20 is_stmt 0 view .LVU209
ARM GAS  /tmp/ccgQJtWE.s 			page 21


 606 0016 0C22     		movs	r2, #12
 607 0018 4261     		str	r2, [r0, #20]
 360:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 608              		.loc 1 360 3 is_stmt 1 view .LVU210
 360:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 609              		.loc 1 360 25 is_stmt 0 view .LVU211
 610 001a 8361     		str	r3, [r0, #24]
 361:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 611              		.loc 1 361 3 is_stmt 1 view .LVU212
 361:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 612              		.loc 1 361 28 is_stmt 0 view .LVU213
 613 001c C361     		str	r3, [r0, #28]
 362:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 614              		.loc 1 362 3 is_stmt 1 view .LVU214
 362:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 615              		.loc 1 362 30 is_stmt 0 view .LVU215
 616 001e 0362     		str	r3, [r0, #32]
 363:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 617              		.loc 1 363 3 is_stmt 1 view .LVU216
 363:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 618              		.loc 1 363 38 is_stmt 0 view .LVU217
 619 0020 4362     		str	r3, [r0, #36]
 364:Src/main.c    ****   {
 620              		.loc 1 364 3 is_stmt 1 view .LVU218
 364:Src/main.c    ****   {
 621              		.loc 1 364 7 is_stmt 0 view .LVU219
 622 0022 FFF7FEFF 		bl	HAL_UART_Init
 623              	.LVL19:
 372:Src/main.c    **** 
 624              		.loc 1 372 1 view .LVU220
 625 0026 08BD     		pop	{r3, pc}
 626              	.L16:
 627              		.align	2
 628              	.L15:
 629 0028 00000000 		.word	huart3
 630 002c 00480040 		.word	1073760256
 631              		.cfi_endproc
 632              	.LFE148:
 634              		.section	.text.SystemClock_Config,"ax",%progbits
 635              		.align	1
 636              		.global	SystemClock_Config
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 640              		.fpu fpv5-d16
 642              	SystemClock_Config:
 643              	.LFB145:
 212:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 644              		.loc 1 212 1 is_stmt 1 view -0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 224
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648 0000 30B5     		push	{r4, r5, lr}
 649              	.LCFI10:
 650              		.cfi_def_cfa_offset 12
 651              		.cfi_offset 4, -12
 652              		.cfi_offset 5, -8
ARM GAS  /tmp/ccgQJtWE.s 			page 22


 653              		.cfi_offset 14, -4
 654 0002 B9B0     		sub	sp, sp, #228
 655              	.LCFI11:
 656              		.cfi_def_cfa_offset 240
 213:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 657              		.loc 1 213 3 view .LVU222
 213:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 658              		.loc 1 213 22 is_stmt 0 view .LVU223
 659 0004 3422     		movs	r2, #52
 660 0006 0021     		movs	r1, #0
 661 0008 2BA8     		add	r0, sp, #172
 662 000a FFF7FEFF 		bl	memset
 663              	.LVL20:
 214:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 664              		.loc 1 214 3 is_stmt 1 view .LVU224
 214:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 665              		.loc 1 214 22 is_stmt 0 view .LVU225
 666 000e 0024     		movs	r4, #0
 667 0010 2694     		str	r4, [sp, #152]
 668 0012 2794     		str	r4, [sp, #156]
 669 0014 2894     		str	r4, [sp, #160]
 670 0016 2994     		str	r4, [sp, #164]
 671 0018 2A94     		str	r4, [sp, #168]
 215:Src/main.c    **** 
 672              		.loc 1 215 3 is_stmt 1 view .LVU226
 215:Src/main.c    **** 
 673              		.loc 1 215 28 is_stmt 0 view .LVU227
 674 001a 9022     		movs	r2, #144
 675 001c 2146     		mov	r1, r4
 676 001e 02A8     		add	r0, sp, #8
 677 0020 FFF7FEFF 		bl	memset
 678              	.LVL21:
 219:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 679              		.loc 1 219 3 is_stmt 1 view .LVU228
 680              	.LBB8:
 219:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 681              		.loc 1 219 3 view .LVU229
 219:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 682              		.loc 1 219 3 view .LVU230
 683 0024 1E4B     		ldr	r3, .L19
 684 0026 1A6C     		ldr	r2, [r3, #64]
 685 0028 42F08052 		orr	r2, r2, #268435456
 686 002c 1A64     		str	r2, [r3, #64]
 219:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 687              		.loc 1 219 3 view .LVU231
 688 002e 1B6C     		ldr	r3, [r3, #64]
 689 0030 03F08053 		and	r3, r3, #268435456
 690 0034 0093     		str	r3, [sp]
 219:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 691              		.loc 1 219 3 view .LVU232
 692 0036 009B     		ldr	r3, [sp]
 693              	.LBE8:
 219:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 694              		.loc 1 219 3 view .LVU233
 220:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 695              		.loc 1 220 3 view .LVU234
 696              	.LBB9:
ARM GAS  /tmp/ccgQJtWE.s 			page 23


 220:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 697              		.loc 1 220 3 view .LVU235
 220:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 698              		.loc 1 220 3 view .LVU236
 699 0038 1A4B     		ldr	r3, .L19+4
 700 003a 1A68     		ldr	r2, [r3]
 701 003c 42F44042 		orr	r2, r2, #49152
 702 0040 1A60     		str	r2, [r3]
 220:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 703              		.loc 1 220 3 view .LVU237
 704 0042 1B68     		ldr	r3, [r3]
 705 0044 03F44043 		and	r3, r3, #49152
 706 0048 0193     		str	r3, [sp, #4]
 220:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 707              		.loc 1 220 3 view .LVU238
 708 004a 019B     		ldr	r3, [sp, #4]
 709              	.LBE9:
 220:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 710              		.loc 1 220 3 view .LVU239
 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 711              		.loc 1 223 3 view .LVU240
 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 712              		.loc 1 223 36 is_stmt 0 view .LVU241
 713 004c 0225     		movs	r5, #2
 714 004e 2B95     		str	r5, [sp, #172]
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 715              		.loc 1 224 3 is_stmt 1 view .LVU242
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 716              		.loc 1 224 30 is_stmt 0 view .LVU243
 717 0050 0123     		movs	r3, #1
 718 0052 2E93     		str	r3, [sp, #184]
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 719              		.loc 1 225 3 is_stmt 1 view .LVU244
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 720              		.loc 1 225 41 is_stmt 0 view .LVU245
 721 0054 1023     		movs	r3, #16
 722 0056 2F93     		str	r3, [sp, #188]
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 723              		.loc 1 226 3 is_stmt 1 view .LVU246
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 724              		.loc 1 226 34 is_stmt 0 view .LVU247
 725 0058 3195     		str	r5, [sp, #196]
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 726              		.loc 1 227 3 is_stmt 1 view .LVU248
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 727              		.loc 1 227 35 is_stmt 0 view .LVU249
 728 005a 3294     		str	r4, [sp, #200]
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 729              		.loc 1 228 3 is_stmt 1 view .LVU250
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 216;
 730              		.loc 1 228 30 is_stmt 0 view .LVU251
 731 005c 0823     		movs	r3, #8
 732 005e 3393     		str	r3, [sp, #204]
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 733              		.loc 1 229 3 is_stmt 1 view .LVU252
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 734              		.loc 1 229 30 is_stmt 0 view .LVU253
ARM GAS  /tmp/ccgQJtWE.s 			page 24


 735 0060 D823     		movs	r3, #216
 736 0062 3493     		str	r3, [sp, #208]
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 737              		.loc 1 230 3 is_stmt 1 view .LVU254
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 738              		.loc 1 230 30 is_stmt 0 view .LVU255
 739 0064 3595     		str	r5, [sp, #212]
 231:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 740              		.loc 1 231 3 is_stmt 1 view .LVU256
 231:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 741              		.loc 1 231 30 is_stmt 0 view .LVU257
 742 0066 3695     		str	r5, [sp, #216]
 232:Src/main.c    ****   {
 743              		.loc 1 232 3 is_stmt 1 view .LVU258
 232:Src/main.c    ****   {
 744              		.loc 1 232 7 is_stmt 0 view .LVU259
 745 0068 2BA8     		add	r0, sp, #172
 746 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 747              	.LVL22:
 238:Src/main.c    ****   {
 748              		.loc 1 238 3 is_stmt 1 view .LVU260
 238:Src/main.c    ****   {
 749              		.loc 1 238 7 is_stmt 0 view .LVU261
 750 006e FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 751              	.LVL23:
 244:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 752              		.loc 1 244 3 is_stmt 1 view .LVU262
 244:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 753              		.loc 1 244 31 is_stmt 0 view .LVU263
 754 0072 0F23     		movs	r3, #15
 755 0074 2693     		str	r3, [sp, #152]
 246:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 756              		.loc 1 246 3 is_stmt 1 view .LVU264
 246:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 757              		.loc 1 246 34 is_stmt 0 view .LVU265
 758 0076 2795     		str	r5, [sp, #156]
 247:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 759              		.loc 1 247 3 is_stmt 1 view .LVU266
 247:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 760              		.loc 1 247 35 is_stmt 0 view .LVU267
 761 0078 2894     		str	r4, [sp, #160]
 248:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 762              		.loc 1 248 3 is_stmt 1 view .LVU268
 248:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 763              		.loc 1 248 36 is_stmt 0 view .LVU269
 764 007a 4FF4A053 		mov	r3, #5120
 765 007e 2993     		str	r3, [sp, #164]
 249:Src/main.c    **** 
 766              		.loc 1 249 3 is_stmt 1 view .LVU270
 249:Src/main.c    **** 
 767              		.loc 1 249 36 is_stmt 0 view .LVU271
 768 0080 4FF48053 		mov	r3, #4096
 769 0084 2A93     		str	r3, [sp, #168]
 251:Src/main.c    ****   {
 770              		.loc 1 251 3 is_stmt 1 view .LVU272
 251:Src/main.c    ****   {
 771              		.loc 1 251 7 is_stmt 0 view .LVU273
ARM GAS  /tmp/ccgQJtWE.s 			page 25


 772 0086 0721     		movs	r1, #7
 773 0088 26A8     		add	r0, sp, #152
 774 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 775              	.LVL24:
 255:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 776              		.loc 1 255 3 is_stmt 1 view .LVU274
 255:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 777              		.loc 1 255 44 is_stmt 0 view .LVU275
 778 008e 4FF48073 		mov	r3, #256
 779 0092 0293     		str	r3, [sp, #8]
 256:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 780              		.loc 1 256 3 is_stmt 1 view .LVU276
 256:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 781              		.loc 1 256 44 is_stmt 0 view .LVU277
 782 0094 1594     		str	r4, [sp, #84]
 257:Src/main.c    ****   {
 783              		.loc 1 257 3 is_stmt 1 view .LVU278
 257:Src/main.c    ****   {
 784              		.loc 1 257 7 is_stmt 0 view .LVU279
 785 0096 02A8     		add	r0, sp, #8
 786 0098 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 787              	.LVL25:
 261:Src/main.c    **** 
 788              		.loc 1 261 1 view .LVU280
 789 009c 39B0     		add	sp, sp, #228
 790              	.LCFI12:
 791              		.cfi_def_cfa_offset 12
 792              		@ sp needed
 793 009e 30BD     		pop	{r4, r5, pc}
 794              	.L20:
 795              		.align	2
 796              	.L19:
 797 00a0 00380240 		.word	1073887232
 798 00a4 00700040 		.word	1073770496
 799              		.cfi_endproc
 800              	.LFE145:
 802              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 803              		.align	2
 804              	.LC0:
 805 0000 0D0A0A0A 		.ascii	"\015\012\012\012 In the MAIN  =>  TIM6 = %d -- TIM7"
 805      20496E20 
 805      74686520 
 805      4D41494E 
 805      20203D3E 
 806 0027 203D2025 		.ascii	" = %d\000"
 806      6400
 807              		.section	.text.main,"ax",%progbits
 808              		.align	1
 809              		.global	main
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv5-d16
 815              	main:
 816              	.LFB144:
 123:Src/main.c    ****   /* USER CODE BEGIN 1 */
 817              		.loc 1 123 1 is_stmt 1 view -0
ARM GAS  /tmp/ccgQJtWE.s 			page 26


 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 200
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821 0000 70B5     		push	{r4, r5, r6, lr}
 822              	.LCFI13:
 823              		.cfi_def_cfa_offset 16
 824              		.cfi_offset 4, -16
 825              		.cfi_offset 5, -12
 826              		.cfi_offset 6, -8
 827              		.cfi_offset 14, -4
 828 0002 B2B0     		sub	sp, sp, #200
 829              	.LCFI14:
 830              		.cfi_def_cfa_offset 216
 131:Src/main.c    **** 
 831              		.loc 1 131 3 view .LVU282
 832 0004 FFF7FEFF 		bl	HAL_Init
 833              	.LVL26:
 138:Src/main.c    **** 
 834              		.loc 1 138 3 view .LVU283
 835 0008 FFF7FEFF 		bl	SystemClock_Config
 836              	.LVL27:
 145:Src/main.c    ****   MX_TIM6_Init();
 837              		.loc 1 145 3 view .LVU284
 838 000c FFF7FEFF 		bl	MX_GPIO_Init
 839              	.LVL28:
 146:Src/main.c    ****   MX_TIM7_Init();
 840              		.loc 1 146 3 view .LVU285
 841 0010 FFF7FEFF 		bl	MX_TIM6_Init
 842              	.LVL29:
 147:Src/main.c    ****   MX_USART3_UART_Init();
 843              		.loc 1 147 3 view .LVU286
 844 0014 FFF7FEFF 		bl	MX_TIM7_Init
 845              	.LVL30:
 148:Src/main.c    ****   /* USER CODE BEGIN 2 */
 846              		.loc 1 148 3 view .LVU287
 847 0018 FFF7FEFF 		bl	MX_USART3_UART_Init
 848              	.LVL31:
 150:Src/main.c    ****     steer_enc_prescaler /= 3;
 849              		.loc 1 150 5 view .LVU288
 150:Src/main.c    ****     steer_enc_prescaler /= 3;
 850              		.loc 1 150 37 is_stmt 0 view .LVU289
 851 001c 2C4B     		ldr	r3, .L24
 852 001e DA68     		ldr	r2, [r3, #12]
 151:Src/main.c    ****     steer_enc_prescaler /= 20;
 853              		.loc 1 151 5 is_stmt 1 view .LVU290
 151:Src/main.c    ****     steer_enc_prescaler /= 20;
 854              		.loc 1 151 25 is_stmt 0 view .LVU291
 855 0020 2C4B     		ldr	r3, .L24+4
 856 0022 83FB0213 		smull	r1, r3, r3, r2
 857 0026 A3EBE273 		sub	r3, r3, r2, asr #31
 152:Src/main.c    ****     steer_enc_prescaler += 40;
 858              		.loc 1 152 5 is_stmt 1 view .LVU292
 152:Src/main.c    ****     steer_enc_prescaler += 40;
 859              		.loc 1 152 25 is_stmt 0 view .LVU293
 860 002a 2B4A     		ldr	r2, .L24+8
 861 002c 82FB0312 		smull	r1, r2, r2, r3
 862 0030 DB17     		asrs	r3, r3, #31
ARM GAS  /tmp/ccgQJtWE.s 			page 27


 863 0032 C3EBE203 		rsb	r3, r3, r2, asr #3
 153:Src/main.c    ****     enc.steer_enc_prescaler = steer_enc_prescaler;
 864              		.loc 1 153 5 is_stmt 1 view .LVU294
 153:Src/main.c    ****     enc.steer_enc_prescaler = steer_enc_prescaler;
 865              		.loc 1 153 25 is_stmt 0 view .LVU295
 866 0036 2833     		adds	r3, r3, #40
 867 0038 284A     		ldr	r2, .L24+12
 868 003a 1360     		str	r3, [r2]
 154:Src/main.c    **** 
 869              		.loc 1 154 5 is_stmt 1 view .LVU296
 154:Src/main.c    **** 
 870              		.loc 1 154 29 is_stmt 0 view .LVU297
 871 003c 284C     		ldr	r4, .L24+16
 872 003e A364     		str	r3, [r4, #72]
 158:Src/main.c    ****     enc.ClockPinNumber = GPIO_PIN_12;
 873              		.loc 1 158 5 is_stmt 1 view .LVU298
 158:Src/main.c    ****     enc.ClockPinNumber = GPIO_PIN_12;
 874              		.loc 1 158 22 is_stmt 0 view .LVU299
 875 0040 284B     		ldr	r3, .L24+20
 876 0042 C4F8CC33 		str	r3, [r4, #972]
 159:Src/main.c    ****     enc.DataPinName = GPIOD;
 877              		.loc 1 159 5 is_stmt 1 view .LVU300
 159:Src/main.c    ****     enc.DataPinName = GPIOD;
 878              		.loc 1 159 24 is_stmt 0 view .LVU301
 879 0046 4FF48053 		mov	r3, #4096
 880 004a A4F8D433 		strh	r3, [r4, #980]	@ movhi
 160:Src/main.c    ****     enc.DataPinNumber = GPIO_PIN_2;
 881              		.loc 1 160 5 is_stmt 1 view .LVU302
 160:Src/main.c    ****     enc.DataPinNumber = GPIO_PIN_2;
 882              		.loc 1 160 21 is_stmt 0 view .LVU303
 883 004e 264B     		ldr	r3, .L24+24
 884 0050 C4F8D033 		str	r3, [r4, #976]
 161:Src/main.c    **** 
 885              		.loc 1 161 5 is_stmt 1 view .LVU304
 161:Src/main.c    **** 
 886              		.loc 1 161 23 is_stmt 0 view .LVU305
 887 0054 0423     		movs	r3, #4
 888 0056 A4F8D633 		strh	r3, [r4, #982]	@ movhi
 163:Src/main.c    ****     enc.interrupt_flag = 0;
 889              		.loc 1 163 5 is_stmt 1 view .LVU306
 163:Src/main.c    ****     enc.interrupt_flag = 0;
 890              		.loc 1 163 18 is_stmt 0 view .LVU307
 891 005a 0125     		movs	r5, #1
 892 005c E564     		str	r5, [r4, #76]
 164:Src/main.c    ****     enc.TimerInstance = &a_TimerInstance6;
 893              		.loc 1 164 5 is_stmt 1 view .LVU308
 164:Src/main.c    ****     enc.TimerInstance = &a_TimerInstance6;
 894              		.loc 1 164 24 is_stmt 0 view .LVU309
 895 005e 0023     		movs	r3, #0
 896 0060 A360     		str	r3, [r4, #8]
 165:Src/main.c    ****     enc.average_speed = 0;
 897              		.loc 1 165 5 is_stmt 1 view .LVU310
 165:Src/main.c    ****     enc.average_speed = 0;
 898              		.loc 1 165 23 is_stmt 0 view .LVU311
 899 0062 224A     		ldr	r2, .L24+28
 900 0064 C4F8C423 		str	r2, [r4, #964]
 166:Src/main.c    ****     enc.wheel_diameter = 0.395;
ARM GAS  /tmp/ccgQJtWE.s 			page 28


 901              		.loc 1 166 5 is_stmt 1 view .LVU312
 166:Src/main.c    ****     enc.wheel_diameter = 0.395;
 902              		.loc 1 166 23 is_stmt 0 view .LVU313
 903 0068 0020     		movs	r0, #0
 904 006a 0021     		movs	r1, #0
 905 006c C4E9EE01 		strd	r0, [r4, #952]
 167:Src/main.c    ****     enc.data_size = 14;
 906              		.loc 1 167 5 is_stmt 1 view .LVU314
 167:Src/main.c    ****     enc.data_size = 14;
 907              		.loc 1 167 24 is_stmt 0 view .LVU315
 908 0070 1F4A     		ldr	r2, .L24+32
 909 0072 E265     		str	r2, [r4, #92]	@ float
 168:Src/main.c    ****     enc.clock_period = 2;
 910              		.loc 1 168 5 is_stmt 1 view .LVU316
 168:Src/main.c    ****     enc.clock_period = 2;
 911              		.loc 1 168 19 is_stmt 0 view .LVU317
 912 0074 0E22     		movs	r2, #14
 913 0076 2260     		str	r2, [r4]
 169:Src/main.c    ****     enc.wheel_rotation = 0;
 914              		.loc 1 169 5 is_stmt 1 view .LVU318
 169:Src/main.c    ****     enc.wheel_rotation = 0;
 915              		.loc 1 169 22 is_stmt 0 view .LVU319
 916 0078 0222     		movs	r2, #2
 917 007a E260     		str	r2, [r4, #12]
 170:Src/main.c    ****     enc.Km = 0;
 918              		.loc 1 170 5 is_stmt 1 view .LVU320
 170:Src/main.c    ****     enc.Km = 0;
 919              		.loc 1 170 24 is_stmt 0 view .LVU321
 920 007c 2365     		str	r3, [r4, #80]
 171:Src/main.c    **** 
 921              		.loc 1 171 5 is_stmt 1 view .LVU322
 171:Src/main.c    **** 
 922              		.loc 1 171 12 is_stmt 0 view .LVU323
 923 007e 0023     		movs	r3, #0
 924 0080 6365     		str	r3, [r4, #84]	@ float
 175:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim7);
 925              		.loc 1 175 3 is_stmt 1 view .LVU324
 926 0082 1C4E     		ldr	r6, .L24+36
 927 0084 3046     		mov	r0, r6
 928 0086 FFF7FEFF 		bl	HAL_TIM_Base_Start
 929              	.LVL32:
 176:Src/main.c    **** 
 930              		.loc 1 176 3 view .LVU325
 931 008a 3046     		mov	r0, r6
 932 008c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 933              	.LVL33:
 178:Src/main.c    **** 
 934              		.loc 1 178 3 view .LVU326
 178:Src/main.c    **** 
 935              		.loc 1 178 23 is_stmt 0 view .LVU327
 936 0090 194B     		ldr	r3, .L24+40
 937 0092 2366     		str	r3, [r4, #96]	@ float
 180:Src/main.c    ****     HAL_GPIO_WritePin(enc.ClockPinName, enc.ClockPinNumber, GPIO_PIN_SET);
 938              		.loc 1 180 5 is_stmt 1 view .LVU328
 180:Src/main.c    ****     HAL_GPIO_WritePin(enc.ClockPinName, enc.ClockPinNumber, GPIO_PIN_SET);
 939              		.loc 1 180 19 is_stmt 0 view .LVU329
 940 0094 194B     		ldr	r3, .L24+44
ARM GAS  /tmp/ccgQJtWE.s 			page 29


 941 0096 6366     		str	r3, [r4, #100]	@ float
 181:Src/main.c    **** 
 942              		.loc 1 181 5 is_stmt 1 view .LVU330
 943 0098 2A46     		mov	r2, r5
 944 009a B4F8D413 		ldrh	r1, [r4, #980]
 945 009e D4F8CC03 		ldr	r0, [r4, #972]
 946 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 947              	.LVL34:
 948              	.L22:
 187:Src/main.c    ****   {
 949              		.loc 1 187 3 discriminator 1 view .LVU331
 950              	.LBB10:
 191:Src/main.c    ****     int val = -1;
 951              		.loc 1 191 5 discriminator 1 view .LVU332
 191:Src/main.c    ****     int val = -1;
 952              		.loc 1 191 10 is_stmt 0 discriminator 1 view .LVU333
 953 00a6 0021     		movs	r1, #0
 954 00a8 0091     		str	r1, [sp]
 955 00aa C422     		movs	r2, #196
 956 00ac 01A8     		add	r0, sp, #4
 957 00ae FFF7FEFF 		bl	memset
 958              	.LVL35:
 192:Src/main.c    ****     int val2 = -1;
 959              		.loc 1 192 5 is_stmt 1 discriminator 1 view .LVU334
 193:Src/main.c    **** 
 960              		.loc 1 193 5 discriminator 1 view .LVU335
 195:Src/main.c    ****     val2 = __HAL_TIM_GET_COUNTER(&htim7);
 961              		.loc 1 195 5 discriminator 1 view .LVU336
 195:Src/main.c    ****     val2 = __HAL_TIM_GET_COUNTER(&htim7);
 962              		.loc 1 195 11 is_stmt 0 discriminator 1 view .LVU337
 963 00b2 074B     		ldr	r3, .L24
 964 00b4 1B68     		ldr	r3, [r3]
 965 00b6 5A6A     		ldr	r2, [r3, #36]
 966              	.LVL36:
 196:Src/main.c    ****     sprintf(altro, "\r\n\n\n In the MAIN  =>  TIM6 = %d -- TIM7 = %d", val, val2);
 967              		.loc 1 196 5 is_stmt 1 discriminator 1 view .LVU338
 196:Src/main.c    ****     sprintf(altro, "\r\n\n\n In the MAIN  =>  TIM6 = %d -- TIM7 = %d", val, val2);
 968              		.loc 1 196 12 is_stmt 0 discriminator 1 view .LVU339
 969 00b8 0E4B     		ldr	r3, .L24+36
 970 00ba 1B68     		ldr	r3, [r3]
 971 00bc 5B6A     		ldr	r3, [r3, #36]
 972              	.LVL37:
 197:Src/main.c    ****     print(&huart3, altro);
 973              		.loc 1 197 5 is_stmt 1 discriminator 1 view .LVU340
 974 00be 1049     		ldr	r1, .L24+48
 975 00c0 6846     		mov	r0, sp
 976 00c2 FFF7FEFF 		bl	sprintf
 977              	.LVL38:
 198:Src/main.c    **** 
 978              		.loc 1 198 5 discriminator 1 view .LVU341
 979 00c6 6946     		mov	r1, sp
 980 00c8 0E48     		ldr	r0, .L24+52
 981 00ca FFF7FEFF 		bl	print
 982              	.LVL39:
 983              	.LBE10:
 187:Src/main.c    ****   {
 984              		.loc 1 187 9 discriminator 1 view .LVU342
ARM GAS  /tmp/ccgQJtWE.s 			page 30


 985 00ce EAE7     		b	.L22
 986              	.L25:
 987              		.align	2
 988              	.L24:
 989 00d0 00000000 		.word	htim6
 990 00d4 56555555 		.word	1431655766
 991 00d8 67666666 		.word	1717986919
 992 00dc 00000000 		.word	steer_enc_prescaler
 993 00e0 00000000 		.word	enc
 994 00e4 00080240 		.word	1073874944
 995 00e8 000C0240 		.word	1073875968
 996 00ec 00000000 		.word	.LANCHOR0
 997 00f0 713DCA3E 		.word	1053441393
 998 00f4 00000000 		.word	htim7
 999 00f8 0000B442 		.word	1119092736
 1000 00fc 0000A042 		.word	1117782016
 1001 0100 00000000 		.word	.LC0
 1002 0104 00000000 		.word	huart3
 1003              		.cfi_endproc
 1004              	.LFE144:
 1006              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1007              		.align	1
 1008              		.global	HAL_TIM_PeriodElapsedCallback
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv5-d16
 1014              	HAL_TIM_PeriodElapsedCallback:
 1015              	.LVL40:
 1016              	.LFB150:
 486:Src/main.c    **** 
 487:Src/main.c    **** /* USER CODE BEGIN 4 */
 488:Src/main.c    **** // print on uart
 489:Src/main.c    **** // void print(UART_HandleTypeDef *huart, char *text)
 490:Src/main.c    **** // {
 491:Src/main.c    **** //   HAL_UART_Transmit(huart, (uint8_t *)text, strlen(text), 0xFFFF);
 492:Src/main.c    **** // }
 493:Src/main.c    **** 
 494:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 495:Src/main.c    **** {
 1017              		.loc 1 495 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		.loc 1 495 1 is_stmt 0 view .LVU344
 1022 0000 08B5     		push	{r3, lr}
 1023              	.LCFI15:
 1024              		.cfi_def_cfa_offset 8
 1025              		.cfi_offset 3, -8
 1026              		.cfi_offset 14, -4
 496:Src/main.c    ****   char mes[200] = "";
 1027              		.loc 1 496 3 is_stmt 1 view .LVU345
 497:Src/main.c    ****   int val = -1;
 1028              		.loc 1 497 3 view .LVU346
 1029              	.LVL41:
 498:Src/main.c    ****   int val2 = -1;
 1030              		.loc 1 498 3 view .LVU347
ARM GAS  /tmp/ccgQJtWE.s 			page 31


 499:Src/main.c    **** 
 500:Src/main.c    ****   val = __HAL_TIM_GET_COUNTER(&htim6);
 1031              		.loc 1 500 3 view .LVU348
 1032              		.loc 1 500 9 is_stmt 0 view .LVU349
 1033 0002 064B     		ldr	r3, .L30
 1034 0004 1B68     		ldr	r3, [r3]
 1035 0006 5B6A     		ldr	r3, [r3, #36]
 1036              	.LVL42:
 501:Src/main.c    ****   val2 = __HAL_TIM_GET_COUNTER(&htim7);
 1037              		.loc 1 501 3 is_stmt 1 view .LVU350
 1038              		.loc 1 501 10 is_stmt 0 view .LVU351
 1039 0008 054B     		ldr	r3, .L30+4
 1040 000a 1A68     		ldr	r2, [r3]
 1041 000c 526A     		ldr	r2, [r2, #36]
 1042              	.LVL43:
 502:Src/main.c    ****   // sprintf(mes, "\r\n TIM6 = %d -- TIM7 = %d", val, val2);
 503:Src/main.c    ****   // print(&huart3, mes);
 504:Src/main.c    ****   /**
 505:Src/main.c    ****    * This interrupt is used to start the clock to retrieve the data frame from the encoder
 506:Src/main.c    ****   */
 507:Src/main.c    ****   if (htim == &htim7)
 1043              		.loc 1 507 3 is_stmt 1 view .LVU352
 1044              		.loc 1 507 6 is_stmt 0 view .LVU353
 1045 000e 8342     		cmp	r3, r0
 1046 0010 00D0     		beq	.L29
 1047              	.LVL44:
 1048              	.L26:
 508:Src/main.c    ****     {
 509:Src/main.c    ****         encoder_tim_interrupt(&enc);
 510:Src/main.c    ****     }
 511:Src/main.c    **** 
 512:Src/main.c    ****  
 513:Src/main.c    **** }
 1049              		.loc 1 513 1 view .LVU354
 1050 0012 08BD     		pop	{r3, pc}
 1051              	.LVL45:
 1052              	.L29:
 509:Src/main.c    ****     }
 1053              		.loc 1 509 9 is_stmt 1 view .LVU355
 1054 0014 0348     		ldr	r0, .L30+8
 1055              	.LVL46:
 509:Src/main.c    ****     }
 1056              		.loc 1 509 9 is_stmt 0 view .LVU356
 1057 0016 FFF7FEFF 		bl	encoder_tim_interrupt
 1058              	.LVL47:
 1059              		.loc 1 513 1 view .LVU357
 1060 001a FAE7     		b	.L26
 1061              	.L31:
 1062              		.align	2
 1063              	.L30:
 1064 001c 00000000 		.word	htim6
 1065 0020 00000000 		.word	htim7
 1066 0024 00000000 		.word	enc
 1067              		.cfi_endproc
 1068              	.LFE150:
 1070              		.section	.rodata.check_steer_error.str1.4,"aMS",%progbits,1
 1071              		.align	2
ARM GAS  /tmp/ccgQJtWE.s 			page 32


 1072              	.LC1:
 1073 0000 0A457272 		.ascii	"\012Error during the SSI reading!\012\000"
 1073      6F722064 
 1073      7572696E 
 1073      67207468 
 1073      65205353 
 1074              		.section	.text.check_steer_error,"ax",%progbits
 1075              		.align	1
 1076              		.global	check_steer_error
 1077              		.syntax unified
 1078              		.thumb
 1079              		.thumb_func
 1080              		.fpu fpv5-d16
 1082              	check_steer_error:
 1083              	.LVL48:
 1084              	.LFB151:
 514:Src/main.c    **** 
 515:Src/main.c    **** // void read_steer_SSI()
 516:Src/main.c    **** // {
 517:Src/main.c    **** //   // char message[256] = "";
 518:Src/main.c    **** //   // char message2[256] = "";
 519:Src/main.c    **** //   // char mes[200] = "";
 520:Src/main.c    **** //   // int val = -1;
 521:Src/main.c    **** //   // int val2 = -1;
 522:Src/main.c    **** 
 523:Src/main.c    **** //   // sprintf(message, "\r\n data_count = %u -- clock_status = %u", steer.data_count, steer.clock
 524:Src/main.c    **** //   // // sprintf(message2, "\r\nSpeed1 = %f -- Speed2 = %f", wheel_speed, wheel_speed2);
 525:Src/main.c    **** //   // print(&huart3, message);
 526:Src/main.c    **** //   // // print(&huart3, message2);
 527:Src/main.c    **** //   // val = __HAL_TIM_GET_COUNTER(&htim6);
 528:Src/main.c    **** //   // val2 = __HAL_TIM_GET_COUNTER(&htim7);
 529:Src/main.c    **** //   // sprintf(mes, "\r\n Inside the SSI  =>  TIM6 = %d -- TIM7 = %d", val, val2);
 530:Src/main.c    **** //   // print(&huart3, mes);
 531:Src/main.c    **** //   // check if the status of clock given as input for the encoder
 532:Src/main.c    **** //   if (steer.data_count < steer.data_size)
 533:Src/main.c    **** //   {
 534:Src/main.c    **** 
 535:Src/main.c    **** //     if (steer.clock_status)
 536:Src/main.c    **** //     {
 537:Src/main.c    **** //       // In this case the clock is falling, so we are in the middle of the bit sent by the encod
 538:Src/main.c    **** //       // so, we can read the bit and be sure that it is correct
 539:Src/main.c    **** //       steer.clock_status = 0;
 540:Src/main.c    **** //       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_RESET);
 541:Src/main.c    **** //       // In the first falling there is no data, so we start reading only from the second falling
 542:Src/main.c    **** //       if (steer.data_count > 0)
 543:Src/main.c    **** //       {
 544:Src/main.c    **** //         steer.data[steer.data_count] = HAL_GPIO_ReadPin(steer.DataPinName, steer.DataPinNumber);
 545:Src/main.c    **** //         if (steer.data[steer.data_count])
 546:Src/main.c    **** //         {
 547:Src/main.c    **** //           HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 548:Src/main.c    **** //         }
 549:Src/main.c    **** //       }
 550:Src/main.c    **** //     }
 551:Src/main.c    **** //     else
 552:Src/main.c    **** //     {
 553:Src/main.c    **** //       /* In this case the clock is rising and the encoder is giving us the next bit to read */
 554:Src/main.c    **** //       steer.clock_status = 1;
ARM GAS  /tmp/ccgQJtWE.s 			page 33


 555:Src/main.c    **** //       HAL_GPIO_WritePin(steer.ClockPinName, steer.data_size, GPIO_PIN_SET);
 556:Src/main.c    **** //       steer.data_count++;
 557:Src/main.c    **** //     }
 558:Src/main.c    **** //   }
 559:Src/main.c    **** //   else if (steer.data_count == steer.data_size)
 560:Src/main.c    **** //   {
 561:Src/main.c    **** //     /**
 562:Src/main.c    **** //      * Now we can start to convert the binary number and get the angle of the steering.
 563:Src/main.c    **** //      * Then we are going to restart the timer 7 in order to get another data frame
 564:Src/main.c    **** //     */
 565:Src/main.c    **** 
 566:Src/main.c    **** //     steer.converted_data = bin_dec(steer.data, steer.data_size);
 567:Src/main.c    **** //     steer.data_count = 0;
 568:Src/main.c    **** 
 569:Src/main.c    **** //     // char resolution_mes[256] = "";
 570:Src/main.c    **** //     // sprintf(resolution_mes, "\r\nresolution = %u \n", steer.converted_data);
 571:Src/main.c    **** //     // print(&huart3, resolution_mes);
 572:Src/main.c    **** 
 573:Src/main.c    **** //     // stop the timer 6 and restart the timer 7
 574:Src/main.c    **** //     HAL_TIM_Base_Stop(&htim6);
 575:Src/main.c    **** //     // The next line it is not necessary but can be a good practice
 576:Src/main.c    **** //     __HAL_TIM_SET_COUNTER(&htim6, 0);
 577:Src/main.c    **** 
 578:Src/main.c    **** //     HAL_TIM_Base_Start(&htim7);
 579:Src/main.c    **** //     HAL_TIM_Base_Start_IT(&htim7);
 580:Src/main.c    **** //   }
 581:Src/main.c    **** //   else
 582:Src/main.c    **** //   {
 583:Src/main.c    **** //     /* in this case we have an error */
 584:Src/main.c    **** //     check_steer_error(&steer);
 585:Src/main.c    **** //   }
 586:Src/main.c    **** // }
 587:Src/main.c    **** 
 588:Src/main.c    **** void check_steer_error(steer_enc *steer)
 589:Src/main.c    **** {
 1085              		.loc 1 589 1 is_stmt 1 view -0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089              		.loc 1 589 1 is_stmt 0 view .LVU359
 1090 0000 10B5     		push	{r4, lr}
 1091              	.LCFI16:
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 4, -8
 1094              		.cfi_offset 14, -4
 1095 0002 0446     		mov	r4, r0
 590:Src/main.c    ****   steer->error_flag = 1;
 1096              		.loc 1 590 3 is_stmt 1 view .LVU360
 1097              		.loc 1 590 21 is_stmt 0 view .LVU361
 1098 0004 0123     		movs	r3, #1
 1099 0006 4360     		str	r3, [r0, #4]
 591:Src/main.c    ****   steer->error_data_status = HAL_GPIO_ReadPin(steer->DataPinName, steer->DataPinNumber);
 1100              		.loc 1 591 3 is_stmt 1 view .LVU362
 1101              		.loc 1 591 30 is_stmt 0 view .LVU363
 1102 0008 B0F87210 		ldrh	r1, [r0, #114]
 1103 000c C06E     		ldr	r0, [r0, #108]
 1104              	.LVL49:
ARM GAS  /tmp/ccgQJtWE.s 			page 34


 1105              		.loc 1 591 30 view .LVU364
 1106 000e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1107              	.LVL50:
 1108              		.loc 1 591 28 view .LVU365
 1109 0012 A060     		str	r0, [r4, #8]
 592:Src/main.c    ****   print(&huart3, "\nError during the SSI reading!\n");
 1110              		.loc 1 592 3 is_stmt 1 view .LVU366
 1111 0014 0249     		ldr	r1, .L34
 1112 0016 0348     		ldr	r0, .L34+4
 1113 0018 FFF7FEFF 		bl	print
 1114              	.LVL51:
 593:Src/main.c    **** }
 1115              		.loc 1 593 1 is_stmt 0 view .LVU367
 1116 001c 10BD     		pop	{r4, pc}
 1117              	.LVL52:
 1118              	.L35:
 1119              		.loc 1 593 1 view .LVU368
 1120 001e 00BF     		.align	2
 1121              	.L34:
 1122 0020 00000000 		.word	.LC1
 1123 0024 00000000 		.word	huart3
 1124              		.cfi_endproc
 1125              	.LFE151:
 1127              		.section	.text.Error_Handler,"ax",%progbits
 1128              		.align	1
 1129              		.global	Error_Handler
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1133              		.fpu fpv5-d16
 1135              	Error_Handler:
 1136              	.LFB152:
 594:Src/main.c    **** 
 595:Src/main.c    **** //function to calculate the decimal value from MSB binary array
 596:Src/main.c    **** //bin = pointer to binary array
 597:Src/main.c    **** //max = size of the array
 598:Src/main.c    **** // int bin_dec(int *bin, int size)
 599:Src/main.c    **** // {
 600:Src/main.c    **** 
 601:Src/main.c    **** //   int dec = 0;
 602:Src/main.c    **** 
 603:Src/main.c    **** //   for (int i = 0; i < size; i++)
 604:Src/main.c    **** //   {
 605:Src/main.c    **** //     if (bin[i] == 1)
 606:Src/main.c    **** //     {
 607:Src/main.c    **** //       dec += Power(2, size - i - 1);
 608:Src/main.c    **** //     }
 609:Src/main.c    **** //   }
 610:Src/main.c    **** //   return dec;
 611:Src/main.c    **** // }
 612:Src/main.c    **** 
 613:Src/main.c    **** // //function to calculate the power of a given number
 614:Src/main.c    **** // double Power(int base, int expn)
 615:Src/main.c    **** // {
 616:Src/main.c    **** 
 617:Src/main.c    **** //   double result = 1;
 618:Src/main.c    **** 
ARM GAS  /tmp/ccgQJtWE.s 			page 35


 619:Src/main.c    **** //   if (expn != 0)
 620:Src/main.c    **** //   {
 621:Src/main.c    **** //     for (int j = 0; j < expn; j++)
 622:Src/main.c    **** //     {
 623:Src/main.c    **** //       result = result * base;
 624:Src/main.c    **** //     }
 625:Src/main.c    **** //   }
 626:Src/main.c    **** 
 627:Src/main.c    **** //   return result;
 628:Src/main.c    **** // }
 629:Src/main.c    **** 
 630:Src/main.c    **** /* USER CODE END 4 */
 631:Src/main.c    **** 
 632:Src/main.c    **** /**
 633:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 634:Src/main.c    ****   * @retval None
 635:Src/main.c    ****   */
 636:Src/main.c    **** void Error_Handler(void)
 637:Src/main.c    **** {
 1137              		.loc 1 637 1 is_stmt 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		@ link register save eliminated.
 638:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 639:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 640:Src/main.c    **** 
 641:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 642:Src/main.c    **** }
 1142              		.loc 1 642 1 view .LVU370
 1143 0000 7047     		bx	lr
 1144              		.cfi_endproc
 1145              	.LFE152:
 1147              		.comm	second_millis,4,4
 1148              		.comm	previous_millis,4,4
 1149              		.comm	encoder_counter,4,4
 1150              		.comm	steer_enc_prescaler,4,4
 1151              		.global	hmessage
 1152              		.global	a_TimerInstance7
 1153              		.global	a_TimerInstance6
 1154              		.comm	huart3,128,4
 1155              		.comm	htim7,64,4
 1156              		.comm	htim6,64,4
 1157              		.section	.bss.hmessage,"aw",%nobits
 1158              		.align	2
 1161              	hmessage:
 1162 0000 00000000 		.space	256
 1162      00000000 
 1162      00000000 
 1162      00000000 
 1162      00000000 
 1163              		.section	.data.a_TimerInstance6,"aw"
 1164              		.align	2
 1165              		.set	.LANCHOR0,. + 0
 1168              	a_TimerInstance6:
 1169 0000 00100040 		.word	1073745920
 1170 0004 00000000 		.space	60
ARM GAS  /tmp/ccgQJtWE.s 			page 36


 1170      00000000 
 1170      00000000 
 1170      00000000 
 1170      00000000 
 1171              		.section	.data.a_TimerInstance7,"aw"
 1172              		.align	2
 1175              	a_TimerInstance7:
 1176 0000 00140040 		.word	1073746944
 1177 0004 00000000 		.space	60
 1177      00000000 
 1177      00000000 
 1177      00000000 
 1177      00000000 
 1178              		.text
 1179              	.Letext0:
 1180              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1181              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1182              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1183              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1184              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1185              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1186              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1187              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1188              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1189              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1190              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1191              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1192              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1193              		.file 15 "/usr/arm-none-eabi/include/sys/lock.h"
 1194              		.file 16 "/usr/arm-none-eabi/include/sys/_types.h"
 1195              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 1196              		.file 18 "/usr/arm-none-eabi/include/sys/reent.h"
 1197              		.file 19 "/usr/arm-none-eabi/include/stdlib.h"
 1198              		.file 20 "/usr/arm-none-eabi/include/math.h"
 1199              		.file 21 "Inc/Eagle_TRT.h"
 1200              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1201              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 1202              		.file 24 "/usr/arm-none-eabi/include/stdio.h"
 1203              		.file 25 "<built-in>"
ARM GAS  /tmp/ccgQJtWE.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccgQJtWE.s:17     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccgQJtWE.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccgQJtWE.s:400    .text.MX_GPIO_Init:00000000000001b8 $d
     /tmp/ccgQJtWE.s:411    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/ccgQJtWE.s:417    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/ccgQJtWE.s:484    .text.MX_TIM6_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim6
     /tmp/ccgQJtWE.s:490    .text.MX_TIM7_Init:0000000000000000 $t
     /tmp/ccgQJtWE.s:496    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
     /tmp/ccgQJtWE.s:562    .text.MX_TIM7_Init:0000000000000038 $d
                            *COM*:0000000000000040 htim7
     /tmp/ccgQJtWE.s:568    .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccgQJtWE.s:574    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccgQJtWE.s:629    .text.MX_USART3_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart3
     /tmp/ccgQJtWE.s:635    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccgQJtWE.s:642    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccgQJtWE.s:797    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccgQJtWE.s:803    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccgQJtWE.s:808    .text.main:0000000000000000 $t
     /tmp/ccgQJtWE.s:815    .text.main:0000000000000000 main
     /tmp/ccgQJtWE.s:989    .text.main:00000000000000d0 $d
                            *COM*:0000000000000004 steer_enc_prescaler
     /tmp/ccgQJtWE.s:1007   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccgQJtWE.s:1014   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccgQJtWE.s:1064   .text.HAL_TIM_PeriodElapsedCallback:000000000000001c $d
     /tmp/ccgQJtWE.s:1071   .rodata.check_steer_error.str1.4:0000000000000000 $d
     /tmp/ccgQJtWE.s:1075   .text.check_steer_error:0000000000000000 $t
     /tmp/ccgQJtWE.s:1082   .text.check_steer_error:0000000000000000 check_steer_error
     /tmp/ccgQJtWE.s:1122   .text.check_steer_error:0000000000000020 $d
     /tmp/ccgQJtWE.s:1128   .text.Error_Handler:0000000000000000 $t
     /tmp/ccgQJtWE.s:1135   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 second_millis
                            *COM*:0000000000000004 previous_millis
                            *COM*:0000000000000004 encoder_counter
     /tmp/ccgQJtWE.s:1161   .bss.hmessage:0000000000000000 hmessage
     /tmp/ccgQJtWE.s:1175   .data.a_TimerInstance7:0000000000000000 a_TimerInstance7
     /tmp/ccgQJtWE.s:1168   .data.a_TimerInstance6:0000000000000000 a_TimerInstance6
     /tmp/ccgQJtWE.s:1158   .bss.hmessage:0000000000000000 $d
     /tmp/ccgQJtWE.s:1164   .data.a_TimerInstance6:0000000000000000 $d
     /tmp/ccgQJtWE.s:1172   .data.a_TimerInstance7:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_TIM_Base_Start
ARM GAS  /tmp/ccgQJtWE.s 			page 38


HAL_TIM_Base_Start_IT
sprintf
print
enc
encoder_tim_interrupt
HAL_GPIO_ReadPin
